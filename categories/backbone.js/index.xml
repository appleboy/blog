<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Backbone.js on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</title><link>https://blog.wu-boy.com/categories/backbone.js/</link><description>Recent content in Backbone.js on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Wed, 09 Sep 2015 06:40:41 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/backbone.js/index.xml" rel="self" type="application/rss+xml"/><item><title>JavaScript in 2015</title><link>https://blog.wu-boy.com/2015/09/javascript-in-2015/</link><pubDate>Wed, 09 Sep 2015 06:40:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/09/javascript-in-2015/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/21271865261/in/datetaken-public/" title="Screen Shot 2015-09-09 at 2.03.34 PM">&lt;img src="https://i2.wp.com/farm6.staticflickr.com/5834/21271865261_3f445489d7_n.jpg?resize=320%2C195&amp;#038;ssl=1" alt="Screen Shot 2015-09-09 at 2.03.34 PM" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在這幾年的趨勢看來，&lt;a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript">JavaScript&lt;/a> 已經環繞在各領域了，不管在 Web 前端或後端，上層或下層，都充滿了 JavaScript，其實都是托 &lt;a href="https://nodejs.org/en/">Node.js&lt;/a> 的福，網路上看到這篇 &lt;a href="http://survivejs.github.io/frontend-in-2015/">JavaScript in 2015&lt;/a>，裡面講到 JavaScript 所有的工具，不管前端到後端，每一年都有新的工具跟新的 Framework，從以前寫 &lt;a href="http://backbonejs.org/">Backbone&lt;/a> 到 &lt;a href="https://angularjs.org/">Angular.js&lt;/a> 到現在 &lt;a href="http://facebook.github.io/react/">React.js&lt;/a> 改變了整個 JavaScript View 的生態，工具流程整合從 &lt;a href="http://gruntjs.com/">Grunt.js&lt;/a> 到 &lt;a href="http://gulpjs.com/">Gulp.js&lt;/a> 的出現，整個生態又轉換了，大家陸續將工具全都轉到 Gulp，最後又出來一套 &lt;a href="https://webpack.github.io/">Webpack&lt;/a>，Webpack 出現基本上不會影響 gulp 發展，因為 Webpack 還是有很多限制，在前端或後端在上 Production 前的一些流程像是 copy 檔案等，這些是 webpack 無法整合的，看到這些工具一一出現，也不知道明年或現在會不會又跑出一套新的玩具，讓整個 JavaScript 生態整個改變。寫上層的同時，看到同事在寫底層，同事就會跑過來拍拍我肩膀說：『好險我是搞 Kernel，搞上層就要跟你們一樣天天追新技術，永遠沒有停止的一天』。看一下全世界 Job Trends&lt;/p></description></item><item><title>Backbone.js 1.1.1 Release 釋出 AMD 版本</title><link>https://blog.wu-boy.com/2014/02/backbone-js-1-1-1-amd-release/</link><pubDate>Mon, 17 Feb 2014 05:48:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/02/backbone-js-1-1-1-amd-release/</guid><description>Backbone.js 在 2014.02.13 推出 1.1.1 版本，此次改版沒有推出重大功能，距離上次 1.1.0 版本只有經過四個月，時間也沒有很長。之前版本尚未支援 AMD，所以都是使用 amdjs/backbone 版本，但是這次 Backbone 官方直接釋出 AMD 版本，那之後就照官方版本走就可以了，底下是這次改版 Release note
釋出 AMD (require.js) 版本 新增 execute hook 讓開發者可以處理特定 route arguments Backbone Event 效能改善 處理相容舊瀏覽器 URL Unicode 近幾年 Javascript Framework 串起，似乎現在大家瘋狂的跟 Angularjs，所以 Backbone 似乎進度也沒有很快了，就像 PHP Framework 一樣，Laravel 的出現，讓其他 Framework 變得比較少討論了</description></item><item><title>Javscript 18 歲生日歷史演進</title><link>https://blog.wu-boy.com/2013/12/happy-18th-birthday-javascript/</link><pubDate>Sat, 07 Dec 2013 11:41:50 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/12/happy-18th-birthday-javascript/</guid><description>&lt;p>在 &lt;a href="http://resin.io/blog/" target="_blank">resin.io&lt;/a> 看到這篇 &lt;a href="http://resin.io/happy-18th-birthday-javascript/" target="_blank">Happy 18th Birthday JavaScript! A look at an unlikely past and bright future.&lt;/a> 裡面有些 Javascript 發展史，蠻有趣的，分享給大家看看。18 年前由 Netscape 和 Sun 共同 Release Javscript，在當年18天後，Ruby 也同時&lt;a href="http://en.wikipedia.org/wiki/Ruby_(programming_language)#First_publication" target="_blank">發佈&lt;/a>了，底下來看看 Javscript 歷史演進。&lt;/p></description></item><item><title>將 Backbone Framework 升級到 1.1.0 注意事項</title><link>https://blog.wu-boy.com/2013/11/upgrade-backbone-framework-to-1-1-0-tips/</link><pubDate>Thu, 14 Nov 2013 06:26:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/11/upgrade-backbone-framework-to-1-1-0-tips/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://backbonejs.org/" target="_blank">Backbone.js&lt;/a> 經過了半年終於在 10 月 &lt;a href="http://backbonejs.org/#changelog">Release 了 1.1.0 版本&lt;/a>，這次升級最重要的一點就是，Backbone 本來在 View 有支援 options，讓你可以透過初始化過程，將自定額外的 key 及 value 帶入，並且可以隨時透過 this.options.key 的方式取得資料。直接給例子來解說好了&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">this.example = new Backbone.View.extend({
template_name: "user_edit",
el: "#main"
});&lt;/pre> 上面是宣告 Backbone.view 的寫法，程式設計師可以傳入 object 設定，並且可以在程式任意地方，使用
&lt;p>&lt;strong>&lt;span style="color:green">this.example.options.template_name&lt;/span>&lt;/strong> 方式來得到 &lt;strong>&lt;span style="color:green">user_edit&lt;/span>&lt;/strong> 值，如果是使用 Backbone 1.1.0 之前的版本都沒問題，要升級到 1.1.0，又想要此功能，請務必在 view 的宣告前就必須加一段程式碼(後面解說)。為什麼作者會拿掉呢？因為有開發者發 issue 說&lt;a href="https://github.com/jashkenas/backbone/issues/2458" target="_blank">為什麼 View 有這功能，那 Model 為什麼沒有呢？&lt;/a>，這會讓未來加入開發的程式設計師感到困擾，所以作者就決定拿掉這塊&lt;/p></description></item><item><title>CodeIgniter REST Server with Backbone.js Issue</title><link>https://blog.wu-boy.com/2013/09/codeigniter-rest-server-with-backbone-js-issue/</link><pubDate>Fri, 20 Sep 2013 04:20:20 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/09/codeigniter-rest-server-with-backbone-js-issue/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div> 如果有在用
&lt;p>&lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a> 來當作 &lt;a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">REST&lt;/a> Server 的朋友們，我相信都會找到 &lt;a href="http://philsturgeon.co.uk/" target="_blank">philsturgeon&lt;/a> 所寫的 &lt;a href="https://github.com/philsturgeon/codeigniter-restserver" target="_blank">codeigniter-restserver&lt;/a>，此套件幫你完成底層 API Response 動作，讓你可以輕易處理 REST URL。但是如果拿這套程式碼來搭配 &lt;a href="http://backbonejs.org/" target="_blank">Backbone.js&lt;/a> 你會遇到拿不到 POST 或 PUT 變數問題，作者來一一描述。&lt;/p></description></item><item><title>Backbone Routing pushState in IE</title><link>https://blog.wu-boy.com/2013/05/backbone-routing-pushstate-in-ie/</link><pubDate>Thu, 09 May 2013 05:26:58 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/05/backbone-routing-pushstate-in-ie/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div> Backbone.js 幫忙處理掉所有瀏覽器
&lt;p>&lt;a href="http://diveintohtml5.info/history.html" target="_blank">Html5 History pushState&lt;/a> 功能，除了 IE 9 以下(含 IE 9)不支援 &lt;strong>history.pushState()&lt;/strong> 跟 &lt;strong>history.replaceState()&lt;/strong>，其他 Browser 幾乎都支援了，在 &lt;a href="http://backbonejs.org" target="_blank">Backbone.js&lt;/a> 如何處理 URL 變化呢？以往透過 handle URL hash 來決定網頁要處理哪些資料，這也是 Backbone 預設的處理方式，範例如下 URL:&lt;/p>
&lt;blockquote>
&lt;p>http://xxx/#!/user/list http://xxx/#!/user/add&lt;/p>
&lt;/blockquote></description></item><item><title>Backbone.js rewrite into CoffeeScript?</title><link>https://blog.wu-boy.com/2013/03/backbone-js-rewrite-into-coffeescript/</link><pubDate>Fri, 01 Mar 2013 13:56:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/03/backbone-js-rewrite-into-coffeescript/</guid><description>看到 @gsamokovarov 提出將 Backbone.js 改寫成 CoffeeScript 架構的 Pull request，結果官方團隊其中一位開發作者回應了一張圖，代表他的心情 XD，各位有興趣可以點上面連結看看，後來有其他人回應說，為什麼官方不用 CoffeeScript 來寫了，發此 Pull Request 的作者也有說，他只是將架構改成 CoffeeScript 讓大家參考看看而已，沒有真的希望可以納入整個 Backbone.js 專案，如果有其他開發者需要的話，一樣可以 fork 此專案，說明文件也用 docco 產生好了，可以參考此連結，官方作者也提到，大部份的第3方 Library 還是不會使用 CoffeeScript 來當作基底開發，畢竟並非所有人都知道 CoffeeScript，如果官方想這麼開發的話，早就再 2010 年丟釋出 Backbone.js 的時候就直接採用了，不會拖到現在還沒出來，當然最後官方也希望將此 pull request 寫到 wiki 裡面給大家參考，等待原作者補開發動機及細節。</description></item><item><title>Backbone.js event bind 新功能 listenTo and stopListening</title><link>https://blog.wu-boy.com/2013/02/backbone-js-event-bind-listento-and-stoplistening/</link><pubDate>Wed, 13 Feb 2013 04:42:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/02/backbone-js-event-bind-listento-and-stoplistening/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div> 之前寫了一篇
&lt;p>&lt;a href="http://blog.wu-boy.com/2012/04/introduction-to-backbone-js-event/" target="_blank">Backbone.js Event 事件介紹&lt;/a>，簡介 &lt;a href="http://backbonejs.org/#Events" target="_blank">Backbone.js Events&lt;/a> 如何使用 &lt;a href="http://backbonejs.org/#Events-on" target="_blank">on&lt;/a> 跟 &lt;a href="http://backbonejs.org/#Events-off" target="_blank">off&lt;/a> 來處理事件，在升級 Backbone 到 0.9.9 過程中，其中一項重大新功能就是 Backbone &lt;a href="http://backbonejs.org/#Events-listenTo" target="_blank">listenTo&lt;/a> and &lt;a href="http://backbonejs.org/#Events-stopListening" target="_blank">stopListening&lt;/a>，大家來看看 Change logs:&lt;/p>
&lt;blockquote>
&lt;p>Added listenTo and stopListening to Events. They can be used as inversion-of-control flavors of on and off, for convenient unbinding of all events an object is currently listening to. view.remove() automatically calls view.stopListening().&lt;/p>
&lt;/blockquote></description></item><item><title>Backbone.js Model and Collection Tregger Event</title><link>https://blog.wu-boy.com/2012/11/backbone-js-model-and-collection-tregger-event/</link><pubDate>Thu, 22 Nov 2012 05:10:05 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/11/backbone-js-model-and-collection-tregger-event/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="backbone by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/7059615321/">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div> 之前寫過一篇
&lt;p>&lt;a href="http://blog.wu-boy.com/2012/04/introduction-to-backbone-js-event/" target="_blank">Backbone.js Event 的介紹&lt;/a>，最近開發專案遇到一個奇怪問題，就是只要我重複呼叫 backbone.model.fetch()，如果資料相同的話，就不會重新 trigger render() 畫面，但是專案架構是以 &lt;a href="http://backbonejs.org" target="_blank">Backbone.js&lt;/a> MVC 下去開發，這樣畫面就會卡在 init 狀態，無法將畫面顯示出來。先來探討 Backbone.js Model 跟 Collection 預設的事件。&lt;/p></description></item><item><title>Backbone.js Event 事件介紹</title><link>https://blog.wu-boy.com/2012/04/introduction-to-backbone-js-event/</link><pubDate>Thu, 12 Apr 2012 13:06:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/04/introduction-to-backbone-js-event/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div> 今天我們可以來介紹
&lt;p>&lt;a href="http://documentcloud.github.com/backbone/#Events" target="_blank">Backbone.js Event&lt;/a> 事件，介紹 Event 之前，大家可以先看看 &lt;a href="http://blog.wu-boy.com/2012/04/backbonejs-framework-tutorial-example-1/" target="_blank">Backbone.js 的初學介紹&lt;/a>，該教學文件可以學習如何載入 Backbone.js library，利用此套件如何去制定各種事件。Backbone.js 提供了3個 method 去控制事件產生、移除、執行，分別是 &lt;a href="http://documentcloud.github.com/backbone/#Events-on" target="_blank">on(bind)&lt;/a>、&lt;a href="http://documentcloud.github.com/backbone/#Events-off" target="_blank">off(unbind)&lt;/a>、&lt;a href="http://documentcloud.github.com/backbone/#Events-trigger" target="_blank">trigger&lt;/a>。文字上寫得很清楚 on 就等於 bind，off 就是 unbind，最後就是如何去 trigger 事件。底下就來簡單舉例:&lt;/p></description></item><item><title>Javascript 前端工具 Backbone.js Framework 初學介紹</title><link>https://blog.wu-boy.com/2012/04/backbonejs-framework-tutorial-example-1/</link><pubDate>Mon, 09 Apr 2012 12:01:27 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/04/backbonejs-framework-tutorial-example-1/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div> 我相信大家對於後端程式
&lt;p>&lt;a href="http://www.php.net" target="_blank">PHP&lt;/a>, &lt;a href="http://www.ruby-lang.org/zh_TW/" target="_blank">Ruby&lt;/a>, &lt;a href="http://www.python.org/" target="_blank">Python&lt;/a> .. 等語言都已經相當熟悉，進階開發者也都接觸了好用的後端 Framework 如 &lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a>, &lt;a href="http://cakephp.org/" target="_blank">CakePHP&lt;/a>, &lt;a href="https://www.djangoproject.com/" target="_blank">Django&lt;/a>, &lt;a href="http://rubyonrails.org/" target="_blank">Ruby on Rail&lt;/a>, &lt;a href="http://www.yiiframework.com/" target="_blank">Yii&lt;/a>, &lt;a href="http://www.symfony-project.org/" target="_blank">Symfony&lt;/a> .. 等，用 Framework 最大的好處並不是在 Framework 提供了大量工具，而是制定了 MVC 架構，讓專案多位開發者可以遵循，上了講了這麼多後端 MVC Framework，那麼前端呢？接下來介紹前端強大工具: &lt;a href="http://documentcloud.github.com/backbone/" target="_blank">Backbone.js&lt;/a>&lt;/p>
&lt;h3 id="什麼是-backbonejs-簡單來說-backbonejs-就是一套前端-javascript-framework它提供-mvc-架構相信大家都玩過後端-mvc那至於前端呢好像比較少人提到這就是介紹-backbonejs-最主要的目的backbonejs-包含了-model-view-controller-來讓使者操作model-提供了key-value-結構以及可以-binding-大量-event開發者可以透過-restful-json-interface-來跟-backbonejs-的-model-及-collection-搭配如果想瞭解-backbonejs-線上文件可以參考">什麼是 Backbone.js 簡單來說 Backbone.js 就是一套前端 Javascript Framework，它提供 MVC 架構，相信大家都玩過後端 MVC，那至於前端呢，好像比較少人提到，這就是介紹 Backbone.js 最主要的目的。Backbone.js 包含了 Model View Controller 來讓使者操作，Model 提供了key-value 結構，以及可以 binding 大量 event，開發者可以透過 RESTful JSON interface 來跟 Backbone.js 的 Model 及 Collection 搭配。如果想瞭解 Backbone.js 線上文件可以參考&lt;/h3>
&lt;p>&lt;a href="http://github.com/documentcloud/backbone/" target="_blank">GitHub 網站&lt;/a>，如果想瞭解程式碼可以參考 &lt;a href="http://documentcloud.github.com/backbone/docs/backbone.html" target="_blank">source code 註解&lt;/a>。&lt;/p></description></item><item><title>jQuery stopPropagation 和 stopImmediatePropagation 比較</title><link>https://blog.wu-boy.com/2012/03/jquery-different-form-stoppropagation-with-stopimmediatepropagation/</link><pubDate>Wed, 28 Mar 2012 09:14:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/03/jquery-different-form-stoppropagation-with-stopimmediatepropagation/</guid><description>近期在幫公司導入 Backbone.js 技術，把後台全面改寫成 Javascript MVC 架構，技術包含 jQuery + Backbone.js + Underscore.js + Mustache Template，這些技術我想可以寫另外一篇 Backbone.js 初體驗，這邊就先不多說了，在 Backbone.js 的 View 架構裡，可以任意 bind events，程式碼如下:
RT.View = Backbone.View.extend({ initialize: function() { if (this.model) { this.model.bind(&amp;quot;change&amp;quot;, this.render, this); } if (this.collection) { this.collection.bind(&amp;quot;all&amp;quot;, this.render, this); } }, events: { 'click .add': 'add', 'click .edit': 'edit', 'click .delete': 'delete_item', 'click .delete_all': 'delete_all' }, add: function(e) {
}, )};
上面程式碼可以看到，將 click 事件綁在不同 Class 上，但是問題來了，如果同時 new 兩個 RT.</description></item></channel></rss>