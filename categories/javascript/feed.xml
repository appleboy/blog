<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/categories/javascript/</link><description>Recent content in javascript on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Thu, 13 Oct 2016 07:19:44 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/javascript/feed.xml" rel="self" type="application/rss+xml"/><item><title>用 Yarn 取代 Npm 管理 JavaScript 套件版本</title><link>https://blog.wu-boy.com/2016/10/replcae-npm-with-yarn-package-management/</link><pubDate>Thu, 13 Oct 2016 07:19:44 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/10/replcae-npm-with-yarn-package-management/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/29998255630/in/dateposted-public/" title="yarn-kitten-full">&lt;img src="https://i1.wp.com/c7.staticflickr.com/6/5712/29998255630_b40ff9df74_z.jpg?resize=640%2C287&amp;#038;ssl=1" alt="yarn-kitten-full" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>新一代戰神 &lt;a href="https://yarnpkg.com/">Yarn&lt;/a> 終於在昨天出爐了，Yarn 跟 &lt;a href="https://www.npmjs.com/">Npm&lt;/a> 一樣都是 JavaScript 套件版本管理工具，但是 Npm 令人詬病的是安裝都是非常的慢，快取機制用起來效果也不是很好，所以 Yarn 的出現解決了這些問題，透過 Yarn 安裝過的套件都會在家目錄產生 Cache (目錄在 &lt;code>~/.yarn-cache/&lt;/code>)，也就是只要安裝過一次，下次砍掉 &lt;code>node_modules&lt;/code> 目錄重新安裝都會從 Cache 讀取。Yarn 詳細的功能架構可以參考 Facebook 發表的 &lt;a href="https://code.facebook.com/posts/1840075619545360">Yarn: A new package manager for JavaScript&lt;/a>，本篇不會教大家怎麼使用 Yarn，因為指令實在是太容易了，可以參考官方提供的&lt;a href="https://yarnpkg.com/en/docs/migrating-from-npm">如何從 npm 轉換到 yarn&lt;/a>，底下則是來測試比較兩者安裝套件的速度。&lt;/p></description></item><item><title>用一行指令加速 npm install</title><link>https://blog.wu-boy.com/2016/07/speed-up-npm-install-command/</link><pubDate>Sun, 10 Jul 2016 15:44:07 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/07/speed-up-npm-install-command/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/24588632402/in/dateposted-public/" title="Npm-logo.svg">&lt;img src="https://i2.wp.com/farm2.staticflickr.com/1564/24588632402_35c2cab0b6_z.jpg?resize=640%2C249&amp;#038;ssl=1" alt="Npm-logo.svg" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>不久之前寫過一篇 &lt;a href="https://blog.wu-boy.com/2016/01/speed-up-npm-install/">提升 npm install 安裝速度&lt;/a>，但是發現速度還是沒有變快，在 DevOps 的流程花在 &lt;code>npm install&lt;/code> 的時間非常冗長，造成每次測試或 Deploy 都要花大量時間等待，且吃掉很多機器的資源，本篇要提供一個小技巧改善 npm install 安裝時間，其實簡單來說就是 cache 第一次安裝好的 &lt;code>node_modules&lt;/code> 目錄，之後每次安裝就拿 cache 目錄來新增或減少 packages 即可。&lt;/p></description></item><item><title>ScaleDrone Websocket 平台從 Node.js 轉換到 Golang</title><link>https://blog.wu-boy.com/2016/05/scaledrone-websocket-from-nodejs-to-go/</link><pubDate>Sun, 22 May 2016 07:51:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/05/scaledrone-websocket-from-nodejs-to-go/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080">&lt;img src="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" alt="">&lt;/a>&lt;/p>
&lt;p>又看到一間網路平台公司從 &lt;a href="https://nodejs.org/en/">Node.js&lt;/a> 跳到 &lt;a href="https://golang.org/">Golang&lt;/a> 了。&lt;a href="http://www.scaledrone.com">ScaleDrone&lt;/a> 是一間提供了 &lt;a href="https://en.wikipedia.org/wiki/WebSocket">websocket&lt;/a> 服務的公司，讓 web 可以透過 ScaleDrone 即時將訊息傳播到各種瀏覽器，但是今天看到 ScaleDrone 即將把後端平台使用的語言從 &lt;a href="http://blog.scaledrone.com/posts/nodejs-to-go">Node.js 轉換到 Golang&lt;/a>，為什麼要轉語言呢，官方提到大量的 Websocket 連線，讓伺服器記憶體快吃不消了，然而 ScaleDrone 用 Go 語言來實際測試，發現記憶體不但沒有增加，反而還降低了 response 及 connections 時間。底下是針對 Node.js vs Go 語言轉換比較。&lt;/p></description></item><item><title>基礎 JavaScript ES6 和 CSS cheat sheet PDF 下載</title><link>https://blog.wu-boy.com/2016/05/javascript-es6-css-cheat-sheet-pdf/</link><pubDate>Fri, 20 May 2016 02:00:19 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/05/javascript-es6-css-cheat-sheet-pdf/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/16407404782" title="es6-logo">&lt;img src="https://i1.wp.com/farm8.staticflickr.com/7306/16407404782_1be42bc8f8_o.png?resize=400%2C400&amp;#038;ssl=1" alt="es6-logo" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>在 &lt;a href="https://www.toptal.com">Toptal&lt;/a> Blog 看到 &lt;a href="https://www.toptal.com/javascript/javascript-es6-cheat-sheet">JavaScript Cheat Sheet: ES6 And Beyond&lt;/a> 及另外一篇 &lt;a href="https://www.toptal.com/css/css-cheat-sheet">A Practical CSS Cheat Sheet by Toptal Developers&lt;/a>，這兩篇提供了一些 JavaScript ES6 及 CSS 的基礎寫法及教學，蠻適合前端工程師將 PDF 印出來貼在座位前面，cheat sheet 內提供的語法幾乎都是天天在用，像是在 ES2015 內 &lt;code>let&lt;/code> vs &lt;code>var&lt;/code> 語法差別，什麼時候要用 &lt;code>const&lt;/code> 或 &lt;code>let&lt;/code>，或 Template String，預設參數 .. 等功能，其實非常不賴。CSS 則是介紹基本的 Box Model、Selectors、Pseudo-selectors .. 等。&lt;/p></description></item><item><title>來聊聊 PHP &amp; JavaScript &amp; CSS 的 Coding Style</title><link>https://blog.wu-boy.com/2016/04/php-javascript-css-coding-style/</link><pubDate>Tue, 26 Apr 2016 06:55:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/04/php-javascript-css-coding-style/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/26625548056/in/dateposted-public/" title="Screen Shot 2016-04-20 at 11.47.45 PM">&lt;img src="https://i0.wp.com/farm2.staticflickr.com/1676/26625548056_192cb60246_z.jpg?resize=640%2C395&amp;#038;ssl=1" alt="Screen Shot 2016-04-20 at 11.47.45 PM" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>專案開始前，要決定好前端或後端各用什麼語言及制定符合團隊的 &lt;a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Coding_Style">Coding Style&lt;/a>，統一團隊 Style 是非常重要的，尤其是專案需要經過 Code Review 步驟，不要造成 Reviewer 困擾。底下寫了一份投影片介紹 &lt;a href="https://secure.php.net/">PHP&lt;/a> &amp;amp; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript&lt;/a> 及 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS&lt;/a> 的基本 Coding Style 及該如何透過工具來改善 Coding Style。&lt;/p></description></item><item><title>提升 npm install 安裝速度</title><link>https://blog.wu-boy.com/2016/01/speed-up-npm-install/</link><pubDate>Sun, 31 Jan 2016 03:36:24 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/01/speed-up-npm-install/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/24588632402/in/dateposted-public/" title="Npm-logo.svg">&lt;img src="https://i2.wp.com/farm2.staticflickr.com/1564/24588632402_35c2cab0b6_z.jpg?resize=640%2C249&amp;#038;ssl=1" alt="Npm-logo.svg" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.npmjs.com/">npm&lt;/a> 是 &lt;a href="https://nodejs.org/en/">Node.js&lt;/a> 套件管理模組，相信大家對 npm 不會很陌生，如果對於 npm 不了解的，可以參考&lt;a href="http://www.ruanyifeng.com/">阮一峰&lt;/a>寫的&lt;a href="http://www.ruanyifeng.com/blog/2016/01/npm-install.html">這篇文章&lt;/a>，今天要來探討的是如何提升 &lt;code>npm install&lt;/code> 的安裝速度，如果你正在嘗試 npm@3 版本，我建議可以先換到 npm@2 的版本會比較快（為什麼呢？底下有數據會說話）。&lt;a href="https://github.com/npm/npm/issues/9632">Github issue&lt;/a> 上也蠻多速度上的討論，然而前幾天有網友&lt;a href="https://github.com/npm/npm/issues/11283">發表一篇&lt;/a>關掉 &lt;code>progress&lt;/code> 提升不少速度，實際上我們可以拿專案來測試 npm@2 及 npm@3 的速度看看。&lt;/p></description></item><item><title>TJ 的新作品 frontend boilerplate 前端工具整合</title><link>https://blog.wu-boy.com/2015/12/tj-frontend-boilerplate/</link><pubDate>Thu, 31 Dec 2015 01:26:39 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/12/tj-frontend-boilerplate/</guid><description>今天突然看到 TJ 開了一個新 Repo 是 frontend boilerplate 嚇到我了，自從 TJ 去年發表要轉向 Go 之後，就把他自己很多的 Node.js Project 轉給其他人維護，也漸漸沒在 Github 上面活動，但是今天又看到她整理了一份 frontend boilerplate，內容含了現代流行的前端開發工具，大家可以參考看看，是個不錯的 Template:
Webpack React Redux Babel Autoprefixer PostCSS CSS modules Rucksack Hot reloading Redux router Redux effects TodoMVC example 期待 TJ 能有其他新作品啊。</description></item><item><title>JavaScript in 2015</title><link>https://blog.wu-boy.com/2015/09/javascript-in-2015/</link><pubDate>Wed, 09 Sep 2015 06:40:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/09/javascript-in-2015/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/21271865261/in/datetaken-public/" title="Screen Shot 2015-09-09 at 2.03.34 PM">&lt;img src="https://i2.wp.com/farm6.staticflickr.com/5834/21271865261_3f445489d7_n.jpg?resize=320%2C195&amp;#038;ssl=1" alt="Screen Shot 2015-09-09 at 2.03.34 PM" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在這幾年的趨勢看來，&lt;a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript">JavaScript&lt;/a> 已經環繞在各領域了，不管在 Web 前端或後端，上層或下層，都充滿了 JavaScript，其實都是托 &lt;a href="https://nodejs.org/en/">Node.js&lt;/a> 的福，網路上看到這篇 &lt;a href="http://survivejs.github.io/frontend-in-2015/">JavaScript in 2015&lt;/a>，裡面講到 JavaScript 所有的工具，不管前端到後端，每一年都有新的工具跟新的 Framework，從以前寫 &lt;a href="http://backbonejs.org/">Backbone&lt;/a> 到 &lt;a href="https://angularjs.org/">Angular.js&lt;/a> 到現在 &lt;a href="http://facebook.github.io/react/">React.js&lt;/a> 改變了整個 JavaScript View 的生態，工具流程整合從 &lt;a href="http://gruntjs.com/">Grunt.js&lt;/a> 到 &lt;a href="http://gulpjs.com/">Gulp.js&lt;/a> 的出現，整個生態又轉換了，大家陸續將工具全都轉到 Gulp，最後又出來一套 &lt;a href="https://webpack.github.io/">Webpack&lt;/a>，Webpack 出現基本上不會影響 gulp 發展，因為 Webpack 還是有很多限制，在前端或後端在上 Production 前的一些流程像是 copy 檔案等，這些是 webpack 無法整合的，看到這些工具一一出現，也不知道明年或現在會不會又跑出一套新的玩具，讓整個 JavaScript 生態整個改變。寫上層的同時，看到同事在寫底層，同事就會跑過來拍拍我肩膀說：『好險我是搞 Kernel，搞上層就要跟你們一樣天天追新技術，永遠沒有停止的一天』。看一下全世界 Job Trends&lt;/p></description></item><item><title>Laravel Presenter 在 Controller 的使用</title><link>https://blog.wu-boy.com/2015/09/how-to-use-laravel-presenter-in-controller/</link><pubDate>Fri, 04 Sep 2015 01:28:48 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/09/how-to-use-laravel-presenter-in-controller/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="https://github.com/laravel-auto-presenter/laravel-auto-presenter">Laravel Auto Presenter&lt;/a> 是一套用在 view 裡的 decorates objects，搭配資料庫時，如果有需要組合或整合欄位來顯示相關資訊，這套就非常適合使用在 &lt;a href="http://laravel.com/">Laravel&lt;/a> View 裡，如果不是透過 Laravel Auto Presenter，開發者也可以利用 &lt;a href="http://laravel.com/docs/5.1/eloquent-mutators#accessors-and-mutators">Laravel Accessors &amp;amp; Mutators&lt;/a> 來實現這方法，只是這要寫在 Model 層，寫法如下，此做法寫起來蠻亂的，而且也並不是每個地方都需要擴充這些欄位。&lt;/p>
&lt;div>
&lt;pre class="brush: php; title: ; notranslate" title="">/**
* The accessors to append to the model's array form.
*
* @var array
*/
protected $appends = [
'is_twitter',
];
&lt;p>/**&lt;/p>
&lt;ul>
&lt;li>Get the user&amp;rsquo;s is_twitter flag.&lt;/li>
&lt;li>&lt;/li>
&lt;li>@param string $value&lt;/li>
&lt;li>@return string
*/
public function getIsTwitterAttribute()
{
return (bool) ($this-&amp;gt;attributes[&amp;lsquo;options&amp;rsquo;] &amp;amp; self::$OPTIONS[&amp;lsquo;is_twitter&amp;rsquo;]);
}&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Facebook React Jest 搭配 Webpack 測試</title><link>https://blog.wu-boy.com/2015/08/facebook-react-jest-with-webpack/</link><pubDate>Tue, 11 Aug 2015 03:31:58 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/08/facebook-react-jest-with-webpack/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/19850322514/in/dateposted-public/" title="logo_og">&lt;img src="https://i2.wp.com/farm1.staticflickr.com/462/19850322514_1f88fd5d6c_n.jpg?resize=320%2C320&amp;#038;ssl=1" alt="logo_og" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>寫 &lt;a href="http://facebook.github.io/react/">Facebook React&lt;/a> 就是要搭配 &lt;a href="https://webpack.github.io/">Webpack&lt;/a>，Webpack 已經是前端開發的必備工具，要測試 React Component 就是要用 Facebook 開發的 &lt;a href="http://facebook.github.io/jest/">Jest 框架&lt;/a>，使用 Webpack 也許會搭配 &lt;a href="http://lesscss.org/">Less&lt;/a> or &lt;a href="http://sass-lang.com/">Sass&lt;/a> Loader 讓每個 component 都可以獨立有 CSS 檔案。要在 JS 內直接引入 CSS 檔案寫法如下&lt;/p>
&lt;div>
&lt;pre class="brush: jscript; title: ; notranslate" title="">import '!style!css!less!./Schedule.less';
import React, { Component } from 'react';&lt;/pre>
&lt;/div></description></item><item><title>Awesome List</title><link>https://blog.wu-boy.com/2015/07/awesome-list/</link><pubDate>Wed, 01 Jul 2015 01:17:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/07/awesome-list/</guid><description>@sindresorhus 建立一個強大的專案叫做 awesome，裡面收集了各式各樣的 Awesome List，包含 Programming Languages, Front-end Development, Back-end Development 等等，只要可以收集到非常 Awesome 的 Project List，經過大家認證，認為收集此列表非常俱有價值性，而不是把一堆教學文件集合在一起，程式開發者必定參考到這裡面列表。看到有人提出加入 Regular Expression 列表，@arthurvr 就回覆底下
That&amp;rsquo;s not what an awesome list should be. It should be a curated list of the best things. Not a &amp;ldquo;collection of everything&amp;rdquo; 原發問者不了解 curated list of the best things，最後 @sindresorhus 拿了 w3schools 來回答為什麼 w3schools 總是能在搜尋排行榜第一名
Because they use sleazy and spammy SEO optimizations to get there. 有夠好笑的，原來大家都是很討厭 w3schools，難怪會有 W3Schools Hider 外掛</description></item><item><title>用一張圖學習 JavaScript</title><link>https://blog.wu-boy.com/2015/06/learning-javascript-in-one-pic/</link><pubDate>Sun, 28 Jun 2015 02:48:04 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/06/learning-javascript-in-one-pic/</guid><description>&lt;p>&lt;strong>2015.07.03 作者出了 &lt;a href="http://coodict.github.io/javascript-in-one-pic/">GitHub Page&lt;/a> 線上版&lt;/strong>&lt;/p>
&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/19224697601" title="javascript-logo by Bo-Yi Wu, on Flickr">&lt;img src="https://i0.wp.com/c4.staticflickr.com/4/3701/19224697601_6b600f21eb_m.jpg?resize=240%2C240&amp;#038;ssl=1" alt="javascript-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在 &lt;a href="https://github.com">GitHub&lt;/a> 上的 &lt;a href="https://github.com/coodict/javascript-in-one-pic">javascript-in-one-pic&lt;/a> 作者將 &lt;a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript">JavaScript&lt;/a> 一些基本用法整理成 PDF, PNG .. 等版本，讓開發者可以一目了然學習基本 JavaScript 用法，這專案啟動沒多久就一堆人 Star 了，看到作者是參考之前我有參與翻譯的 &lt;a href="http://bonsaiden.github.io/JavaScript-Garden/">JavaScript Garden&lt;/a> 及 &lt;a href="http://www.amazon.cn/gp/offer-listing/1118026691/">Professional JavaScript for Web Developers&lt;/a> 這本書，目前尚未全部整理完整，已經整理的目錄如下&lt;/p></description></item><item><title>簡介 JavaScript ES6 物件及陣列</title><link>https://blog.wu-boy.com/2015/06/getting-started-with-javascript-es6-destructuring/</link><pubDate>Sun, 21 Jun 2015 08:01:30 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/06/getting-started-with-javascript-es6-destructuring/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/16407404782" title="es6-logo by Bo-Yi Wu, on Flickr">&lt;img src="https://i1.wp.com/farm8.staticflickr.com/7306/16407404782_8b9c57eab3_m.jpg?resize=240%2C240&amp;#038;ssl=1" alt="es6-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>今年 2015 六月 17 號 &lt;a href="http://www.ecma-international.org/">Ecma International&lt;/a> 已經同意 &lt;a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMA-262 6th edition&lt;/a> 版本，這是在 &lt;a href="http://www.infoq.com/news/2015/06/ecmascript-2015-es6">ECMAScript 2015 Has Been Approved&lt;/a> 看到的消息，而現在主流就是以 &lt;a href="https://babeljs.io">Babeljs&lt;/a> 為主，將 ES2015 語法直接轉換成 ES5，讓各大瀏覽器可以繼續支援 ES2015 寫法。今天來介紹 ES2015 內如何使用物件 (Object) 或陣列 (Array)。&lt;/p></description></item><item><title>Node.js Mocha 延遲測試</title><link>https://blog.wu-boy.com/2015/05/node-js-mocha-delay-testing/</link><pubDate>Fri, 08 May 2015 01:24:30 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/05/node-js-mocha-delay-testing/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://i0.wp.com/blog.wu-boy.com/wp-content/uploads/2015/05/687474703a2f2f662e636c2e6c792f6974656d732f336c316b306e32413155334d3149314c323130702f53637265656e25323053686f74253230323031322d30322d32342532306174253230322e32312e3433253230504d2e706e67.png">&lt;img src="https://i0.wp.com/blog.wu-boy.com/wp-content/uploads/2015/05/687474703a2f2f662e636c2e6c792f6974656d732f336c316b306e32413155334d3149314c323130702f53637265656e25323053686f74253230323031322d30322d32342532306174253230322e32312e3433253230504d2e706e67-300x134.png?resize=300%2C134" alt="687474703a2f2f662e636c2e6c792f6974656d732f336c316b306e32413155334d3149314c323130702f53637265656e25323053686f74253230323031322d30322d32342532306174253230322e32312e3433253230504d2e706e67" class="aligncenter size-medium wp-image-5729" srcset="https://i0.wp.com/blog.wu-boy.com/wp-content/uploads/2015/05/687474703a2f2f662e636c2e6c792f6974656d732f336c316b306e32413155334d3149314c323130702f53637265656e25323053686f74253230323031322d30322d32342532306174253230322e32312e3433253230504d2e706e67.png?resize=300%2C134&amp;ssl=1 300w, https://i0.wp.com/blog.wu-boy.com/wp-content/uploads/2015/05/687474703a2f2f662e636c2e6c792f6974656d732f336c316b306e32413155334d3149314c323130702f53637265656e25323053686f74253230323031322d30322d32342532306174253230322e32312e3433253230504d2e706e67.png?w=500&amp;ssl=1 500w" sizes="(max-width: 300px) 85vw, 300px" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>如果大家有在寫 &lt;a href="http://expressjs.com/">Node.js Express Framework&lt;/a>，一定對 &lt;a href="http://mochajs.org/">Mocha&lt;/a> Unit Testing 不陌生，&lt;code>各位工程師不要太相信自己寫的程式碼&lt;/code>，產品上線前，務必要把 Unit Test 寫完整，如果是要 Code Refactor，那測試的重要性更是大。網站架構越來越大，功能越來越多，每寫一個新功能，都會產生 side effect，造成其他程式或邏輯出錯，這時候就需要 Unit Test 來驗證邏輯的正確性。使用 Express 寫 API 我個人會建議使用 &lt;a href="https://github.com/visionmedia/supertest">Supertest&lt;/a> + &lt;a href="https://github.com/tj/should.js/">Should.js&lt;/a> 來驗證後端程式碼即可，這幾套框架都是由 &lt;a href="https://github.com/tj">TJ Holowaychuk&lt;/a> 完成。使用 supertest 也可以讓 express 不用 listen port 就可以測試。&lt;/p></description></item><item><title>Git Flow and JavaScript Coding Style</title><link>https://blog.wu-boy.com/2015/04/git-flow-and-javascript-coding-style/</link><pubDate>Sat, 11 Apr 2015 15:05:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/04/git-flow-and-javascript-coding-style/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/13158675193/" title="github-logo by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm3.staticflickr.com/2238/13158675193_2892abac95_n.jpg?resize=320%2C127&amp;#038;ssl=1" alt="github-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://git-scm.com/">Git&lt;/a> 已經是每日必備使用的指令，在平常工作上常常使用到 &lt;a href="http://git-scm.com/docs/git-rebase">git rebase&lt;/a> 或 &lt;a href="http://git-scm.com/docs/git-merge">git merge&lt;/a>，發現很多工程師不知道什麼時候該用 rebase 什麼時候該用 merge，所以做了底下投影片來清楚描述 git rebase 及 merge 的優缺點及使用時機。&lt;/p></description></item><item><title>6to5 JavaScript Transpiler 重新命名為 Babel</title><link>https://blog.wu-boy.com/2015/02/the-6to5-javascript-transpiler-has-renamed-to-babel/</link><pubDate>Sun, 22 Feb 2015 11:55:09 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/02/the-6to5-javascript-transpiler-has-renamed-to-babel/</guid><description>先前寫了一篇 CoffeeScript 轉 ES6，裡面有提到 6to5 專案，此專案幫助開發者可以直接寫 JavaScript ECMAScript 6，該專案則會將 ES6 轉成 ES5，但是目前瀏覽器對於 ES6 的支援度還沒有很高，可以直接參考 ECMAScript 6 compatibility table，但是看到專案名稱 6to5，就會覺得如果之後 ES7 出來，不就要多開一個 7to6 專案，果然官方在 Blog 宣佈將名稱正式轉為 Babeljs。Babel 也會持續使用最新 JavaScript Standard 開發 JavaScript transpiler 相關工具，讓各種平台程式都可以使用。
現在就可以透過 Babel 來開發 ES6
$ npm install --global babel ES6 轉 ES5
$ babel script.js 一些來自 Mozilla, Esprima, jQuery Foundation, Acorn, 6to5, ESLint 組織成員，也合力開了 ESTree，而 Babel 以 ESTree 為基底來開發相關 Tool，所以最新的 Standard 也可以直接參考 ESTree。</description></item><item><title>您不可不知的 io.js</title><link>https://blog.wu-boy.com/2015/02/getting-to-know-io-js/</link><pubDate>Wed, 11 Feb 2015 06:05:43 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/02/getting-to-know-io-js/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/15859123853" title="9950313 by Bo-Yi Wu, on Flickr">&lt;img src="https://i2.wp.com/farm8.staticflickr.com/7401/15859123853_d945160802_o.png?resize=200%2C200&amp;#038;ssl=1" alt="9950313" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://iojs.org/">io.js&lt;/a> 至今已經成立了快三個月，目前也快速推出到 1.2.0 版本了，相信很多人都不太知道為什麼會多一個 io.js 組織，這組織是 fork 自 &lt;a href="https://github.com/joyent/node">Joyent&amp;rsquo;s Node.js&lt;/a> 相容於 &lt;a href="https://www.npmjs.com/">npm&lt;/a> 原始平台。&lt;/p></description></item><item><title>成立 iojs 台灣群組</title><link>https://blog.wu-boy.com/2015/02/iojs-tw-organization/</link><pubDate>Mon, 09 Feb 2015 03:55:20 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/02/iojs-tw-organization/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/15859123853" title="9950313 by Bo-Yi Wu, on Flickr">&lt;img src="https://i2.wp.com/farm8.staticflickr.com/7401/15859123853_d945160802_o.png?resize=200%2C200&amp;#038;ssl=1" alt="9950313" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>昨天在 &lt;a href="https://www.facebook.com/groups/node.js.tw/">node.js 台灣群組&lt;/a>討論&lt;a href="https://www.facebook.com/gniyop/posts/446564002165486">對岸已經成立 iojs-cn&lt;/a>，不多說我們也請官方幫忙成立了 &lt;a href="https://github.com/iojs/iojs-tw">iojs-tw&lt;/a>，目前的工作只有兩項，就是負責將[ iojs 官網]翻譯成中文，這部份 &lt;a href="https://github.com/cfsghost">@cfsghost&lt;/a> 已經&lt;a href="https://github.com/iojs/website/pull/135">送 PR 給官方了&lt;/a>，另外就是翻譯官方的 &lt;a href="https://medium.com/@iojs">Weekly Notes&lt;/a>，iojs 每週五都會發布一篇 iojs 的最新動態，我們就是負責將其中文化，上週五已經翻譯好了請參考如下:&lt;/p></description></item><item><title>自動修復 JavaScript Linting-errors 好工具 Fixmyjs</title><link>https://blog.wu-boy.com/2014/11/fix-javascript-linting-errors-tool-fixmyjs/</link><pubDate>Sun, 02 Nov 2014 02:32:24 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/11/fix-javascript-linting-errors-tool-fixmyjs/</guid><description>&lt;p>前端工程師撰寫 &lt;a href="http://en.wikipedia.org/wiki/JavaScript">JavaScript&lt;/a> 程式碼後一定會透過 &lt;a href="http://www.jshint.com/">JSHint&lt;/a> 驗證程式碼品質，但是 JSHint 只會提醒各位開發者哪些代碼需要修正，工程師還是需要手動去修復這些錯誤，這有點麻煩，所以今天來介紹一套自動修正 JSHint 錯誤的好工具 &lt;a href="https://github.com/jshint/fixmyjs/">Fixmyjs&lt;/a>，如果大家有寫過 PHP，一定有聽過 &lt;a href="http://www.php-fig.org/">PHP-FIG&lt;/a> 制定了 &lt;a href="http://www.php-fig.org/psr/psr-0/">PSR-0&lt;/a>, &lt;a href="http://www.php-fig.org/psr/psr-1/">PSR-1&lt;/a>, &lt;a href="http://www.php-fig.org/psr/psr-2/">PSR-2&lt;/a> 等標準，希望 PHP 工程師可以遵守這些規則，而 &lt;a href="https://github.com/fabpot/PHP-CS-Fixer">PHP-CS-Fixer&lt;/a> 就是根據 PHP-FIG 來自動修復 PHP 程式碼，讓程式碼可以遵守這些共同制定的標準。&lt;/p></description></item><item><title>Automating your workflow with Gulp.js</title><link>https://blog.wu-boy.com/2014/07/automating-your-workflow-with-gulp-js/</link><pubDate>Sun, 20 Jul 2014 02:11:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/07/automating-your-workflow-with-gulp-js/</guid><description>&lt;div style="margin:0 auto; text-align:center;">
&lt;a href="https://www.flickr.com/photos/appleboy/11616755494/" title="gulp by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm8.staticflickr.com/7354/11616755494_06ef5c0fa5.jpg?w=840&amp;#038;ssl=1" style="max-height: 250px" alt="gulp" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>今年 2014 &lt;a href="http://coscup.org/">COSCUP&lt;/a> 在 7/19,20 中研院舉辦，由於 &lt;a href="http://jsdc.tw/">JSDC&lt;/a> 今年比往年還要晚半年舉辦，所以本來想投在 JSDC 的議程，就先拿到投到 COSCUP 議程。去年 JSDC 講了 &lt;a href="http://blog.wu-boy.com/2013/03/javascript-command-line-tool-gruntjs/">Javascript command line tool GruntJS 介紹&lt;/a>，講完經過半年，&lt;a href="http://gulpjs.com/">Gulp.js&lt;/a> 就出來了，我馬上跳過去嘗試，用過之後，就像變了心的女朋友，回不來了，底下是 Gulp.js Slides。&lt;/p></description></item><item><title>用 Google PageSpeed Insights 計算 Desktop 或 Mobile 網站分數</title><link>https://blog.wu-boy.com/2014/06/pagespeed-insights-with-reporting/</link><pubDate>Thu, 12 Jun 2014 02:33:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/06/pagespeed-insights-with-reporting/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/14077059487" title="new-google-logo-knockoff by Bo-Yi Wu, on Flickr">&lt;img src="https://i0.wp.com/farm3.staticflickr.com/2930/14077059487_58046d689e_n.jpg?resize=320%2C124&amp;#038;ssl=1" alt="new-google-logo-knockoff" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>相信工程師在調整網站效能一定會使用 &lt;a href="https://developers.google.com/speed/docs/insights/v1/getting_started">Google PageSpeed Insights&lt;/a> 來得到測試效能數據報表，但是這僅限於使用 Chrome 或 Firefox 瀏覽器。每次跑 PageSpeed 時候，Chrome 就會出現哀號，並且吃下許多記憶體。有沒有 command line 可以直接用 Google PageSpeed Insights 測試 Desktop 或 Mobile 的分數。Google 工程師 &lt;a href="https://github.com/addyosmani">@addyosmani&lt;/a> 寫了一套 &lt;a href="https://github.com/addyosmani/psi">PageSpeed Insights for Node - with reporting&lt;/a> 稱作 &lt;a href="https://github.com/addyosmani/psi">PSI&lt;/a>，可以直接透過 Node 來產生基本 report，這 report 真的算很基本，跟 Chrome 的 extension 跑起來的 report 是不一樣的。這工具可以用來紀錄每次 deploy 網站時的一些數據變化。底下附上 Google 網站報告&lt;/p>
&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/14401120872" title="google_psi_report by Bo-Yi Wu, on Flickr">&lt;img src="https://i2.wp.com/farm4.staticflickr.com/3857/14401120872_38d23bc763_z.jpg?resize=640%2C586&amp;#038;ssl=1" alt="google_psi_report" data-recalc-dims="1" />&lt;/a>&lt;/p></description></item><item><title>安全使用 JavaScript Global Variables</title><link>https://blog.wu-boy.com/2014/06/safely-reference-javascript-global-variables/</link><pubDate>Wed, 11 Jun 2014 03:42:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/06/safely-reference-javascript-global-variables/</guid><description>&lt;p>剛開始學習 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript&lt;/a> 時候，一定會大量使用 Global Variables。但是使用 Global Variables 的同時，請務必使用 &lt;code>var&lt;/code> 宣告，而不是直接使用阿，否則會常常遇到 &lt;code>ReferenceError&lt;/code> 的錯誤。&lt;/p>
&lt;div>
&lt;pre class="brush: jscript; title: ; notranslate" title="">function addToBlockList (item) {
block_List.push(item);
}
&lt;p>addToBlockList (&amp;ldquo;add 127.0.0.1&amp;rdquo;);&lt;/pre>&lt;/p>
&lt;/div>
&lt;p>執行後你可以發現 console 噴出 &lt;code>Uncaught ReferenceError: block_List is not defined&lt;/code>，加上一個判斷試試看。程式碼改成底下&lt;/p>
&lt;div>
&lt;pre class="brush: jscript; title: ; notranslate" title="">function addToBlockList (item) {
if (block_list) {
block_List.push(item);
}
}
&lt;p>addToBlockList (&amp;ldquo;add 127.0.0.1&amp;rdquo;);&lt;/pre>&lt;/p>
&lt;/div></description></item><item><title>認識現今 Google 搜尋引擎</title><link>https://blog.wu-boy.com/2014/05/understanding-google-search-engine/</link><pubDate>Sun, 25 May 2014 07:04:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/05/understanding-google-search-engine/</guid><description>&lt;p>&lt;strong>感謝 &lt;a href="https://www.facebook.com/yhsiang">@Ly Cheng&lt;/a> 針對第三點補充&lt;/strong>&lt;/p>
&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/14077059487" title="new-google-logo-knockoff by Bo-Yi Wu, on Flickr">&lt;img src="https://i1.wp.com/farm3.staticflickr.com/2930/14077059487_58046d689e.jpg?resize=500%2C194&amp;#038;ssl=1" alt="new-google-logo-knockoff" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>1995 年 &lt;a href="http://zh.wikipedia.org/wiki/JavaScript">JavaScript&lt;/a> 第1版出現，到了 1998 年 &lt;a href="https://www.google.com/">Google&lt;/a> 推出&lt;a href="https://www.google.com/about/company/history/#1998">第一代搜尋引擎&lt;/a>，當時的 Google 根本不用在乎網頁如何使用 &lt;a href="http://en.wikipedia.org/wiki/Cascading_Style_Sheets">CSS&lt;/a> 或 JavaScript，而當時的網頁也顯少使用 JavaScript 及 CSS。轉眼間到現在 2014 年，如今現在的 Web，已經離不開 JavaScript 及 CSS 了，而目前 &lt;a href="http://en.wikipedia.org/wiki/Single-page_application">SPA (Single Page Application)&lt;/a> 的流行，也造成 Google 搜尋引擎讀取資料的困擾，所以 Google 團隊目前也正在朝這方向努力邁進。&lt;/p></description></item><item><title>Gulp.js 工具包</title><link>https://blog.wu-boy.com/2014/05/gui-tool-for-gulp/</link><pubDate>Fri, 23 May 2014 03:23:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/05/gui-tool-for-gulp/</guid><description>&lt;div style="margin:0 auto; text-align:center;">
&lt;a href="https://www.flickr.com/photos/appleboy/11616755494/" title="gulp by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm8.staticflickr.com/7354/11616755494_06ef5c0fa5.jpg?w=840&amp;#038;ssl=1" style="max-height: 250px" alt="gulp" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>本篇來整理關於 &lt;a href="http://gulpjs.com/">Gulp.js&lt;/a> 的一些 GUI 工具，對於不瞭解 Gulp.js 可以參考之前我寫的 &lt;a href="http://blog.wu-boy.com/2013/12/streaming-build-system-gulp/">The streaming build system Gulp&lt;/a>，會紀錄這篇最主要是看到有人在 Github 發了這篇 &lt;a href="https://github.com/gulpjs/gulp/issues/468">Is there any GUI tool for Gulp?&lt;/a> 而 Gulp.js 底層作者 &lt;a href="https://github.com/robrich">@robrich&lt;/a> 跳出來列出了很多工具，整理如下&lt;/p></description></item><item><title>gulp-imagemin 在 Ubuntu 出現錯誤</title><link>https://blog.wu-boy.com/2014/04/gulp-imagemin-lossy-operations-are-not-currently-supported/</link><pubDate>Tue, 29 Apr 2014 06:55:47 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/04/gulp-imagemin-lossy-operations-are-not-currently-supported/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/11616755494/" title="gulp by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm8.staticflickr.com/7354/11616755494_06ef5c0fa5.jpg?resize=197%2C388&amp;#038;ssl=1" alt="gulp" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在 deploy 程式碼到 production server 前，透過 &lt;a href="https://www.npmjs.org/package/gulp-imagemin">gulp-imagemin&lt;/a> 工具將全部圖片優化，上傳到 &lt;a href="http://aws.amazon.com/s3/">Amazon S3&lt;/a>，Windows 底下正常運作，到了 Ubuntu 環境之下噴出底下錯誤訊息&lt;/p>
&lt;blockquote>
&lt;p>Error: Lossy operations are not currently supported
後來在 &lt;a href="https://github.com/gruntjs/grunt-contrib-imagemin/issues/180">grunt-contrib-imagemin@issues/180&lt;/a> 有提人出此問題，解決方案就是升級 &lt;a href="http://optipng.sourceforge.net/">OptiPNG&lt;/a>，因為 Ubuntu 的 apt 套件只有支援到 0.6.4 版本，請到 OptiPNG 官網下載最新 tar 檔，編譯重新安裝&lt;/p>
&lt;/blockquote></description></item><item><title>Backbone.js 1.1.1 Release 釋出 AMD 版本</title><link>https://blog.wu-boy.com/2014/02/backbone-js-1-1-1-amd-release/</link><pubDate>Mon, 17 Feb 2014 05:48:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/02/backbone-js-1-1-1-amd-release/</guid><description>Backbone.js 在 2014.02.13 推出 1.1.1 版本，此次改版沒有推出重大功能，距離上次 1.1.0 版本只有經過四個月，時間也沒有很長。之前版本尚未支援 AMD，所以都是使用 amdjs/backbone 版本，但是這次 Backbone 官方直接釋出 AMD 版本，那之後就照官方版本走就可以了，底下是這次改版 Release note
釋出 AMD (require.js) 版本 新增 execute hook 讓開發者可以處理特定 route arguments Backbone Event 效能改善 處理相容舊瀏覽器 URL Unicode 近幾年 Javascript Framework 串起，似乎現在大家瘋狂的跟 Angularjs，所以 Backbone 似乎進度也沒有很快了，就像 PHP Framework 一樣，Laravel 的出現，讓其他 Framework 變得比較少討論了</description></item><item><title>前端工程師必看 JavaScript The Right Way</title><link>https://blog.wu-boy.com/2014/01/javascript-the-right-way/</link><pubDate>Sun, 26 Jan 2014 07:43:47 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/01/javascript-the-right-way/</guid><description>寫 PHP 的工程師一定知道 PHP The Right Way，現在 JavaScript 也出了 JavaScript The Right Way，不管是新手或者是資深工程師，都值得把裡面提到文章一看再看，此網站包含
JavaScript Code Style The Good Parts Patterns Testing Tools Frameworks Game Engines Reading Who to follow PaaS Providers 網站還提供了新手或老手必讀的文章，像是 Understanding JavaScript OOP, Understanding “Prototypes” in JavaScript 或 Understanding JavaScript Function Invocation and “this”。也有推薦值的購買的書籍，以及免費書籍。</description></item><item><title>在 Chrome 瀏覽器使用 Terminal 終端機</title><link>https://blog.wu-boy.com/2014/01/terminal-in-chrome-devtools/</link><pubDate>Sun, 05 Jan 2014 13:43:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/01/terminal-in-chrome-devtools/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i2.wp.com/farm8.staticflickr.com/7350/9333443162_20e7e5d5f2_m.jpg?w=840&amp;#038;ssl=1" alt="Google Chrome" data-recalc-dims="1" />
&lt;/div>
&lt;h2 id="簡介">簡介&lt;/h2>
&lt;p>不知道大家有無在瀏覽器內直接連上 Terminal 終端機，今天來介紹 &lt;a href="https://github.com/petethepig/devtools-terminal">DevTools Terminal&lt;/a>，這是一套 &lt;a href="https://chrome.google.com/webstore/category/extensions">Chrome extension&lt;/a>，它可以讓您在 &lt;a href="http://www.google.com/intl/zh-TW/chrome/">Chrome 瀏覽器&lt;/a>直接使用 Terminal，平常開發程式，一定會常常切換瀏覽器及 Terminal 軟體，現在開發者可以直接在瀏覽器連上 Terminal，並且開始使用 &lt;a href="http://git-scm.com/">Git&lt;/a>, &lt;a href="http://gruntjs.com/">Grunt&lt;/a>, wget 甚至 &lt;a href="http://www.vim.org/">Vim&lt;/a> 等指令。&lt;/p>
&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/11773943433/" title="Screenshot from 2014-01-05 20:36:26 by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm3.staticflickr.com/2837/11773943433_e0f20349fb.jpg?resize=500%2C282&amp;#038;ssl=1" alt="Screenshot from 2014-01-05 20:36:26" data-recalc-dims="1" />&lt;/a>&lt;/p></description></item><item><title>The streaming build system Gulp</title><link>https://blog.wu-boy.com/2013/12/streaming-build-system-gulp/</link><pubDate>Sun, 29 Dec 2013 08:25:22 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/12/streaming-build-system-gulp/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/11616755494/" title="gulp by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm8.staticflickr.com/7354/11616755494_06ef5c0fa5.jpg?resize=197%2C388&amp;#038;ssl=1" alt="gulp" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>看到 &lt;a href="https://github.com/yeoman" target="_blank">Yeoman&lt;/a> 作者之一 &lt;a href="https://github.com/addyosmani" target="_blank">Addy Osmani&lt;/a> 開始 &lt;a href="https://github.com/yeoman/yeoman/issues/1232" target="_blank">review Gulp build system&lt;/a>，由於 Yeoman framework 跟 &lt;a href="http://gruntjs.com/" target="_blank">GruntJS&lt;/a> 是很緊密結合的，但是 GruntJS 套件愈來愈多，漸漸的執行 GruntJS 後，開始吃了系統 CPU 及記憶體，這對於開發環境而言，會是一大負擔阿，大家不知道有無發現，跑 &lt;a href="http://nodejs.org/">Nodejs&lt;/a> GruntJS 時，每當存檔的時候，CPU 就開始哀嚎了，我自己是有這方面的體會，加上團隊內並不是每位同仁的電腦都是很 powerful，原本是好意讓團隊開發更遵守 coding style 及統一開發環境，但是 Grunt 的肥大，讓整個 Client 環境 Loading 飆高。所以 Yeoman 看到了 &lt;a href="https://github.com/gulpjs/gulp" target="_blank">Gulp&lt;/a>。也有考慮如何將 Gulp 整合到 Yeoman 專案。&lt;/p></description></item><item><title>Javscript 18 歲生日歷史演進</title><link>https://blog.wu-boy.com/2013/12/happy-18th-birthday-javascript/</link><pubDate>Sat, 07 Dec 2013 11:41:50 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/12/happy-18th-birthday-javascript/</guid><description>&lt;p>在 &lt;a href="http://resin.io/blog/" target="_blank">resin.io&lt;/a> 看到這篇 &lt;a href="http://resin.io/happy-18th-birthday-javascript/" target="_blank">Happy 18th Birthday JavaScript! A look at an unlikely past and bright future.&lt;/a> 裡面有些 Javascript 發展史，蠻有趣的，分享給大家看看。18 年前由 Netscape 和 Sun 共同 Release Javscript，在當年18天後，Ruby 也同時&lt;a href="http://en.wikipedia.org/wiki/Ruby_(programming_language)#First_publication" target="_blank">發佈&lt;/a>了，底下來看看 Javscript 歷史演進。&lt;/p></description></item><item><title>Youtube IFrame API Unable to post message Issue</title><link>https://blog.wu-boy.com/2013/11/youtube-iframe-api-unable-to-post-message-issue/</link><pubDate>Fri, 29 Nov 2013 08:43:31 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/11/youtube-iframe-api-unable-to-post-message-issue/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/11113610676/" title="Solid_color_You_Tube_logo by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5474/11113610676_bcbbbe5164_n.jpg?resize=320%2C128&amp;#038;ssl=1" alt="Solid_color_You_Tube_logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="https://developers.google.com/youtube/iframe_api_reference" target="_blank">YouTube IFrame Player API&lt;/a> 提供了簡單的介面及方法，讓網站可以快速整合 Youtube 影片，但是不得不說 Google 針對 Youtube API 時常改版，所以就會常常碰道友時候可以動，有時後不可以動。&lt;a href="http://apiblog.youtube.com/2011/02/https-support-for-youtube-embeds.html" target="_blank">Youtube 在 2011 公告開始支援 https protocol&lt;/a>，所以現在很多網站存取 Youtube API 時，都會使用底下寫法&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">&lt;/pre></description></item><item><title>jquery-serialize-object 不支援 IE7,8 瀏覽器?</title><link>https://blog.wu-boy.com/2013/11/jquery-serialize-object-no-support-ie7-8-browser/</link><pubDate>Wed, 20 Nov 2013 06:54:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/11/jquery-serialize-object-no-support-ie7-8-browser/</guid><description>最近專案需求用到 jQuery Serialize Object plugin，它能夠自動將 Form 表單內的值，全部轉成 object 或 json 字串，減少開發者每次都要寫抓取 Form 表單內全部欄位的值。此套件安裝及使用方法都很容易，安裝可以透過 Bower 方式，或者是下載 source code 直接 include 即可，在 IE 7 或 8 為什麼沒辦法使用呢，原因是作者使用了 Array.prototype.forEach，此語法需要 JavaScript 1.6 版本，很抱歉，在 IE8 並不支援 forEach 寫法，所以 Mozilla Javascript 開發者文件內有提供 Compatibility 方法： if (!Array.prototype.forEach) { Array.prototype.forEach = function (fn, scope) { &amp;lsquo;use strict&amp;rsquo;; var i, len; for (i = 0, len = this.length; i &amp;lt; len; ++i) { if (i in this) { fn.call(scope, this[i], i, this); } } }; }[/code] 但是既然這是 jQuery Plugin，就可以透過 jQuery 內建的 each 函式來解決，最後發了 Pull request 給作者，就看作者收不收了 XD</description></item><item><title>將 Backbone Framework 升級到 1.1.0 注意事項</title><link>https://blog.wu-boy.com/2013/11/upgrade-backbone-framework-to-1-1-0-tips/</link><pubDate>Thu, 14 Nov 2013 06:26:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/11/upgrade-backbone-framework-to-1-1-0-tips/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://backbonejs.org/" target="_blank">Backbone.js&lt;/a> 經過了半年終於在 10 月 &lt;a href="http://backbonejs.org/#changelog">Release 了 1.1.0 版本&lt;/a>，這次升級最重要的一點就是，Backbone 本來在 View 有支援 options，讓你可以透過初始化過程，將自定額外的 key 及 value 帶入，並且可以隨時透過 this.options.key 的方式取得資料。直接給例子來解說好了&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">this.example = new Backbone.View.extend({
template_name: "user_edit",
el: "#main"
});&lt;/pre> 上面是宣告 Backbone.view 的寫法，程式設計師可以傳入 object 設定，並且可以在程式任意地方，使用
&lt;p>&lt;strong>&lt;span style="color:green">this.example.options.template_name&lt;/span>&lt;/strong> 方式來得到 &lt;strong>&lt;span style="color:green">user_edit&lt;/span>&lt;/strong> 值，如果是使用 Backbone 1.1.0 之前的版本都沒問題，要升級到 1.1.0，又想要此功能，請務必在 view 的宣告前就必須加一段程式碼(後面解說)。為什麼作者會拿掉呢？因為有開發者發 issue 說&lt;a href="https://github.com/jashkenas/backbone/issues/2458" target="_blank">為什麼 View 有這功能，那 Model 為什麼沒有呢？&lt;/a>，這會讓未來加入開發的程式設計師感到困擾，所以作者就決定拿掉這塊&lt;/p></description></item><item><title>Drone.io 搭配 Ruby 環境測試</title><link>https://blog.wu-boy.com/2013/10/drone-io-with-runy-compass-setup/</link><pubDate>Thu, 17 Oct 2013 02:54:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/10/drone-io-with-runy-compass-setup/</guid><description>&lt;p>相信現在 &lt;a href="http://git-scm.com/" target="_blank">Git&lt;/a> 已經是大家共通的版本控制工具，每當專案有新的 commit，我們可以透過 &lt;a href="https://travis-ci.org/" target="_blank">Travis&lt;/a> 來幫忙做測試，但是 Travis 真的只有支援測試而已，如果測試成功想要進一步 Deploy 到任何機器或者是繼續做任何動作，這些都不支援的，那國外有些 Service 可以整合 &lt;a href="https://github.com/" target="_blank">Github&lt;/a> 或 &lt;a href="https://bitbucket.org/" target="_blank">Bitbucket&lt;/a> Project 幫忙做到自動測試及 Deploy，比較常見的就是 &lt;a href="https://www.codeship.io" target="_blank">Codeship&lt;/a>，這服務非常強大，整合了 &lt;a href="https://www.heroku.com/" target="_blank">Heroku&lt;/a>，&lt;a href="https://appengine.google.com/" target="_blank">App Engine&lt;/a>，&lt;a href="https://www.nodejitsu.com/" target="_blank">Nodejitsu&lt;/a> .. 等服務，Deploy 也支援 &lt;a href="https://github.com/fabric/fabric" target="_blank">Fabric&lt;/a>, &lt;a href="http://puppetlabs.com/" target="_blank">Puppet&lt;/a>, Shell script 等等，這家的收費是看每個月做了多少次編譯測試動作，最便宜的方案每個月 $9 美金，只能編譯 50 次。&lt;/p></description></item><item><title>RequireJS 搭配 CKEditor</title><link>https://blog.wu-boy.com/2013/09/load-ckeditor-using-requirejs/</link><pubDate>Wed, 25 Sep 2013 02:20:42 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/09/load-ckeditor-using-requirejs/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/9911959726/" title="requirejs-logo by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm4.staticflickr.com/3677/9911959726_a40988a62d_o.png?resize=200%2C200&amp;#038;ssl=1" alt="requirejs-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div> 網頁編輯器大家推薦的就
&lt;p>&lt;a href="http://ckeditor.com/" target="_blank">CKEditor&lt;/a> 或 &lt;a href="http://www.tinymce.com/" target="_blank">TinyMCE&lt;/a>，兩套各有優缺點，CKEditor 雖然功能最完整，也是最肥了，雖然官網可以自己挑選 plugin 來簡化肥肥的 source code。如果是單純用在後台管理，我還是推薦 CKEditor，給前端使用者的話，就推薦 TinyMCE 了，畢竟前台還是要以輕量為主。&lt;/p></description></item><item><title>CodeIgniter REST Server with Backbone.js Issue</title><link>https://blog.wu-boy.com/2013/09/codeigniter-rest-server-with-backbone-js-issue/</link><pubDate>Fri, 20 Sep 2013 04:20:20 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/09/codeigniter-rest-server-with-backbone-js-issue/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div> 如果有在用
&lt;p>&lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a> 來當作 &lt;a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">REST&lt;/a> Server 的朋友們，我相信都會找到 &lt;a href="http://philsturgeon.co.uk/" target="_blank">philsturgeon&lt;/a> 所寫的 &lt;a href="https://github.com/philsturgeon/codeigniter-restserver" target="_blank">codeigniter-restserver&lt;/a>，此套件幫你完成底層 API Response 動作，讓你可以輕易處理 REST URL。但是如果拿這套程式碼來搭配 &lt;a href="http://backbonejs.org/" target="_blank">Backbone.js&lt;/a> 你會遇到拿不到 POST 或 PUT 變數問題，作者來一一描述。&lt;/p></description></item><item><title>Cross Site Request Forgery in JS Web Apps and CodeIgniter PHP Framework</title><link>https://blog.wu-boy.com/2013/08/cross-site-request-in-js-web-apps-and-codeigniter-php-framework/</link><pubDate>Thu, 15 Aug 2013 03:43:44 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/08/cross-site-request-in-js-web-apps-and-codeigniter-php-framework/</guid><description>&lt;p>Cross Site Request Forgery 簡稱 &lt;a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery" target="_blank">CSRF&lt;/a> 是網路上最常見的攻擊方式，由於前端的盛行，現在開發網站偏向前後端拆開，前端使用大量的 Javascript 及 CSS3 效果，後端則是使用 PHP, Ruby, Python… 等，前端如何拿到資料庫資料呢，必需透 過 AJAX 方式來存取，常見的後端 API 會設計成 &lt;a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">RESTful&lt;/a> (GET/PUT/POST/DELETE)，後端為了擋住 CSRF 攻擊，所以限定了特殊 Content-Type Header，前端需要帶 application/json 給後端才可以拿到資料，這只能透過 Ajax requests 才可以做到。&lt;/p></description></item><item><title>Twitter Bootstrap 發佈 3 RC1 版本</title><link>https://blog.wu-boy.com/2013/07/twitter-bootstrap-release-3-rc1/</link><pubDate>Tue, 30 Jul 2013 11:19:29 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/07/twitter-bootstrap-release-3-rc1/</guid><description>今天非常開心看到 Twitter 團隊發佈 Bootstrap 3 RC1 版本，Twitter 這次是大動作的改版，連官網都換掉了，如果你還在使用 2.3.2，Twitter 也提供之前的網站版本，讓使用者可以繼續使用，當然希望各開發者可以盡快轉換到 3 RC1，此版本超過 1600 commits 修正。Twitter 也另外開了 Github Organization，如果要找範例的話，可以到 bootstrap-examples 來看看。另外大家最關心的是效能，底下影片介紹 Bootstrap 3 vs Bootstrap 2.3.2 版本差異。</description></item><item><title>Coding on workspace of Chrome Developer tools</title><link>https://blog.wu-boy.com/2013/07/coding-on-workspace-of-chrome-developer-tools/</link><pubDate>Sun, 21 Jul 2013 10:48:36 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/07/coding-on-workspace-of-chrome-developer-tools/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i2.wp.com/farm8.staticflickr.com/7350/9333443162_20e7e5d5f2_m.jpg?w=840&amp;#038;ssl=1" alt="Google Chrome" data-recalc-dims="1" />
&lt;/div>
&lt;p>相信網頁設計師並不陌生 &lt;a href="https://developers.google.com/chrome-developer-tools/" target="_blank">Chrome DevTools&lt;/a>，善用 DevTools 可以減少很多 Debug 時間，今天來介紹如何在 &lt;a href="https://www.google.com/intl/zh-TW/chrome/browser/" target="_blank">Chrome 瀏覽器&lt;/a>上直接編輯程式，並且存檔，重新整理網頁後便可看到結果。聽到這裡大家一定會很好奇，不就開系統編輯器 (sublime, pspad, vim &amp;hellip;) 工具，直接修改 =&amp;gt; 存檔 =&amp;gt; 重新整理嘛？但是這並不稀奇阿，重點是 Chrome 瀏覽器可以直接支援 &lt;code>線上編輯檔案&lt;/code>，而不是透過系統工具做編輯。這就是 Chrome 強大的地方，今天就來介紹 &lt;a href="https://developers.google.com/chrome-developer-tools/docs/settings?hl=en#workspace" target="_blank">Chrome workspace&lt;/a>。&lt;/p></description></item><item><title>JSDC 和 KSDG 影音紀錄 (淺談 GruntJS 整合開發工具)</title><link>https://blog.wu-boy.com/2013/06/jsdc-ksdg-gruntjs-tool/</link><pubDate>Tue, 11 Jun 2013 02:38:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/06/jsdc-ksdg-gruntjs-tool/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="gruntlogo by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/8591850168/">&lt;img alt="gruntlogo" src="https://i2.wp.com/farm9.staticflickr.com/8244/8591850168_ca0e125ffa_n.jpg?resize=200%2C200&amp;#038;ssl=1" data-recalc-dims="1" />&lt;/a>
&lt;/div> 很高興今年在
&lt;p>&lt;a href="http://jsdc.tw/2013/" target="_blank">JSDC&lt;/a> 擔任講師，演講主題為『&lt;a href="http://blog.wu-boy.com/2013/05/2013-javascript-conference-front-tool-grunt-js/" target="_blank">你不可不知的前端開發工具&lt;/a>』，這場議程只有30分鐘可以講，時間實在是不太夠，要消化這麼多工具其實對於聽眾有點困難，真是對不起聽眾了，不過沒關係，高雄 &lt;a href="https://www.facebook.com/groups/KSDGroup" target="_blank">KSDG&lt;/a> 五月份邀請我講『&lt;a href="http://blog.wu-boy.com/2013/05/how-to-integrate-front-end-tools-via-gruntjs/" target="_blank">打造團隊共同開發環境&lt;/a>』，其實就是將 &lt;a href="http://gruntjs.com/" target="_blank">GruntJS&lt;/a> 精華整個講一遍，大概有一個多小時，底下是官方影音，如果朋友們沒北上參加，也可以透過 &lt;a href="http://www.youtube.com/user/JSDCTW/videos" target="_blank">JSDC Youtube&lt;/a> 來欣賞。 JSDC 35分鐘議程&lt;/p></description></item><item><title>高雄 KSDG 分享: 打造團隊共同開發環境</title><link>https://blog.wu-boy.com/2013/05/how-to-integrate-front-end-tools-via-gruntjs/</link><pubDate>Sat, 25 May 2013 13:28:21 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/05/how-to-integrate-front-end-tools-via-gruntjs/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="gruntlogo by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/8591850168/">&lt;img alt="gruntlogo" src="https://i2.wp.com/farm9.staticflickr.com/8244/8591850168_ca0e125ffa_n.jpg?resize=200%2C200&amp;#038;ssl=1" data-recalc-dims="1" />&lt;/a>
&lt;/div> 很高興受到高雄
&lt;p>&lt;a href="https://www.facebook.com/groups/KSDGroup/" target="_blank">KSDG&lt;/a> 邀請，分享上禮拜在 &lt;a href="http://jsdc.tw/2013/" target="_blank">JSDC&lt;/a> 所介紹主題: &lt;a href="http://blog.wu-boy.com/2013/05/2013-javascript-conference-front-tool-grunt-js/" target="_blank">你不可不知的前端開發工具&lt;/a>，在 JSDC 現場只有半小時可以講，這次在高雄有一個半小時可以講，如果想詳細了解前端工具，可以參考上禮拜的投影片，底下是在高雄軟體科技園區所分享。謝謝 &lt;a href="https://www.facebook.com/hsuani.bi" target="_blank">Eric Bi&lt;/a> 及工作人員可以讓我分享這次議題。&lt;/p></description></item><item><title>2013 Javascript Conference: 你不可不知的前端開發工具</title><link>https://blog.wu-boy.com/2013/05/2013-javascript-conference-front-tool-grunt-js/</link><pubDate>Sun, 19 May 2013 05:56:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/05/2013-javascript-conference-front-tool-grunt-js/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5454/7238452668_82262e37dc_o.png?w=840&amp;#038;ssl=1" alt="JSDC 2013" data-recalc-dims="1" />
&lt;/div>
&lt;p>台灣第 2 屆 JavaScript 研討會在 5/18, 5/19 登場，今年報到率到 95% 了，我也給了一場 Talk，關於前端工具介紹，包含 &lt;a href="http://coffeescript.org/" target="_blank">CoffeeScript&lt;/a>, &lt;a href="http://compass-style.org/" target="_blank">Compass&lt;/a>, &lt;a href="http://livereload.com/" target="_blank">Livereload&lt;/a>, &lt;a href="http://bower.io/" target="_blank">Bower&lt;/a> Package Manager .. 等，最後介紹主軸 &lt;a href="http://gruntjs.com/" target="_blank">Grunt.js&lt;/a> 來整合這些工具。&lt;/p></description></item><item><title>Backbone Routing pushState in IE</title><link>https://blog.wu-boy.com/2013/05/backbone-routing-pushstate-in-ie/</link><pubDate>Thu, 09 May 2013 05:26:58 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/05/backbone-routing-pushstate-in-ie/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div> Backbone.js 幫忙處理掉所有瀏覽器
&lt;p>&lt;a href="http://diveintohtml5.info/history.html" target="_blank">Html5 History pushState&lt;/a> 功能，除了 IE 9 以下(含 IE 9)不支援 &lt;strong>history.pushState()&lt;/strong> 跟 &lt;strong>history.replaceState()&lt;/strong>，其他 Browser 幾乎都支援了，在 &lt;a href="http://backbonejs.org" target="_blank">Backbone.js&lt;/a> 如何處理 URL 變化呢？以往透過 handle URL hash 來決定網頁要處理哪些資料，這也是 Backbone 預設的處理方式，範例如下 URL:&lt;/p>
&lt;blockquote>
&lt;p>http://xxx/#!/user/list http://xxx/#!/user/add&lt;/p>
&lt;/blockquote></description></item><item><title>[小技巧] JavaScript Cross Browser Best Practices</title><link>https://blog.wu-boy.com/2013/04/javascript-cross-browser-best-practices/</link><pubDate>Fri, 12 Apr 2013 02:50:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/04/javascript-cross-browser-best-practices/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="ie-logo-small by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/8443574444/">&lt;img alt="ie-logo-small" src="https://i2.wp.com/farm9.staticflickr.com/8216/8443574444_c01f821c31_m.jpg?resize=240%2C240&amp;#038;ssl=1" data-recalc-dims="1" />&lt;/a>
&lt;/div> 先前寫了一篇
&lt;p>&lt;a href="http://blog.wu-boy.com/2013/02/testing-for-internet-explorer-with-web-page/" target="_blank">modern.IE 的使用方式及介紹&lt;/a>，今天在 &lt;a href="http://Facebook.com" target="_blank">Facebook&lt;/a> 上看到 &lt;a href="https://twitter.com/ericsk" target="_blank">Eric Shangkuan&lt;/a> 說已經有了&lt;a href="http://www.modern.ie/zh-tw" target="_blank">中文介面&lt;/a>，如果你的瀏覽器是中文版，應該就可以直接看到中文介面了，裡面有篇文章非常重要，寫 Web 的工程師都必須注意，那就是 &lt;a href="http://www.modern.ie/zh-tw/cross-browser-best-practices" target="_blank">Cross Browser Best Practices&lt;/a>，這篇文章教您如何撰寫相容於舊版 IE 瀏覽器的一些小技巧，這些技巧也不只用在 IE 上，更是教您在實做 CSS，JavaScript 的注意事項。我們來看看 Javascript 的小技巧。&lt;/p></description></item><item><title>Javascript command line tool GruntJS 介紹</title><link>https://blog.wu-boy.com/2013/03/javascript-command-line-tool-gruntjs/</link><pubDate>Tue, 26 Mar 2013 07:35:21 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/03/javascript-command-line-tool-gruntjs/</guid><description>&lt;p>&lt;strong>Update: 補上一張執行後的截圖 2013.03.27&lt;/strong>&lt;/p>
&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="gruntlogo by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/8591850168/">&lt;img alt="gruntlogo" src="https://i2.wp.com/farm9.staticflickr.com/8244/8591850168_ca0e125ffa_n.jpg?resize=320%2C320&amp;#038;ssl=1" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://gruntjs.com/" target="_blank">GruntJS&lt;/a> 是一套 JavaScript Task Runner，為什麼官網會這樣寫呢？網站上線之前，是不是需要經過測試，壓縮，及品質控管，這些 Task 該如何實現，在 GruntJS 還沒出現之前，大家可以透過 Linux command 的方式來達成，但是對於前端工程師而言，多學習 command line 真的是要他們的命，所以 GruntJS 解決了此問題，將所有的 Task 用 Javascript 方式設定就可以自動佈署或測試。GruntJS 的 Plugin 也非常多且完整，像是大家常用的 &lt;a href="http://coffeescript.org/" target="_blank">CoffeeScript&lt;/a>、&lt;a href="http://handlebarsjs.com/" target="_blank">Handlebars&lt;/a>、&lt;a href="http://jade-lang.com/" target="_blank">Jade&lt;/a>、&lt;a href="http://www.jshint.com/" target="_blank">JsHint&lt;/a>、&lt;a href="http://lesscss.org/" target="_blank">Less&lt;/a>、&lt;a href="http://sass-lang.com/" target="_blank">Sass&lt;/a>、&lt;a href="http://compass-style.org/" target="_blank">Compass&lt;/a>、&lt;a href="http://learnboost.github.com/stylus/" target="_blank">Stylus&lt;/a>…等都有支援。更多好用的 Plugin 可以在&lt;a href="http://gruntjs.com/plugins" target="_blank">官網搜尋頁面&lt;/a>上找到。&lt;/p>
&lt;h3 id="安裝方式-grunt-可以透過">安裝方式 Grunt 可以透過&lt;/h3>
&lt;p>&lt;a href="http://nodejs.org/" target="_blank">Node.js&lt;/a> 的管理工具 &lt;a href="https://npmjs.org/" target="_blank">npm&lt;/a> 方式來安裝，Windows 只要到 Node.js 官網下載安裝包，直接按下一步即可安裝完畢，Linux 可以透過 NVM 方式來管理 Node.js 版本，可以參考作者之前寫的 &lt;a href="http://blog.wu-boy.com/2013/01/node-version-manager/" target="_blank">Node Version Manager 版本管理 NVM&lt;/a>。需要注意的是 Grunt 0.4.x 需要 Node.js &lt;span style="color: red;">&lt;strong>&amp;gt;= 0.8.0&lt;/strong>&lt;/span> 版本才可以。&lt;/p></description></item><item><title>Remove Google CDN reference for jQuery?</title><link>https://blog.wu-boy.com/2013/03/remove-google-cdn-reference-for-jquery/</link><pubDate>Thu, 07 Mar 2013 04:03:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/03/remove-google-cdn-reference-for-jquery/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/8442641115/" title="OQAAAI1PPrJY0nBALB7mkvju3mkQXqLmzMhxEjeb4gp8aujEUQcLfLyy-Sn4gZdkAas6-k8eYbQlGDE-GCjKfF5gIrUA15jOjFfLRv77VBd5t-WfZURdP9V3PdmT by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm9.staticflickr.com/8378/8442641115_8564013cea.jpg?resize=500%2C123&amp;#038;ssl=1" alt="jquery logo" data-recalc-dims="1" />&lt;/a>
&lt;/div> 在
&lt;p>&lt;a href="http://html5boilerplate.com/" target="_blank">html5-boilerplate&lt;/a> 看到有人發 &lt;a href="https://github.com/h5bp/html5-boilerplate/pull/1327" target="_blank">Remove Google CDN reference for jQuery&lt;/a> 的 pull request，發現國外鄉民其實蠻有趣的，也很會表達自己的想法，根據 &lt;a href="http://statichtml.com/about.html" target="_blank">Steve Webster&lt;/a> 在 2011/11/21 寫了一篇 &lt;a href="http://statichtml.com/2011/google-ajax-libraries-caching.html" target="_blank">Caching and the Google AJAX Libraries&lt;/a> 裡面的結論是: 使用 &lt;a href="https://developers.google.com/speed/libraries/devguide?hl=zh-TW" target="_blank">Google CDN Library&lt;/a> 對於第一次訪問網站並沒有很大的幫助，其實這句話非常有疑問，如果網站不想 host 一些 static file 又想要用 CDN 的話，Google 絕對是最好的選擇，&lt;a href="https://github.com/h5bp/html5-boilerplate/pull/1327#issuecomment-14537298" target="_blank">底下就有人反駁&lt;/a> Google CDN 還是比自己 host 檔案快很多，所以此 pull request 好像沒有啥意義。&lt;/p></description></item><item><title>Backbone.js rewrite into CoffeeScript?</title><link>https://blog.wu-boy.com/2013/03/backbone-js-rewrite-into-coffeescript/</link><pubDate>Fri, 01 Mar 2013 13:56:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/03/backbone-js-rewrite-into-coffeescript/</guid><description>看到 @gsamokovarov 提出將 Backbone.js 改寫成 CoffeeScript 架構的 Pull request，結果官方團隊其中一位開發作者回應了一張圖，代表他的心情 XD，各位有興趣可以點上面連結看看，後來有其他人回應說，為什麼官方不用 CoffeeScript 來寫了，發此 Pull Request 的作者也有說，他只是將架構改成 CoffeeScript 讓大家參考看看而已，沒有真的希望可以納入整個 Backbone.js 專案，如果有其他開發者需要的話，一樣可以 fork 此專案，說明文件也用 docco 產生好了，可以參考此連結，官方作者也提到，大部份的第3方 Library 還是不會使用 CoffeeScript 來當作基底開發，畢竟並非所有人都知道 CoffeeScript，如果官方想這麼開發的話，早就再 2010 年丟釋出 Backbone.js 的時候就直接採用了，不會拖到現在還沒出來，當然最後官方也希望將此 pull request 寫到 wiki 裡面給大家參考，等待原作者補開發動機及細節。</description></item><item><title>壓縮 Javascript 和 CSS 檔案 script command</title><link>https://blog.wu-boy.com/2013/02/compress-css-javascript-script-command/</link><pubDate>Thu, 21 Feb 2013 10:45:48 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/02/compress-css-javascript-script-command/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6033708087/" title="nodejs-light by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm7.static.flickr.com/6199/6033708087_ff1a02a337_o.jpg?resize=260%2C71&amp;#038;ssl=1" alt="nodejs-light" data-recalc-dims="1" />&lt;/a>
&lt;/div> 網站上站前要做的事情非常多，其中一項為大家所知就是壓縮
&lt;p>&lt;a href="http://www.w3schools.com/css/" target="_blank">CSS&lt;/a> 跟 &lt;a href="http://www.w3schools.com/js/default.asp" target="_blank">JavaScript&lt;/a> 檔案，減少 Http request 流量，網路上已經有非常多的 Compressor tool，像是 &lt;a href="https://developers.google.com/closure/compiler/" target="_blank">Google Closure Compiler&lt;/a> 或 &lt;a href="http://yui.github.com/yuicompressor/" target="_blank">YUI Compressor&lt;/a>，都是用來壓縮 JS 或 CSS 檔案，這次寫了 script 來壓縮整個網站目錄裡的 js 或 css 檔案，不過 script 所使用的 Compressor command 是 Node Base 的 tool，分別是 &lt;a href="https://github.com/mishoo/UglifyJS2" target="_blank">UglifyJS&lt;/a> 及 &lt;a href="https://github.com/ded/sqwish" target="_blank">sqwish&lt;/a> 這兩套，當然使用 command 之前，請務必先安裝好 &lt;a href="http://nodejs.org/" target="_blank">Node.js&lt;/a> 最新版本啦，不過沒安裝也沒關係，底下有懶人安裝 script command。這些 tool 對於 Embedded System 在 build firmware 相當有用，可以減少不少 code size 阿。 可以直接看&lt;a href="https://github.com/appleboy/minify-tool" target="_blank">專案說明&lt;/a>，就可以不必看底下步驟了&lt;/p></description></item><item><title>jQuery Migrate 1.1.0 Released 注意事項</title><link>https://blog.wu-boy.com/2013/02/jquery-migrate-1-1-0-released-note/</link><pubDate>Sun, 03 Feb 2013 03:53:29 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/02/jquery-migrate-1-1-0-released-note/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/8442641115/" title="OQAAAI1PPrJY0nBALB7mkvju3mkQXqLmzMhxEjeb4gp8aujEUQcLfLyy-Sn4gZdkAas6-k8eYbQlGDE-GCjKfF5gIrUA15jOjFfLRv77VBd5t-WfZURdP9V3PdmT by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm9.staticflickr.com/8378/8442641115_8564013cea.jpg?resize=500%2C123&amp;#038;ssl=1" alt="jquery logo" data-recalc-dims="1" />&lt;/a>
&lt;/div> 上個月大家可以注意到
&lt;p>&lt;a href="http://blog.wu-boy.com/2013/01/jquery-1-9-final-jquery-2-0-beta-migrate-final-released/" target="_blank">jQuery 釋出 1.9 及 2.0 版本&lt;/a>，官方團隊也同時推出 &lt;a href="https://github.com/jquery/jquery-migrate/" target="_blank">jQuery Migrate Plugin&lt;/a> 1.0.0 版本，此 Plugin 是跟 &lt;a href="http://jquery.com" target="_blank">jQuery&lt;/a> 1.9 或 2.0 一起搭配使用，偵測 jQuey 已移除或者是將被移除的功能，讓您之前開發的 jQuey 功能可以持續使用，但是似乎很多使用者不知道此 plugin 用處，就直接升級 1.9 或 2.0，並未載入 migrate plugin，造成官方收到很多 feed back 都是關於一些舊功能不能使用。半個月後 jQuery 官方收到很多 migrate plugin 回報問題，這次一樣可以透過 jQuuery CDN 載入，程式碼如下。&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">&lt;/pre> 壓縮版本
&lt;pre class="brush: jscript; title: ; notranslate" title="">&lt;/pre></description></item><item><title>JavaScript 的 if 條件判斷式</title><link>https://blog.wu-boy.com/2013/01/you-must-be-known-js-condition/</link><pubDate>Fri, 25 Jan 2013 08:26:09 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/01/you-must-be-known-js-condition/</guid><description>&lt;p>網路上看到這篇 &lt;a href="http://rmurphey.com/blog/2012/12/10/js-conditionals/" target="_blank">Two Things About Conditionals in JavaScript&lt;/a>，比較另我訝異的是第一點 &lt;code>One: There is no else if&lt;/code>，該作者提到在 JavaScript 的寫法裡面沒有 else if，底下直接看例子:&lt;/p>
&lt;div>
&lt;pre class="brush: jscript; title: ; notranslate" title="">function saySomething( msg ) {
if ( msg === 'Hello' ) {
console.log('Hello there');
} else if ( msg === 'Yo' ) {
console.log('Yo dawg');
}
}&lt;/pre>
&lt;/div>
&lt;p>上面是我們一般在寫 JS 會用到的條件子句，但是實際上 JS 寫的就是&lt;/p>
&lt;div>
&lt;pre class="brush: jscript; title: ; notranslate" title="">function saySomething( msg ) {
if ( msg === 'Hello' ) {
console.log('Hello there');
} else {
if ( msg === 'Yo' ) {
console.log('Yo dawg');
}
}
}&lt;/pre>
&lt;/div></description></item><item><title>Bower 管理網站套件的好工具</title><link>https://blog.wu-boy.com/2013/01/bower-is-a-package-manager-for-the-web/</link><pubDate>Tue, 15 Jan 2013 03:34:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/01/bower-is-a-package-manager-for-the-web/</guid><description>&lt;p>&lt;strong>Update: bower 在 0.9.0 版以前可以使用 &lt;span style="color:red">component.json&lt;/span>，但是為了避免跟其他工具命名衝突，故 0.9.0 以後版本請改為 &lt;span style="color:green">bower.json&lt;/span>&lt;/strong> &lt;a href="http://twitter.github.com/bower/" target="_blank">bower&lt;/a> 是 &lt;a href="http://twitter.com" target="_blank">Twitter&lt;/a> 團隊開發的一套網頁工具，用來管理或安裝 Web 開發所需要的 Package，像是 CSS 和 JavaScript，也可以依據套件的相依性來安裝，簡單來說，開發者不用再去煩惱套件相依性問題，以及時間久了想更新最新版本，還要到各 Package 網站來下載，這些步驟都省了，一個指令就可以全部做完上述的步驟。&lt;/p>
&lt;h3 id="安裝-bower-管理套件-透過">安裝 Bower 管理套件 透過&lt;/h3>
&lt;p>&lt;a href="http://nodejs.org/" target="_blank">Node.js&lt;/a> 的 npm 工具來安裝&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">$ npm install bower -g&lt;/pre></description></item><item><title>Node Version Manager 版本管理 NVM</title><link>https://blog.wu-boy.com/2013/01/node-version-manager/</link><pubDate>Wed, 09 Jan 2013 10:34:07 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/01/node-version-manager/</guid><description>2015.02.12 官方已經支援 nvm install stable，補上 io.js 說明
本篇不是要介紹 Node.js，是要介紹管理 Node.js 版本的工具，之前是玩 Visionmedia 開發的 n，後來跳到玩 Creationix 開發的 nvm tool，目前支援 stable command，也就是下 nvm install stable (直接裝好 v0.12.0)。
安裝方式 可以使用 curl 或 wget 方式安裝
$ curl https://raw.githubusercontent.com/creationix/nvm/v0.23.3/install.sh | bash $ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.23.3/install.sh | bash 使用方式 # 安裝最新穩定版本 $ nvm install stable # 移除最新穩定版本 $ nvm uninstall stable # 使用穩定版本 $ nvm use stable $ nvm run unstable --version 如果有玩 io.js 可以下
$ nvm install iojs</description></item><item><title>輕量級 jQuery Slideshow Plugin</title><link>https://blog.wu-boy.com/2012/08/a-lightweight-jquery-slideshow-plugin/</link><pubDate>Sun, 12 Aug 2012 06:08:42 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/08/a-lightweight-jquery-slideshow-plugin/</guid><description>&lt;p>相信在網路上可以找到一堆 jQuery Slideshow Plugin，例如 &lt;a href="http://www.themeflash.com/30-powerful-jquery-slideshow-sliders-plugins-and-tutorials/" target="_blank">33 POWERFUL JQUERY SLIDESHOW (SLIDERS) PLUGINS AND TUTORIALS&lt;/a> 介紹了 33 種不同的 Slideshow Plugin，有些用起來很複雜，有些則是過於簡易，本來是想自己寫一套出來，但是想想是否可以找一套已經有輪子的架構，再拿來修改成專案所需要的套件，於是參考了&lt;a href="https://github.com/Ephigenia/jquery.slideShow" target="_blank">這套&lt;/a>原始碼，發現此專案只有提供 fade 和 slide 兩種效果，沒有像是投影片可以任意滑動的功能，所以自己把此功能 patch 上去，可以參考我放到 &lt;a href="https://github.com/appleboy/jquery.slideShow" target="_blank">Github 的專案&lt;/a>，寫法很容易，可以直接看&lt;a href="http://appleboy.github.com/jquery/example_2/" target="_blank">線上 Example&lt;/a>。&lt;/p>
&lt;h3 id="載入-jquery-和-plugin">載入 jQuery 和 plugin&lt;/h3>
&lt;pre class="brush: xml; title: ; notranslate" title="">&lt;/pre></description></item><item><title>台灣第一屆 JavaScript Conference Developer 會議</title><link>https://blog.wu-boy.com/2012/05/the-first-javascript-developer-conference-in-taiwan/</link><pubDate>Mon, 21 May 2012 06:39:43 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/05/the-first-javascript-developer-conference-in-taiwan/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5454/7238452668_82262e37dc_o.png?w=840&amp;#038;ssl=1" alt="JSDC 2012" data-recalc-dims="1" />
&lt;/div>
&lt;p>自從去年辦了台灣第一屆 &lt;a href="http://phpconf.tw/2011">2011 PHP Conference&lt;/a>，2012年開始又來新的第一屆 &lt;a href="http://jsdc.tw/2012/">Javascript Conference&lt;/a>，在去年的 PHP 會議由於第一次開始舉辦 PHP Conference，所以比較少人投稿，導致議程裡面出現&lt;del>很多&lt;/del> Javascript 議題，這也是很多朋友的疑問 XD。底下來回顧 JSDC 5/19 (六) 個人參加的議程。由於早上差不多10點半才到，所以前兩場議程(Key Note - Ericsk, &lt;a href="http://jsdc.tw/2012/sliders/NodeJSOnWindowsAzure.pptx">Node.JS on Windows Azure&lt;/a>)就沒有聽到了，比較可惜。如果沒去聽現場的，可以到&lt;a href="http://jsdc.tw/2012/Sessions">官方網站下載投影片&lt;/a>參考。&lt;/p></description></item><item><title>如何使用 Apache Module mod_mime</title><link>https://blog.wu-boy.com/2012/05/how-to-use-apache-module-mod_mime/</link><pubDate>Thu, 10 May 2012 04:25:16 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/05/how-to-use-apache-module-mod_mime/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7168729996/" title="apache_software_foundation_logo_3074 by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm9.staticflickr.com/8151/7168729996_452646f0f2_n.jpg?resize=320%2C169&amp;#038;ssl=1" alt="apache_software_foundation_logo_3074" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://httpd.apache.org/" target="_blank">Apache&lt;/a> 可以透過 &lt;a href="http://httpd.apache.org/docs/current/mod/mod_mime.html" target="_blank">mod_mime&lt;/a> 模組且根據使用者定義的副檔名來 response data 給 Client 端，此功能可以應用在前台搭配 Template Library，例如 &lt;a href="http://mustache.github.com/" target="_blank">Mustache Logic-less templates&lt;/a>，透過此 Apache 模組 可以在 html 檔案將定義好全部 Template，一次讀取進來，底下舉個例子:&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">&lt;/pre> 我們希望 apache 能夠讀取 assets/templates/test1.mustache，並且將檔案內容放到 script 裡面，這時候就必須在 apache httpd.conf 定義
&lt;p>&lt;strong>&lt;span style="color:green">text/x-mustache-template&lt;/span>&lt;/strong>&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">&lt;IfModule mime_module>
AddType text/x-mustache-template .mustache
AddOutputFilter INCLUDES .mustache
&lt;/IfModule>
&lt;/pre></description></item><item><title>jQuery 1.7 透過 on 來綁定事件</title><link>https://blog.wu-boy.com/2012/04/use-on-api-to-attach-event-handlers-on-jquery/</link><pubDate>Wed, 11 Apr 2012 12:49:27 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/04/use-on-api-to-attach-event-handlers-on-jquery/</guid><description>&lt;p>既上一篇作者寫了 &lt;a href="http://blog.wu-boy.com/2012/04/backbonejs-framework-tutorial-example-1/" target="_blank">Javascript 前端工具 Backbone.js Framework 初學介紹&lt;/a>，這次來將程式改寫成 jQuery 寫法，藉這個機會來介紹 jQuery 新功能 &lt;a href="http://api.jquery.com/on/" target="_blank">on API&lt;/a>，底下來看看 jQuery event handle 的演進&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">//在 jQuery 1.3 以上版本
$(selector).live(events, data, handler);
//在 jQuery 1.4.3 以上版本
$(document).delegate(selector, events, data, handler);
//在 jQuery 1.7 以上版本
$(document).on(events, selector, data, handler);&lt;/pre> 上面三種寫法都可以綁定網頁上全部元件，如果只是單純只是用 click bind event 的話，那只要新增的元件就無法作用，講得有點抽象，底下直接看個例子:</description></item><item><title>Javascript 前端工具 Backbone.js Framework 初學介紹</title><link>https://blog.wu-boy.com/2012/04/backbonejs-framework-tutorial-example-1/</link><pubDate>Mon, 09 Apr 2012 12:01:27 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/04/backbonejs-framework-tutorial-example-1/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div> 我相信大家對於後端程式
&lt;p>&lt;a href="http://www.php.net" target="_blank">PHP&lt;/a>, &lt;a href="http://www.ruby-lang.org/zh_TW/" target="_blank">Ruby&lt;/a>, &lt;a href="http://www.python.org/" target="_blank">Python&lt;/a> .. 等語言都已經相當熟悉，進階開發者也都接觸了好用的後端 Framework 如 &lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a>, &lt;a href="http://cakephp.org/" target="_blank">CakePHP&lt;/a>, &lt;a href="https://www.djangoproject.com/" target="_blank">Django&lt;/a>, &lt;a href="http://rubyonrails.org/" target="_blank">Ruby on Rail&lt;/a>, &lt;a href="http://www.yiiframework.com/" target="_blank">Yii&lt;/a>, &lt;a href="http://www.symfony-project.org/" target="_blank">Symfony&lt;/a> .. 等，用 Framework 最大的好處並不是在 Framework 提供了大量工具，而是制定了 MVC 架構，讓專案多位開發者可以遵循，上了講了這麼多後端 MVC Framework，那麼前端呢？接下來介紹前端強大工具: &lt;a href="http://documentcloud.github.com/backbone/" target="_blank">Backbone.js&lt;/a>&lt;/p>
&lt;h3 id="什麼是-backbonejs-簡單來說-backbonejs-就是一套前端-javascript-framework它提供-mvc-架構相信大家都玩過後端-mvc那至於前端呢好像比較少人提到這就是介紹-backbonejs-最主要的目的backbonejs-包含了-model-view-controller-來讓使者操作model-提供了key-value-結構以及可以-binding-大量-event開發者可以透過-restful-json-interface-來跟-backbonejs-的-model-及-collection-搭配如果想瞭解-backbonejs-線上文件可以參考">什麼是 Backbone.js 簡單來說 Backbone.js 就是一套前端 Javascript Framework，它提供 MVC 架構，相信大家都玩過後端 MVC，那至於前端呢，好像比較少人提到，這就是介紹 Backbone.js 最主要的目的。Backbone.js 包含了 Model View Controller 來讓使者操作，Model 提供了key-value 結構，以及可以 binding 大量 event，開發者可以透過 RESTful JSON interface 來跟 Backbone.js 的 Model 及 Collection 搭配。如果想瞭解 Backbone.js 線上文件可以參考&lt;/h3>
&lt;p>&lt;a href="http://github.com/documentcloud/backbone/" target="_blank">GitHub 網站&lt;/a>，如果想瞭解程式碼可以參考 &lt;a href="http://documentcloud.github.com/backbone/docs/backbone.html" target="_blank">source code 註解&lt;/a>。&lt;/p></description></item><item><title>Node.js Version Management 多版本管理</title><link>https://blog.wu-boy.com/2011/11/node-version-management/</link><pubDate>Tue, 29 Nov 2011 05:37:19 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/11/node-version-management/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6033708087/" title="nodejs-light by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm7.static.flickr.com/6199/6033708087_ff1a02a337_o.jpg?resize=260%2C71&amp;#038;ssl=1" alt="nodejs-light" data-recalc-dims="1" />&lt;/a>
&lt;/div> 相信大家對於
&lt;p>&lt;a href="http://nodejs.org" target="_blank">Node.js&lt;/a> 版本 Release 太快而感到困擾，每次新版出來，就要開始升級原本的版本，加上測試及修改，一定會浪費不少時間在上面，不管是任何語言我都希望能有一套 Version Management 來管理各版本之間的差異，以及讓使用者可以隨時切換版本來使用測試。那今天來介紹一套 &lt;a href="https://github.com/visionmedia/n" target="_blank">Node.js Version Management&lt;/a>，這隻程式是用 shell script 下去撰寫，可以安裝多版本在 Linux 本機上面，隨時都可以切換不同版本測試。此作者也是 &lt;a href="http://expressjs" target="_blank">expressjs Framework&lt;/a> 發起者。&lt;/p></description></item><item><title>Front End Engineer 前端設計師必備工具 Live.js</title><link>https://blog.wu-boy.com/2011/11/front-end-engineer-love-livejs/</link><pubDate>Fri, 04 Nov 2011 03:46:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/11/front-end-engineer-love-livejs/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="Livejs by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/6311229214/">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6058/6311229214_14677a9114.jpg?resize=304%2C105&amp;#038;ssl=1" alt="Livejs" data-recalc-dims="1" />&lt;/a>
&lt;/div> 在不久之前介紹一篇:
&lt;p>&lt;a href="http://blog.wu-boy.com/2011/10/how-to-install-livereload/" target="_blank">LiveReload 網頁程式設計師必備工具&lt;/a>，該篇適合用在寫後端+前端的開發者，對於剛開始摸網頁的初學者可能不是很容易就上手，加上在 Windows 或 Linux 上面需要一點安裝步驟。不久之前在 &lt;a href="http://www.codeigniter.org.tw/irc" target="_blank">IRC 頻道 #codeigniter.tw&lt;/a> 有網友熱心提供一套好用工具 &lt;a href="http://livejs.com/" target="_blank">Live.js&lt;/a>，這一套幫助您開發前端設計的部份，也就是 Javascript Html 跟 CSS，一樣讓您不用在切換視窗 Alt+TAB，只要您任何時間修改了 HTML + CSS + Javascript，視窗就會自動重新 reload，底下整理該工具特性&lt;/p>
&lt;ul>
&lt;li>只有支援 Html JavaScript CSS 三種格式&lt;/li>
&lt;li>只有支援網站 Local 檔案，也就是必須是同網域&lt;/li>
&lt;li>並不支援 File:// 協定，換句話說必須有 Web Server (&lt;a href="http://www.apache.org/" target="_blank">Apache&lt;/a> or &lt;a href="http://www.lighttpd.net/" target="_blank">Lighttpd&lt;/a> or &lt;a href="http://wiki.nginx.org/" target="_blank">Nginx&lt;/a>)&lt;/li>
&lt;/ul></description></item><item><title>HTML5 placeholder attribute 在 IE 上顯示</title><link>https://blog.wu-boy.com/2011/11/html5-placeholder-attribute-on-ie/</link><pubDate>Tue, 01 Nov 2011 07:38:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/11/html5-placeholder-attribute-on-ie/</guid><description>程式設計師在網頁表單上通常會設計很多提示的功能，而在 Html5 提供了 placeholder attribute 這功能，目前 FireFox Safari Google Chrome 都沒有顯示上的問題，唯獨 IE8(含以下)都沒辦法顯示這功能，所以必須透過 javascript 來解決這部份問題了，網路上找到這篇解決方式，底下是原始碼
解決原理其實很簡單，那就先將 placeholder 寫入到 input value 裡面，在 focus event 當下比對 input value 是否等於 placeholder 的值，如果是就清空，反之透過 onblur event 來寫回原先的 placeholder 值，缺點就是如果當 input type = password 的時候會很麻煩。底下提供轉成 CoffeeScript 的程式碼：
add_placeholder = (id, placeholder) ->
el = document.getElementById(id)
el.placeholder = placeholder
el.onfocus = () ->
if(this.value == this.placeholder)
this.value = ''
el.style.cssText = ''
el.onblur = () ->
if(this.value.length == 0)
this.</description></item><item><title>JavaScript Reference Select and Option objects 用法介紹</title><link>https://blog.wu-boy.com/2011/08/javascript-reference-select-and-option-objects-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%B4%B9/</link><pubDate>Fri, 19 Aug 2011 08:18:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/08/javascript-reference-select-and-option-objects-%E7%94%A8%E6%B3%95%E4%BB%8B%E7%B4%B9/</guid><description>&lt;p>在網頁裡面用 &lt;a href="http://www.w3schools.com/jsref/dom_obj_select.asp" target="_blank">Select&lt;/a> 是很常遇到的，之前也寫了一篇&lt;a href="http://blog.wu-boy.com/2009/03/jquery-%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97-select-liset-index-%E5%92%8C-value-%E5%80%BC/" target="_blank">如何利用 jQuery 動態增加 option 或取值&lt;/a>，&lt;a href="http://jQuery.com" target="_blank">jQuery&lt;/a> 部份就不介紹了，那是需要搭配 &lt;a href="http://www.texotela.co.uk/code/jquery/select/" target="_blank">jQuery Plugin: Select box manipulation&lt;/a>，今天要介紹的是如何用 javascript 動態取值或者是增加 option 選項。因為我發現有使用者直接利用 &lt;a href="http://www.tizag.com/javascriptT/javascript-innerHTML.php" target="_blank">innerHtml&lt;/a> 的方式來把資料塞入到 Select 裡面，雖然 &lt;a href="http://moztw.org/" target="_blank">FireFox&lt;/a> 或 &lt;a href="http://www.google.com/chrome?hl=zh-TW" target="_blank">Chrome&lt;/a> 都可以正常運作，但是遇到 IE 還是沒辦法動。&lt;/p>
&lt;h3 id="如何取得-select-element-底下很多方法可以取得-select-element-1-透過-form-name--element-name">如何取得 select element 底下很多方法可以取得 select element: 1. 透過 form name + element name&lt;/h3>
&lt;pre class="brush: jscript; title: ; notranslate" title="">document.myform.selectname&lt;/pre> 2. 透過 form name + element 陣列(注意看 select 是位在 form element index 值多少)
&lt;pre class="brush: jscript; title: ; notranslate" title="">document.myform.elements&lt;em>&lt;/em>&lt;/pre> 3. 透過獨一無二的 ID
&lt;pre class="brush: jscript; title: ; notranslate" title="">document.getElementById("selectid")&lt;/pre></description></item><item><title>推薦一本書籍 Master Mobile Web Apps with jQuery Mobile</title><link>https://blog.wu-boy.com/2011/08/%E6%8E%A8%E8%96%A6%E4%B8%80%E6%9C%AC%E6%9B%B8%E7%B1%8D-master-mobile-web-apps-with-jquery-mobile/</link><pubDate>Fri, 12 Aug 2011 07:25:52 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/08/%E6%8E%A8%E8%96%A6%E4%B8%80%E6%9C%AC%E6%9B%B8%E7%B1%8D-master-mobile-web-apps-with-jquery-mobile/</guid><description>在這裡跟大家推薦一本國外的書籍，也就是 Elated.com 網站作者 Matt Doyle 推出的一本新書 Master Mobile Web Apps with jQuery Mobile，此作者也有推出 PHP 及 Photoshop 的書籍，本人相當佩服有美工天份又會寫程式人才。然而現在當紅的 Mobile Device，大家相繼為了 iOS, Android 或其他手持式裝置撰寫 Web 介面，目前網路上大家推的其中一套就是 jQuery Mobile，而我呢，正在摸索另一套強大的 Web App Framework: Sencha Touch，功能來比的話，個人覺得 Sencha Touch 優勢比較多，之後有機會再來寫一系列的 Sencha Touch 文章。此書有提供目錄可以參考，該作者會教大家如何搭配 PHP 跟 MySQL 結合 jQuery Mobile API 來撰寫程式，書籍應該是蠻完整的，目前售價美金19元，如果有興趣的人可以上網下單。</description></item><item><title>無痛安裝 NodeJS 和 Node Framework Express</title><link>https://blog.wu-boy.com/2011/08/%E7%84%A1%E7%97%9B%E5%AE%89%E8%A3%9D-nodejs-%E5%92%8C-node-framework-express/</link><pubDate>Thu, 11 Aug 2011 07:25:04 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/08/%E7%84%A1%E7%97%9B%E5%AE%89%E8%A3%9D-nodejs-%E5%92%8C-node-framework-express/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6033708087/" title="nodejs-light by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm7.static.flickr.com/6199/6033708087_ff1a02a337_o.jpg?resize=260%2C71&amp;#038;ssl=1" alt="nodejs-light" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://nodejs.org/" target="_blank">NodeJS&lt;/a> 是目前當紅的 Web 2.0 技術，去年 &lt;a href="http://coscup.org/2010/zh-tw/program/" target="_blank">COSCUP 2010&lt;/a> 就有 &lt;a href="http://www.KKBOX.com.tw" target="_blank">KKBOX&lt;/a> 資深工程師 ericpi 來探討這個議題，NodeJS 背後使用了 V8 引擎為基礎，沒看過用純 JS 來當 Server-Side 吧，台灣很紅的 Plurk 也是大量使用 NodeJS，然而每開發一種語言，就會想開始找搭配的 Framework，那就首推 &lt;a href="http://expressjs.com/" target="_blank">Node Framework Express&lt;/a> 來撰寫程式，本篇是要介紹如何在 Ubuntu 10.10 無痛安裝 nodejs + express。&lt;/p>
&lt;h3 id="下載-nodejs-原始碼-直接到">下載 Nodejs 原始碼 直接到&lt;/h3>
&lt;p>&lt;a href="http://nodejs.org/#download" target="_blank">官網下載 Stable 的版本&lt;/a>吧，目前是 node-v0.4.10.tar.gz，也可以先看看 &lt;a href="http://nodejs.org/docs/v0.4.10/api/index.html" target="_blank">API Document&lt;/a>&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title=""># wget http://nodejs.org/dist/node-v0.4.10.tar.gz&lt;/pre></description></item><item><title>PHP function 參數 default value</title><link>https://blog.wu-boy.com/2011/08/php-function-%E5%8F%83%E6%95%B8-default-value/</link><pubDate>Sat, 06 Aug 2011 12:58:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/08/php-function-%E5%8F%83%E6%95%B8-default-value/</guid><description>2011.08.06 Update: 感謝 jaceju 指正筆誤 自己定義 PHP Function 的時候，假設該函式有1個參數，您可以傳入該參數或者是不傳，但是函式裡面如何判斷是否有傳入該參數呢？先看看底下例子:
function test($arg_1 = NULL)
{
// 判斷 $arg_1 參數是否傳入
$arg_1 = $arg_1 || 'test';
echo $arg_1; } 你會發現上面結果會是 1，而不是 test，大家會懷疑為什麼這樣寫不行呢，那是因為 || 是 boolean operators，他只會 return true 或是 false，而不是回傳 string，如果想這這樣寫，大概可以用 javascript 或 perl 語言來寫，javascript 可以參考之前的文章 [Javascript] 在函數裡設定參數預設值，然而 PHP 的正確寫法要用 ?: 來取代
function test($arg_1 = NULL)
{
// 判斷 $arg_1 參數是否傳入
$arg_1 = (isset($arg_1)) ? $arg_1 : 'test';
// 或者是
$arg_1 = $arg_1 ?</description></item><item><title>你不可不知的 JSON 基本介紹</title><link>https://blog.wu-boy.com/2011/04/%E4%BD%A0%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84-json-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</link><pubDate>Sun, 17 Apr 2011 06:56:53 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/04/%E4%BD%A0%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84-json-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</guid><description>&lt;p>還不知道 &lt;a href="http://www.json.org/">JSON&lt;/a> 是什麼嘛？本篇教學會帶您瞭解 JSON 在網站上的應用，以及運作流程跟使用 &lt;a href="http://www.php.net">PHP&lt;/a> 和 &lt;a href="http://zh.wikipedia.org/zh-hant/JavaScript">JavaScript&lt;/a> 來處理 JSON。假如您現在的工作就是網站設計師，相信一定聽過 JSON，但是什麼是 JSON，它能夠做什麼，及您能透過它在網站上做到哪些事情呢？&lt;/p>
&lt;p>透過本篇介紹您可以瞭解基本的 JSON，底下會列出本篇會提到的重點：&lt;/p>
&lt;ul>
&lt;li>什麼是 JSON&lt;/li>
&lt;li>JSON 應用在哪些地方&lt;/li>
&lt;li>如何建立 JSON 字串&lt;/li>
&lt;li>一個簡單的 JSON 範例&lt;/li>
&lt;li>JSON vs XML&lt;/li>
&lt;li>如何透過 PHP 及 JavaScript 使用 JSON&lt;/li>
&lt;/ul>
&lt;h2 id="什麼是-json">什麼是 JSON&lt;/h2>
&lt;p>JSON 是個以純文字為基底去儲存和傳送簡單結構資料，你可以透過特定的格式去儲存任何資料(字串,數字,陣列,物件)，也可以透過物件或陣列來傳送較複雜的資料。一旦建立了您的 JSON 資料，就可以非常簡單的跟其他程式溝通或交換資料，因為 JSON 就只是個純文字格式。&lt;/p>
&lt;p>JSON 的優點如下:&lt;/p>
&lt;ul>
&lt;li>相容性高&lt;/li>
&lt;li>格式容易瞭解，閱讀及修改方便&lt;/li>
&lt;li>支援許多資料格式 (number,string,booleans,nulls,array,associative array)&lt;/li>
&lt;li>許多程式都支援函式庫讀取或修改 JSON 資料&lt;/li>
&lt;/ul></description></item><item><title>[網站] 好站連結 (八) Android, javascript, CSS, PHP, Perl, FreeBSD, Linux</title><link>https://blog.wu-boy.com/2011/04/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E5%85%AB-android-javascript-css-php-perl-freebsd-linux/</link><pubDate>Sat, 02 Apr 2011 08:54:18 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/04/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E5%85%AB-android-javascript-css-php-perl-freebsd-linux/</guid><description>PHP
9 Useful PHP Functions and Features You Need to Know CSS
Tips to Code Better CSS in your Projects Html5
A ROCK-SOLID DEFAULT FOR HTML5 AWESOME( Html5 模板) The Official Guide to HTML5 Boilerplate Create a Sticky Note Effect in 5 Easy Steps with CSS3 and HTML5 Git:
git-server-的兩三事 Pro Git - Table of Contents 簡體中文版 Git 初學筆記 - 實作測試 | Tsung&amp;rsquo;s Blog Javascript:
Learning JavaScript and DOM with Console 淺談 JavaScript 編程語言的編碼規範 Creating photo gallery using jQuery and VisualLightBox Importing multiple RSS feeds – using newsWidget (jQuery) Evolution of Script Loading Global eval.</description></item><item><title>2011 OSDC Day 1 筆記</title><link>https://blog.wu-boy.com/2011/03/2011-osdc-day-1-%E7%AD%86%E8%A8%98/</link><pubDate>Thu, 31 Mar 2011 12:55:56 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/03/2011-osdc-day-1-%E7%AD%86%E8%A8%98/</guid><description>Update: 補上 OSDC 紀錄影片 2011.06.26 今年很高興可以北上參加 OSDC 2011 (Open Source Developers Conference)，由於之前都在南部唸書及工作，沒有機會北上參加聚會，現在人在新竹，終於有機會可以參加了，雖然早上六點就要起床趕電車了，不過到現場聽課感覺就是不同，也可以認識很多新朋友，底下來紀錄上課筆記
微軟與 jQuery 社群的親密接觸 講者: Eric Shangkuan (Microsoft) Slide: 微軟與 jQuery 社群的親密接觸 這是 OSDC 第一場演講，早上九點就開始了，雖然人不多，但是蠻多人還是為了講者而來，首先介紹什麼是 jQuery，以及 jQuery 一些基本用法，像是 CSS selector，如何在 Windows Visual Studio 上面開發 jQuery 及撰寫 plugin 整合進去 ASP.Net，最後介紹三個不錯用的 jQuery Plugin: Templeate, Datalink, Globalzation。
Templeate: 這搭配 Facebook api 可以直接做個人頁面，請參考這裡 Globalzation: 前端多國語系實做 Datalink: 可以快速處理 form，利用 object 跟 jQuery 搭配 如果要研究上述三個 jQuery Plugin 可以參考底下: jQuery Datalink: https://github.com/jquery/jquery-datalink jQuery Templeate: https://github.com/jquery/jquery-tmpl jQuery Globalzation: https://github.</description></item><item><title>用 js 或 php 判斷 Android 手機上網</title><link>https://blog.wu-boy.com/2011/03/%E7%94%A8-js-%E6%88%96-php-%E5%88%A4%E6%96%B7-android-%E6%89%8B%E6%A9%9F%E4%B8%8A%E7%B6%B2/</link><pubDate>Sat, 05 Mar 2011 09:18:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/03/%E7%94%A8-js-%E6%88%96-php-%E5%88%A4%E6%96%B7-android-%E6%89%8B%E6%A9%9F%E4%B8%8A%E7%B6%B2/</guid><description>之前寫了一篇 jQuery 偵測瀏覽器版本, 作業系統(OS detection)，這次可以來加上 Android 手機版本，其實就是分析瀏覽器 User Agent 來達到目的，底下分享 PHP 跟 Javascript 作法
PHP 方法 if(stripos($_SERVER['HTTP_USER_AGENT'],'Android') !== false) {
header('Location: http://android.xxx.com');
exit();
} Javascript 方法 if(navigator.userAgent.match(/Android/i))
{
window.location = 'http://android.xxx.com';
} Apache .htaccess 方法 用 Apache mod rewrite 方法
RewriteCond %{HTTP_USER_AGENT} ^.*Android.*$
RewriteRule ^(.*)$ http://android.xxx.com [R=301]</description></item><item><title>利用 jQuery 動態改變網站 CSS</title><link>https://blog.wu-boy.com/2010/10/%E5%88%A9%E7%94%A8-jquery-%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A%E7%B6%B2%E7%AB%99-css/</link><pubDate>Thu, 07 Oct 2010 10:05:49 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/10/%E5%88%A9%E7%94%A8-jquery-%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A%E7%B6%B2%E7%AB%99-css/</guid><description>繼前一篇所寫的『jQuery 偵測瀏覽器版本, 作業系統(OS detection)』，當我們遇到手機上網使用者，可以透過 javascript 來判斷目前使用者瀏覽器以及 OS，iPad user agent 如下:
Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10 我們必須分析上面字串來判斷是否用手機上網，手機網頁跟PC網頁大小一定有所不同，透過底下兩個方法來改變瀏覽器的畫面
自動導向手機網頁 動態改變 CSS 兩個方法都不錯，如果決定使用前者，建議在 Server side 那邊做判斷，底下先列出 javascript, PHP, .htaccess 判斷檢查 The JavaScript var isiPad = navigator.userAgent.match(/iPad/i) != null; The PHP $isiPad = (bool) strpos($_SERVER['HTTP_USER_AGENT'],'iPad'); The .htaccess RewriteCond %{HTTP_USER_AGENT} ^.*iPad.*$
RewriteRule ^(.*)$ http://ipad.yourdomain.com [R=301] 如果您在前端做判斷，那就使用 jQuery 方式: if(jQuery){
jQuery("body").addClass("jq");
}
CSS 檔案: .</description></item><item><title>jQuery 偵測瀏覽器版本, 作業系統(OS detection)</title><link>https://blog.wu-boy.com/2010/10/jquery-%E5%81%B5%E6%B8%AC%E7%80%8F%E8%A6%BD%E5%99%A8%E7%89%88%E6%9C%AC-%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1os-detection/</link><pubDate>Wed, 06 Oct 2010 03:32:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/10/jquery-%E5%81%B5%E6%B8%AC%E7%80%8F%E8%A6%BD%E5%99%A8%E7%89%88%E6%9C%AC-%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1os-detection/</guid><description>&lt;p>&lt;strong>update: 簡易版的偵測 iphone/ipod time: 23:32&lt;/strong> &lt;a href="http://jquery.com/">jQuery&lt;/a> 真是一個相當方便的 javascript framework，最近在弄嵌入式系統時候需要去偵測瀏覽器 user agent，就類似下此訊息 &amp;ldquo;&lt;span style="color:red">&lt;strong>Mozilla/4.0 (compatible; MSIE 4.01; Windows 95)&lt;/strong>&lt;/span>&amp;quot;，原本打算直接用 C 語言內建的 &lt;span style="color:green">&lt;strong>getenv(&amp;ldquo;HTTP_USER_AGENT&amp;rdquo;)&lt;/strong>&lt;/span> 來做掉，不過後來想想，直接在 UI 那邊，利用 jQuery 來偵測瀏覽器版本、系統OS，這樣就解決了，上網找到有人寫了 &lt;a href="http://www.mengu.net/post/jquery-os-detection">jQuery browser and OS detection plugin&lt;/a>，利用底下語法就可以知道一些 user agent 裡面的資料&lt;/p>
&lt;pre class="brush: xml; title: ; notranslate" title="">
&lt;div id="os">
&lt;/div>
&lt;div id="browser">
&lt;/div>
&lt;div id="version">
&lt;/div>
&lt;div id="d_width">
&lt;/div>
&lt;div id="d_height">
&lt;/div>
&lt;/pre></description></item><item><title>Html5 模板架構(Boilerplate)</title><link>https://blog.wu-boy.com/2010/08/html5-%E6%A8%A1%E6%9D%BF%E6%9E%B6%E6%A7%8Bboilerplate/</link><pubDate>Mon, 23 Aug 2010 14:53:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/08/html5-%E6%A8%A1%E6%9D%BF%E6%9E%B6%E6%A7%8Bboilerplate/</guid><description> 今年在 COSCUP 大會上最主流的議題就是 Html5，今天看到一個網站 HTML5 Boilerplate，這網站提一個全新 html 5 模板，自從離開 Dreamweaver 樣板軟體，利用 Pspad 手動撰寫 html，此網站就發揮非常大的用處，提供全新 html，CSS 以及 javascript，支援了底下很多功能：
跨瀏覽器 (IE6&amp;hellip;) 支援多種 html5 Tag Compress 和 cache html 檔案 CSS IE6 , IE7 Hack IE6 Png Fix (連這個都幫忙解決了) 支援 CDN jQuery，避免在 local 端沒讀取到檔案 你還可以根據自己需要的功能做添加或者是減少，CSS reset、跨瀏覽器 CSS、robots.txt、Apache .htaccess cache 壓縮也有支援，如果不需要的功能，也可以參考看看，對於初學者也是非常好的學習例子。</description></item><item><title>[網站] 好站連結 (七) Android, javascript, Css, PHP, Perl, FreeBSD, Linux</title><link>https://blog.wu-boy.com/2010/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%83-android-javascript-css-php-perl-freebsd-linux/</link><pubDate>Fri, 30 Jul 2010 14:53:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%83-android-javascript-css-php-perl-freebsd-linux/</guid><description>Windows C#
C# 比較字串 MSDN 比較字串 Request.Form Collection Request Query String / Form Parametrs ASP.NET QueryString Usage Using include files with ASP.NET html
[將所有 的內容包到一個
中][7] apache
Fixing mod_rewrite and .htaccess on GoDaddy Hosting javascript
jQuery Week Calendar Javascript: reference the parent window from a popup How to get and set form element values with jQuery How to check and uncheck a checkbox with jQuery Loop through parameters passed to a Javascript function perl-completion.</description></item><item><title>[筆記] iframe 父頁子頁呼叫函式 parent call function</title><link>https://blog.wu-boy.com/2010/05/%E7%AD%86%E8%A8%98-iframe-%E7%88%B6%E9%A0%81%E5%AD%90%E9%A0%81%E5%91%BC%E5%8F%AB%E5%87%BD%E5%BC%8F-parent-call-function/</link><pubDate>Fri, 07 May 2010 16:13:48 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/05/%E7%AD%86%E8%A8%98-iframe-%E7%88%B6%E9%A0%81%E5%AD%90%E9%A0%81%E5%91%BC%E5%8F%AB%E5%87%BD%E5%BC%8F-parent-call-function/</guid><description>紀錄 iframe 如何呼叫子頁或者是父頁函式，iframe 在現今 Web 2.0 時代已經不流行了，因為有很多問題的存在，例如對於 SEO 搜尋引擎也沒有幫助，但是也是很多人在使用，底下筆記心得，說不定之後會 google 到自己的文章，哈哈。 父頁(主視窗)呼叫子頁函式：
/* iframeID 是 iframe ID*/
window.iframeID.formSubmit();
/* ifr 是 iframe ID */
document.getElementById('ifr').contentWindow.formSubmit();
子頁(iframe)呼叫父頁(主視窗)函式： parent.formSubmit(); 如果有兩層 parent.parent.formSubmit(); 注意 timing issue，等 iframe 視窗 load 完之後才可以呼叫 iframe function。至於如果取主視窗跟 iframe 的變數 value，可以利用 jQuery $("#ID") 方式來得到。 reference: 【程式】JS : parent , iframe function call Access child function from iframe</description></item><item><title>[jQuery] 解決 IE6 PNG 透明背景 (Supersleight jQuery Plugin for Transparent PNGs in IE6)</title><link>https://blog.wu-boy.com/2010/05/jquery-%E8%A7%A3%E6%B1%BA-ie6-png-%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AF-supersleight-jquery-plugin-for-transparent-pngs-in-ie6/</link><pubDate>Sun, 02 May 2010 08:56:05 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/05/jquery-%E8%A7%A3%E6%B1%BA-ie6-png-%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AF-supersleight-jquery-plugin-for-transparent-pngs-in-ie6/</guid><description>今天無意間看到 Drew McLellan 在 2007 年寫了這篇 Transparent PNGs in Internet Explorer 6，真的是太晚發現這篇了，之前自己寫到一篇：『[CSS] IE 6, 7, 8 FireFox hack 支援透明背景圖 background or img javascript』，雖然 Google 官方網站宣佈完全不支援 IE6 瀏覽器，打算只支援 Microsoft Internet Explorer 7.0+, Mozilla Firefox 3.0+, Google Chrome 4.0+, Safari 3.0+，可是我們這些 Web Developer 還是需要考慮客戶的瀏覽器阿，因為客戶才是最大的，尤其是在一些學術機構，安裝好 XP，預設就是 IE6，從 Google 分析裡面，IE6 也是網站的客戶大群。
先來介紹 Drew McLellan 寫的一支好用 js 來改善所有 png 透明圖檔，最主要是修正 background-image 跟 img tag 所包含的 png 圖檔
先下載：Download SuperSleight，解壓縮放到 js 資料夾
針對 IE6 瀏覽器寫入 html</description></item><item><title>[jQuery] AjaxFileUpload : Multiple File Upload plugin</title><link>https://blog.wu-boy.com/2010/04/jquery-ajaxfileupload-multiple-file-upload-plugin/</link><pubDate>Tue, 13 Apr 2010 06:42:48 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/04/jquery-ajaxfileupload-multiple-file-upload-plugin/</guid><description>最近 survey 一些 AJAX upload plugin by jQuery，或者是一些網路知名 upload opensource: SWFUpload, 以及目前很強大的 Plupload，先來說明 AjaxFileUpload 這個 jQuery Plugin 單一檔案上傳，如果想要簡單方便的單一上傳，我很推薦這個，搭配回傳的 json type 吐出錯誤訊息還蠻好用的，雖然作者給單一上傳的說明，不過還是可以將它改成多檔上傳，也就是多增加 input type=&amp;ldquo;file&amp;rdquo; 就可以了，底下介紹一下怎麼實作單一檔案或者是多檔案上傳。
單一檔案上傳 先 include AjaxFileUpload javascript html: jQuery code: function ajaxFileUpload()
{
//這部份可以省略，或者是撰寫當 ajax 開始啟動需讀取圖片，完成之後移除圖片
$("#loading")
.ajaxStart(function(){
$(this).show();
})
.ajaxComplete(function(){
$(this).hide();
});
/*
prepareing ajax file upload
url: the url of script file handling the uploaded files
fileElementId: the file type of input element id and it will be the index of $_FILES Array()
dataType: it support json, xml
secureuri:use secure protocol
success: call back function when the ajax complete
error: callback function when the ajax failed
*/
$.</description></item><item><title>[CSS] IE 6, 7, 8 FireFox hack 支援透明背景圖 background or img javascript</title><link>https://blog.wu-boy.com/2010/04/css-ie-6-7-8-firefox-hack-%E6%94%AF%E6%8F%B4%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AF%E5%9C%96-background-or-img-javascript/</link><pubDate>Mon, 05 Apr 2010 16:44:12 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/04/css-ie-6-7-8-firefox-hack-%E6%94%AF%E6%8F%B4%E9%80%8F%E6%98%8E%E8%83%8C%E6%99%AF%E5%9C%96-background-or-img-javascript/</guid><description>&lt;p>先前在國外部落格發現一篇非常好用的教學：&lt;a href="http://net.tutsplus.com/tutorials/html-css-techniques/quick-tip-how-to-target-ie6-ie7-and-ie8-uniquely-with-4-characters/">Quick Tip: How to Target IE6, IE7, and IE8 Uniquely with 4 Characters&lt;/a>，裡面有提供一部教學影片，非常好用，也很實在，底下可以先看影片，看完大概就可以針對 IE, FireFox, Chrome 進行 CSS Hack。 目前網頁製作，要符合多瀏覽器跨平台(&lt;a href="http://www.microsoft.com/taiwan/products/ie/">IE&lt;/a>, &lt;a href="http://www.apple.com/tw/safari/download/">Safari&lt;/a>, &lt;a href="http://www.google.com.tw/chrome">Chrome&lt;/a>, &lt;a href="http://moztw.org/">FireFox&lt;/a>…等)，就必須動到 CSS Hack，雖然 Google 已經宣稱不支援 IE6，但是很多單位，很多學校跟客戶都是使用 IE6 瀏覽器，不只國內這樣，國外大廠也都希望支援 IE 系列，包含 IE6, IE7, IE8，這時候就必須知道如何分別針對各種不同 IE 做設定，底下就來看看實做例子。&lt;/p></description></item><item><title>[編輯器] CKeditor 更換 background-color and font-size</title><link>https://blog.wu-boy.com/2010/03/%E7%B7%A8%E8%BC%AF%E5%99%A8-ckeditor-%E6%9B%B4%E6%8F%9B-background-color-and-font-size/</link><pubDate>Tue, 30 Mar 2010 12:21:52 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/03/%E7%B7%A8%E8%BC%AF%E5%99%A8-ckeditor-%E6%9B%B4%E6%8F%9B-background-color-and-font-size/</guid><description>相信大家在製作 Web 過程，一定會用到編輯器，然而 CKeditor 前身 FCKeditor 非常有名，FCKeditor 運行了六年之久，在去年2009年的時候，轉換成了 CKeditor，目前開發團隊也專注於此版本，現在已經推出到 CKEditor 3.2 released!，可以參考 CKEditor 3.x - Developer&amp;rsquo;s Guide，裡面也整合了 jQuery，替很多開發者想到更多管道去整合網站，然而今天設計網站，需要改變編輯器的背景顏色，預設是白色背景，但是並非所有網站都是白色呈現，所以才需要動到背景顏色，這樣好讓使用者可以融入整個背景，在 Plurk 發表了這問題，也找了官方論壇，都沒有發現正確解答，官方論壇有篇類似問題：Change the background color of the CKEditor text area，這篇自己試過是沒有用的，正確解法可以參考 CKeditor 的 API:contentsCss。 1. 首先在 CKeditor 根目錄建立新檔案：mysitestyles.css
body
{
/* Font */
font-family: Arial, Verdana, sans-serif;
font-size: 12px;
/* Text color */
color: #f0f0f0;
/* Remove the background color to make it transparent */
background-color: #353c42;
}
html
{
/* #3658: [IE6] Editor document has horizontal scrollbar on long lines
To prevent this misbehavior, we show the scrollbar always */
_overflow-y: scroll
}
img:-moz-broken
{
-moz-force-broken-image-icon : 1;
width : 24px;
height : 24px;
}
img, input, textarea
{
cursor: default;
} 2.</description></item><item><title>Google Chrome 支援超過 40,000 Extensions! with Greasemonkey</title><link>https://blog.wu-boy.com/2010/02/google-chrome-%E6%94%AF%E6%8F%B4%E8%B6%85%E9%81%8E-40000-extensions-with-greasemonkey/</link><pubDate>Wed, 03 Feb 2010 15:33:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/02/google-chrome-%E6%94%AF%E6%8F%B4%E8%B6%85%E9%81%8E-40000-extensions-with-greasemonkey/</guid><description>看到 Google Chrome Blog 發表的Google Chrome 支援超過 40,000 Extensions!，當 Google Chrome 瀏覽器剛出來的時候，造成 Web Developer 一些震撼，因為 Chrome 強調的是擁有快速的 Javascript 引擎，以及快速的啟動，Fast start-up、Fast loading、Fast search，也因此讓很多設計網站的工程師必須把 Chrome 的支援性考慮進去，但是由於剛推出的瀏覽器，沒有任何外掛功能，我本身用 FireFox 瀏覽器很多年了，FireFox 的附加元件讓許多程式設計師投入開發，也製造出很多方便的附加元件來讓大家使用，例如：FireBug、Gmail Manager、Greasemonkey…，然而 FireFox 最方便的就是 Greasemonkey 此附加元件，使用者可以撰寫簡單 Javascript 語言來跟指定網站進行元件控制，現在 Google 工程師聽到我們的聲音了，Google Chrome 4 加入 Greasemonkey user scripts 功能，大家可以到 userscripts.org 下載超過 40,000 script 安裝到 Chrome 瀏覽器。您可以在 blogger 使用 emoticons，大家可以去參考看看。 由於 Chrome 支援了 Greasemonkey，所以趕快把 FireFox 所安裝的 script，也安裝到 Chrome，可是我發現之前 DarkKiller 大神寫的 Wretch Album Expander 已經不能用了，所以我將它實做到 Chrome，可以從這裡下載安裝：Wretch Album Expander for Google Chrome or FireFox，平時自己偶而會看看無名小站，所以也是方便自己觀看照片，此 script 也可以安裝在 FireFox 喔。這樣大家就不用再看圖片還要一張一張慢慢點，只要負責按換頁就可以了 ^^。 來測試看看，隨便找一本無名相簿：馬甲‧小葵 ，畫面：點我觀看</description></item><item><title>Using firebug for firefox 除錯 javascript</title><link>https://blog.wu-boy.com/2010/01/using-firebug-for-firefox-%E9%99%A4%E9%8C%AF-javascript/</link><pubDate>Tue, 05 Jan 2010 15:57:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/01/using-firebug-for-firefox-%E9%99%A4%E9%8C%AF-javascript/</guid><description>在 Web 程式設計，不管是 html 或者是 CSS、甚至 javascript，都可以利用 FireFox Plugin: firebug 來除錯，順便推薦另一套 Web Develper 工具：Web Developer 1.1.8，這兩套都可以玩看看，在網路看自己東華電機學長 gasolin 寫過一篇：3 分鐘學會用 firebug 除錯 ，裡面有一個影片，建議大家看看：影片，如何利用 firebug 來對 javaascript 除錯，介紹了 firebug 優點。底下整理我看到的內容
1. 利用 console.log() 來針對變數除錯 以往都是利用 window.alert() 的方式來看看變數是否正確，現在只要在 javascript 裡面加入 console.log() 針對不同變數取值出來觀看 輸出會顯示： a is test
[1, 2, 3, 4] 2. 印出有圖示的訊息 console.info/console.warn/console.error 這功能跟 console.log 差不多，只有差在前面有圖示符號，請看下圖： 3. 使用 firebug 除錯 debugger; 只要在 js 裡面加入 debugger; 就會進行 逐步除錯，我想如果寫過 Window form 的使用者，C# ASP.net 最常用的就是逐步徵測錯誤，這功能相當方便，每一行跑了哪些變數，都可以逐一在旁邊顯示喔 大家看到逐步偵錯到第19行，前面變數都會在旁邊顯示喔，原本都是 null。</description></item><item><title>[Javascript] 在函數裡設定參數預設值</title><link>https://blog.wu-boy.com/2009/11/javascript-%E5%9C%A8%E5%87%BD%E6%95%B8%E8%A3%A1%E8%A8%AD%E5%AE%9A%E5%8F%83%E6%95%B8%E9%A0%90%E8%A8%AD%E5%80%BC/</link><pubDate>Wed, 25 Nov 2009 03:56:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/11/javascript-%E5%9C%A8%E5%87%BD%E6%95%B8%E8%A3%A1%E8%A8%AD%E5%AE%9A%E5%8F%83%E6%95%B8%E9%A0%90%E8%A8%AD%E5%80%BC/</guid><description>在網路上看到一篇：『Setting default values for missing parameters in a Javascript function』，提到在 Javascript 函式參數如果未定義，就會出現 undefine 的錯誤訊息，請看底下範例：
function foo(a, b, c) {
document.write('a: ' + a + ' ');
document.write('b: ' + b + ' ');
document.write('c: ' + c + ' ');
document.write('
');
} 測試函數： foo();
foo(1);
foo(1, 2);
foo(1, 2, 3); 輸出結果： a: undefined b: undefined c: undefined
a: 1 b: undefined c: undefined
a: 1 b: 2 c: undefined
a: 1 b: 2 c: 3 底下有兩種方式可以解決此問題： 1.</description></item><item><title>[jQuery] ThickBox 3.1 無限期停止支援維護</title><link>https://blog.wu-boy.com/2009/10/jquery-thickbox-31-%E7%84%A1%E9%99%90%E6%9C%9F%E5%81%9C%E6%AD%A2%E6%94%AF%E6%8F%B4%E7%B6%AD%E8%AD%B7/</link><pubDate>Wed, 21 Oct 2009 09:00:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/10/jquery-thickbox-31-%E7%84%A1%E9%99%90%E6%9C%9F%E5%81%9C%E6%AD%A2%E6%94%AF%E6%8F%B4%E7%B6%AD%E8%AD%B7/</guid><description>在 Oceanic / 人生海海 看到這篇 thickbox 停止維護，ThickBox jQuery plugin 裡面算是不錯用的工具，在網路上常常會聽到這個名詞，thickbox 作者也推薦了底下類似套件：
colorbox jQueryUI Dialog fancybox DOM window shadowbox.js 上面我還蠻推薦 fancybox 的，目前開發專案都以它為主，因為在瀏覽整頁圖片，我覺得效果不錯，剛剛去 try 了一下 colorbox，發覺這套也不錯用。在 fancybox 裡面設定 zoomSpeedIn 或者是 frameWidth 的值，就直接設定數字，不用在加上引號，不然會沒出現效果。
$(document).ready(function() {
$("a.group").fancybox({
'zoomSpeedIn': 300, 'zoomSpeedOut': 300
});
});</description></item><item><title>[網站] 好站連結 (二)</title><link>https://blog.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%BA%8C/</link><pubDate>Thu, 28 May 2009 05:29:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%BA%8C/</guid><description/></item><item><title>[網站] 好站連結(一)</title><link>https://blog.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90%E4%B8%80/</link><pubDate>Wed, 06 May 2009 03:47:58 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90%E4%B8%80/</guid><description/></item><item><title>[jQuery] 解決 IE6 不支援 :hover CSS</title><link>https://blog.wu-boy.com/2009/04/jquery-%E8%A7%A3%E6%B1%BA-ie-%E4%B8%8D%E6%94%AF%E6%8F%B4-hover-css/</link><pubDate>Fri, 03 Apr 2009 06:14:22 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/04/jquery-%E8%A7%A3%E6%B1%BA-ie-%E4%B8%8D%E6%94%AF%E6%8F%B4-hover-css/</guid><description>&lt;p>目前 IE 並不支援 :hover 的功能，難怪只有 &lt;a href="http://www.moztw.org/">FireFox&lt;/a> 可以看的懂 :hover CSS 的功能，上網查了一下解決方法，當然就是利用幫忙處理瀏覽器相容性的 javascript Framework：利用 &lt;a href="http://jquery.com/">jQuery&lt;/a> 就可以解決 IE 這部份的不相容，參考了 &lt;a href="http://blog.twkang.net">Whatup 的 Blog&lt;/a>：&lt;a href="http://blog.twkang.net/2008/11/08/tr-hover-%E5%9C%A8-ie-%E4%B8%8A%E7%9A%84-hack/">tr hover 在 IE 上的 hack&lt;/a>，解法也寫的很清楚。 先看看 html&lt;/p>
&lt;pre class="brush: xml; title: ; notranslate" title="">&lt;table border="0">
&lt;tr class="row1">
&lt;td>
test1
&lt;/td>
&lt;td>
test2
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/pre> css 寫法：
&lt;pre class="brush: css; title: ; notranslate" title="">tr.row1 { background-color: #EFEFEF; }
tr.row1:hover td{
background-color: #D1D7DC;
}&lt;/pre></description></item><item><title>[jQuery] 如何取得 select List index 和 value 值</title><link>https://blog.wu-boy.com/2009/03/jquery-%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97-select-liset-index-%E5%92%8C-value-%E5%80%BC/</link><pubDate>Fri, 20 Mar 2009 06:44:12 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/jquery-%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97-select-liset-index-%E5%92%8C-value-%E5%80%BC/</guid><description>&lt;p>上次寫了 &lt;a href="http://blog.wu-boy.com/2009/03/18/1024/">[jQuery] 表單取值 radio checkbox select text 驗證表單&lt;/a>，這篇淺顯易懂，在 ptt 有人問到如何把 select 的 value 跟 text 值加入到另一個 select 的 options 裡面，其實還蠻簡單的，利用 &lt;a href="http://www.texotela.co.uk/code/jquery/select/">jQuery - Select box manipulation&lt;/a> 這個 plugin 就可以輕鬆做到了，底下是我的一些筆記心得：&lt;/p>
&lt;h2 id="實作案例">實作案例&lt;/h2>
&lt;p>首先如何取得 select 的 value 跟 text&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-1">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-2">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-3">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-4">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-4">4&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-5">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">* 取得 select value 值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$(&lt;span style="color:#cd5555">&amp;#39;#selectList&amp;#39;&lt;/span>).val();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>取得 text 值，可以利用 :selected 這個&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-1-1">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-1-1">1&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-1-2">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-1-2">2&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-1-3">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-1-3">3&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-1-4">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-1-4">4&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-1-5">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-1-5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">* 取得 select text 值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$(&lt;span style="color:#cd5555">&amp;#39;#selectList :selected&amp;#39;&lt;/span>).text();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>[jQuery] 表單取值 radio checkbox select text 驗證表單</title><link>https://blog.wu-boy.com/2009/03/jquery-%E8%A1%A8%E5%96%AE%E5%8F%96%E5%80%BC-radio-checkbox-select-text/</link><pubDate>Wed, 18 Mar 2009 04:37:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/jquery-%E8%A1%A8%E5%96%AE%E5%8F%96%E5%80%BC-radio-checkbox-select-text/</guid><description>&lt;p>最近在專案全面使用 &lt;a href="http://jquery.com/">jQuery&lt;/a> 來整合後台部份，目前還沒有大量用到 AJAX 的部份，等以後有時間會全部轉換 AJAX 利用 JSON 的部份，其實之前就有寫到一篇用 datatype JSON 的方式來實現 AJAX：&lt;a href="http://blog.wu-boy.com/2008/09/22/412/">[jQuery] AJAX 學習筆記 (一) 如何使用 JSON 驗證使用者表單&lt;/a>，大家可以參考看看，不過今天大概寫一下昨天在實做驗證表單取值的一些心得，在設計後台的時候，我把編輯文章跟新增文章的功能做在同一塊，然後利用 jQuery 去改變傳值狀態，利用 hidden 的 mode 欄位來決定是要新增文章還是修改文章&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">$(document).ready(function()
{
$("#add_news_link").click(function(){
$("#mode").attr("value", "add");
});
})
&lt;/pre></description></item><item><title>使用 CSS 排版製作網站</title><link>https://blog.wu-boy.com/2009/03/%E4%BD%BF%E7%94%A8-css-%E6%8E%92%E7%89%88%E8%A3%BD%E4%BD%9C%E7%B6%B2%E7%AB%99/</link><pubDate>Wed, 11 Mar 2009 12:45:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/%E4%BD%BF%E7%94%A8-css-%E6%8E%92%E7%89%88%E8%A3%BD%E4%BD%9C%E7%B6%B2%E7%AB%99/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/3346746764/" title="國立中正大學--經濟系含國際經濟研究所--第十屆全國實證經濟學論文研討會--首頁_1236772280180 (by appleboy46)">&lt;img title="國立中正大學--經濟系含國際經濟研究所--第十屆全國實證經濟學論文研討會--首頁_1236772280180 (by appleboy46)" src="https://i0.wp.com/farm4.static.flickr.com/3625/3346746764_1259500fd3.jpg?resize=395%2C500&amp;#038;ssl=1" alt="國立中正大學--經濟系含國際經濟研究所--第十屆全國實證經濟學論文研討會--首頁_1236772280180 (by appleboy46)" data-recalc-dims="1" />&lt;/a> 今天下午都在研究網站 &lt;a href="http://zh.wikipedia.org/wiki/CSS">CSS&lt;/a> 的排版跟製作，在現在 Web 2.0 的時代，很多入口網站全部都改換成 CSS 來排版，取代掉原本的 Table 表格，這算是相當重大的改變，一來對於維護網站會相當方便，二來就是省下很多頻寬資源，大型入口網站：&lt;a href="http://tw.yahoo.com">Yahoo&lt;/a>、&lt;a href="http://www.pixnet.net">痞客幫&lt;/a> 首頁全部都利用 CSS Div 的方式下去排版，當然一些基本的 CSS 觀念要有，這樣就很好學習了，CSS 排版觀念：&lt;a href="http://css.1keydata.com/tw/box-model.php">CSS 盒子模式&lt;/a>{.nav}、&lt;span style="font-family: Verdana,Arial,Helvetica,sans-serif;">&lt;a class="nav" href="http://css.1keydata.com/tw/float.php">CSS 浮動 (Float)&lt;/a>，可以參考 &lt;a href="http://css.1keydata.com/tw/">CSS 語法教學&lt;/a> 這裡，這個網站寫的相當簡單，可以當作入門網站，順手就把之前幫學校做的一個網站：&lt;/span>&lt;a href="http://www.ccu.edu.tw/economic/2009/index.php">國立中正大學::第十屆全國實證經濟學論文研討會&lt;/a> 全部換成 CSS，也通過 &lt;a href="http://enable.nat.gov.tw/">無障礙&lt;/a> A+ 程式驗證。&lt;/p></description></item><item><title>[WordPress] post 文章不能使用 javascript 語法</title><link>https://blog.wu-boy.com/2009/03/wordpress-post-%E6%96%87%E7%AB%A0%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8-javascript-%E8%AA%9E%E6%B3%95/</link><pubDate>Tue, 03 Mar 2009 12:38:12 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/wordpress-post-%E6%96%87%E7%AB%A0%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8-javascript-%E8%AA%9E%E6%B3%95/</guid><description>&lt;p>之前寫了一篇讓 wordpress 可以支援 &lt;a href="http://code.google.com/apis/maps/">Google Map API&lt;/a> 的教學：&lt;a href="http://blog.wu-boy.com/2008/10/04/532/">[AJAX] google map 的應用&lt;/a>，不過我將 WordPress 升級到 WordPress 2.8-bleeding-edge 版本，發現 javascript 語言就不能使用了，因為在寫 javascript 的時候，有利用到 &lt;br /> 這個 Tag，不過送出後轉出來的 javascript 語言會變成編碼過後，&amp;quot; 會變成 ” Big5 編碼，所以這個問題很困擾我，去找一下 ，Wordpress 把斷行完全用 wpautop 這個函式下去取代，所以你只要在內容寫入 &amp;lt;br / &amp;gt; 都會消失，不然就是出現怪問題。 這個問題也不是無解，在網路上找到兩個解法： 1. &lt;a href="http://www.ooso.net/inline-js">inline-js - wordpress plugin&lt;/a> 您只要在 javascript 語言包一層 tag 就可以了&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">&lt;/pre></description></item><item><title>[javascript]判斷中文全形字數有幾個</title><link>https://blog.wu-boy.com/2009/01/javascript%E5%88%A4%E6%96%B7%E4%B8%AD%E6%96%87%E5%85%A8%E5%BD%A2%E5%AD%97%E6%95%B8%E6%9C%89%E5%B9%BE%E5%80%8B/</link><pubDate>Thu, 22 Jan 2009 12:46:06 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/01/javascript%E5%88%A4%E6%96%B7%E4%B8%AD%E6%96%87%E5%85%A8%E5%BD%A2%E5%AD%97%E6%95%B8%E6%9C%89%E5%B9%BE%E5%80%8B/</guid><description>&lt;p>在 &lt;a href="http://www.ptt.cc/index.html">ptt&lt;/a> &lt;a href="telnet://ptt.cc">bbs&lt;/a> 的 AJAX 版討論到如何判斷計算有幾個中文字數，那 TonyQ 兄跟 toshii 兄分別提供了兩種方法，我自己測試了一下包含全形字型，如：？，。…這些都算喔，我自己想到 &lt;a href="http://www.cht.com.tw/">中華電信&lt;/a> &lt;a href="http://www.emome.net/">emome&lt;/a> 的簡訊系統也會有判斷數字加上英文跟中文字的算法，看了一下大致上都是相同的。 TonyQ 解法：&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">/*
利用 regex pattern
*/
function chineseCount(word){
return word.split(/[\u4e00-\u9a05]/).length -1;
}
var word="test中asd文asd字as到底asd有幾asd個?";
alert(chineseCount(word));
&lt;/pre></description></item><item><title>[jQuery]判斷 checkbox 是否選取，實現全選跟全部取消</title><link>https://blog.wu-boy.com/2008/12/jquery%E5%88%A4%E6%96%B7-checkbox-%E6%98%AF%E5%90%A6%E9%81%B8%E5%8F%96%EF%BC%8C%E5%AF%A6%E7%8F%BE%E5%85%A8%E9%81%B8%E8%B7%9F%E5%85%A8%E9%83%A8%E5%8F%96%E6%B6%88/</link><pubDate>Tue, 23 Dec 2008 05:50:02 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/12/jquery%E5%88%A4%E6%96%B7-checkbox-%E6%98%AF%E5%90%A6%E9%81%B8%E5%8F%96%EF%BC%8C%E5%AF%A6%E7%8F%BE%E5%85%A8%E9%81%B8%E8%B7%9F%E5%85%A8%E9%83%A8%E5%8F%96%E6%B6%88/</guid><description>&lt;p>在 jQuery 底下要如何實現這個功能，其實還蠻簡單的，首先看 html 部份&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-1">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-2">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-3">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-4">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-4">4&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-5">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-5">5&lt;/a>
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="hl-0-6">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#hl-0-6">6&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">input&lt;/span> &lt;span style="color:#658b00">name&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;user_active_col[]&amp;#34;&lt;/span> &lt;span style="color:#658b00">type&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;checkbox&amp;#34;&lt;/span> &lt;span style="color:#658b00">value&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;1&amp;#34;&lt;/span>&amp;gt; 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">input&lt;/span> &lt;span style="color:#658b00">name&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;user_active_col[]&amp;#34;&lt;/span> &lt;span style="color:#658b00">type&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;checkbox&amp;#34;&lt;/span> &lt;span style="color:#658b00">value&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;2&amp;#34;&lt;/span>&amp;gt; 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">input&lt;/span> &lt;span style="color:#658b00">name&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;user_active_col[]&amp;#34;&lt;/span> &lt;span style="color:#658b00">type&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;checkbox&amp;#34;&lt;/span> &lt;span style="color:#658b00">value&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;3&amp;#34;&lt;/span>&amp;gt; 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">input&lt;/span> &lt;span style="color:#658b00">name&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;user_active_col[]&amp;#34;&lt;/span> &lt;span style="color:#658b00">type&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;checkbox&amp;#34;&lt;/span> &lt;span style="color:#658b00">value&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;4&amp;#34;&lt;/span>&amp;gt; 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">input&lt;/span> &lt;span style="color:#658b00">name&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;user_active_col[]&amp;#34;&lt;/span> &lt;span style="color:#658b00">type&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;checkbox&amp;#34;&lt;/span> &lt;span style="color:#658b00">value&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;5&amp;#34;&lt;/span>&amp;gt; 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">input&lt;/span> &lt;span style="color:#658b00">name&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;clickAll&amp;#34;&lt;/span> &lt;span style="color:#658b00">id&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;clickAll&amp;#34;&lt;/span> &lt;span style="color:#658b00">type&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;checkbox&amp;#34;&lt;/span>&amp;gt; 全選
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>[AJAX] jQuery plugin cascade 多重下拉選單應用 by json</title><link>https://blog.wu-boy.com/2008/12/ajax-jquery-plugin-cascade-%E5%A4%9A%E9%87%8D%E4%B8%8B%E6%8B%89%E9%81%B8%E5%96%AE%E6%87%89%E7%94%A8-by-json/</link><pubDate>Fri, 19 Dec 2008 02:25:11 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/12/ajax-jquery-plugin-cascade-%E5%A4%9A%E9%87%8D%E4%B8%8B%E6%8B%89%E9%81%B8%E5%96%AE%E6%87%89%E7%94%A8-by-json/</guid><description>&lt;p>最近在弄動態下拉式選單，因為層級的關係，所以必須用到，大學裡面各學院，底下在各系所，在網路上看到一篇 &lt;a href="http://blog.roodo.com/taikobo0/archives/6166625.html">[AJAX] jQuery的多重下拉式選單應用 PART1&lt;/a>，實做起來是不會困難，可是我遇到一些怪問題就是了，目前還沒有解決，當然首推 &lt;a href="http://plugins.jquery.com">jQuery plugin&lt;/a> 套件 &lt;a href="http://plugins.jquery.com/project/cascade">cascade&lt;/a>，那也參考了國外的一篇文章 &lt;a href="http://devlicio.us/blogs/mike_nichols/archive/2008/05/25/jquery-cascade-cascading-values-from-forms.aspx">jQuery.cascade : Cascading values from forms&lt;/a> ，這幾篇看完其實就差不多了，因為大家都寫得很清楚，&lt;a href="http://dev.chayachronicles.com/jquery/cascade/index.html">官方網站&lt;/a> 更是把所有應用都寫出來了，詳細很多用法可以參考 &lt;a href="http://dev.chayachronicles.com/jquery/cascade/index.html">官方網站&lt;/a>，看原始碼大概就知道在寫甚麼了。 先來說明一下使用的方法：在這個 jQuery cascade plugin 裡面，定義了一格式：&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">/*
格式就在底下總共有三攔
*/
{'when':'selectedValue','value':'itemValue','text':'itemText'}
&lt;/pre> 第一個 when：這是上一層的 select 的 value 值 第二個 value：這是下一層的 select 的 value 值 第三個 text：這是下一層 option 的 text 我想有一點 html 基礎的，大概就知道我在說什麼了吧</description></item><item><title>[jQuery] AJAX 學習筆記 (一) 如何使用 JSON 驗證使用者表單</title><link>https://blog.wu-boy.com/2008/09/jquery-ajax-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-%E4%B8%80-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-json-%E9%A9%97%E8%AD%89%E4%BD%BF%E7%94%A8%E8%80%85%E8%A1%A8%E5%96%AE/</link><pubDate>Mon, 22 Sep 2008 04:09:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/09/jquery-ajax-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-%E4%B8%80-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-json-%E9%A9%97%E8%AD%89%E4%BD%BF%E7%94%A8%E8%80%85%E8%A1%A8%E5%96%AE/</guid><description>&lt;p>最近開始摸了 &lt;a href="http://jquery.com/">jQuery&lt;/a>，因為自己本身也很想學習，這是目前當紅的技術，許多網站已經開始在使用 jQuery AJAX 了，包含各大入口網站：&lt;a href="http://www.pixnet.net/">Pixnet 痞客幫&lt;/a>，大家會發現學習 jQuery 好處很多，重點是她將 javascript 整合了，讓你方便使用來讓網站 web 2.0 我想現在很多網站都是朝這個方向去進行了，如果想知道什麼是 AJAX 可以上網查&lt;a href="http://zh.wikipedia.org/wiki/Ajax">維基百科解釋&lt;/a>，已目前來說，大家都使用javascript 客戶端來取得資料，然而 AJAX 可以從Server端取的資料 show 在使用者端給大家看，底下會大概講解以及實做一個驗證。&lt;/p></description></item><item><title>[教學]網頁簡體繁體轉換程式(Google AJAX Language API)</title><link>https://blog.wu-boy.com/2008/08/%E6%95%99%E5%AD%B8%E7%B6%B2%E9%A0%81%E7%B0%A1%E9%AB%94%E7%B9%81%E9%AB%94%E8%BD%89%E6%8F%9B%E7%A8%8B%E5%BC%8Fgoogle-ajax-language-api/</link><pubDate>Thu, 14 Aug 2008 09:14:42 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/08/%E6%95%99%E5%AD%B8%E7%B6%B2%E9%A0%81%E7%B0%A1%E9%AB%94%E7%B9%81%E9%AB%94%E8%BD%89%E6%8F%9B%E7%A8%8B%E5%BC%8Fgoogle-ajax-language-api/</guid><description>&lt;p>在 &lt;a href="http://www.ptt.cc">PTT&lt;/a> PHP 版看到一篇：&lt;a href="http://www.ptt.cc/bbs/PHP/M.1218595508.A.8C4.html">[請益]簡體字轉繁體字的方法&lt;/a>，然後裡面其實有推文說可以用看看 &lt;a href="http://code.google.com/apis/ajaxlanguage/documentation/">Google AJAX Language API&lt;/a>，然後我自己去測試，發現只要文字一多，&lt;a href="http://www.google.com">google&lt;/a> 就轉換不出來了，就會出現無效果，我自己也回一篇 &lt;a href="http://www.ptt.cc/bbs/PHP/M.1218697288.A.440.html">Re: [請益]簡體字轉繁體字的方法&lt;/a>，其實問題出在哪裡，我也不確定，這可能要問 &lt;a href="http://www.google.com">google&lt;/a> 了，不然 google 提供的這個還蠻方便的，可以即時整合到網站裡面。 &lt;strong>update：google API 不能用的原因，就是轉換的字數超過限制&lt;/strong> 嗯嗯，後來改用&lt;a href="http://www.twvbb.com/vbb/thread/24/572/2/">【原創】深藍UTF-8正體簡體轉換函數 1.0&lt;/a> 裡面這套 VBB 系統提供的簡體繁體轉換，大概看一下原始碼，就可以使用了，不會很難，只要在網頁 header 端加上：&lt;/p></description></item><item><title>[jQuery] [影片] 12歲的小孩到 Google 講 jQuery</title><link>https://blog.wu-boy.com/2008/05/jquery-%E5%BD%B1%E7%89%87-12%E6%AD%B2%E7%9A%84%E5%B0%8F%E5%AD%A9%E5%88%B0-google-%E8%AC%9B-jquery/</link><pubDate>Wed, 21 May 2008 12:40:40 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/05/jquery-%E5%BD%B1%E7%89%87-12%E6%AD%B2%E7%9A%84%E5%B0%8F%E5%AD%A9%E5%88%B0-google-%E8%AC%9B-jquery/</guid><description>我在 SayYA 資訊站 裡面的 qrtt1個人版看到的，這個真的是太猛了，底下是他的影片：</description></item><item><title>[jQuery筆記] 時間日期外掛：timepicker | jQuery Plugins</title><link>https://blog.wu-boy.com/2008/05/jquery%E7%AD%86%E8%A8%98-%E6%99%82%E9%96%93%E6%97%A5%E6%9C%9F%E5%A4%96%E6%8E%9B%EF%BC%9Atimepicker-jquery-plugins/</link><pubDate>Tue, 13 May 2008 00:03:36 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/05/jquery%E7%AD%86%E8%A8%98-%E6%99%82%E9%96%93%E6%97%A5%E6%9C%9F%E5%A4%96%E6%8E%9B%EF%BC%9Atimepicker-jquery-plugins/</guid><description>&lt;p>之前因為需要使用到日期函式，就找到一個 jQuery 的 plugin：&lt;a href="http://blog.wu-boy.com/2008/04/30/194/">[jQuery筆記] 好用的日期函式 datepicker&lt;/a>，然後現在又需要用到時間的外掛，因為 datepicker 只有日期，我需要使用到時間部份，24小時幾分幾秒之類的，所以又去找到了 &lt;a href="http://plugins.jquery.com/">jQuery plugin&lt;/a> 裡面的 &lt;a href="http://plugins.jquery.com/project/timepicker">timepicker&lt;/a>，官方提供的這個外掛，我用起來不能使用，一直給我吐錯誤訊息給我，所以我也裝不起來，後來解決方法，就是去找別人改寫好的 timepicker 來用，所以我覺得還蠻奇怪的，為啥官網提供的外掛不能使用，Orz。 然而我是去網路上再去找有人另外寫好的，底下是他的版權：&lt;/p>
&lt;pre class="brush: xml; title: ; notranslate" title="">/*
* Copyright (c) 2006 Sam Collett (http://www.texotela.co.uk)
* Licensed under the MIT License:
* http://www.opensource.org/licenses/mit-license.php
*/
/*
* A time picker for jQuery
* Based on original timePicker by Sam Collet (http://www.texotela.co.uk)
* @name timePicker
* @version 0.1
* @author Anders Fajerson (http://perifer.se)
* @example $("#mytime").timePicker();
* @example $("#mytime").timePicker({step:30, startTime:"15:00", endTime:"18:00"});
*/
&lt;/pre></description></item><item><title>[jQuery筆記] 好用的日期函式 datepicker</title><link>https://blog.wu-boy.com/2008/04/jquery%E7%AD%86%E8%A8%98-%E5%A5%BD%E7%94%A8%E7%9A%84%E6%97%A5%E6%9C%9F%E5%87%BD%E5%BC%8F/</link><pubDate>Wed, 30 Apr 2008 09:37:51 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/04/jquery%E7%AD%86%E8%A8%98-%E5%A5%BD%E7%94%A8%E7%9A%84%E6%97%A5%E6%9C%9F%E5%87%BD%E5%BC%8F/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/2453730129/" title="100 (by appleboy46)">&lt;img src="https://i2.wp.com/farm3.static.flickr.com/2222/2453730129_e1682dc187.jpg?resize=200%2C201&amp;#038;ssl=1" title="100 (by appleboy46)" alt="100 (by appleboy46)" data-recalc-dims="1" />&lt;/a> 最近在學習 javascript，當然首推的就是 &lt;a href="http://jquery.com/">jQuery&lt;/a> 了，之前因為懶得做日期表單，因為日期表單需要三種欄位，一個是年，一個是月，一個是日，相當麻煩，一直在那邊 for 迴圈也不是辦法，雖然那是個解決方法，然後我之前用了&lt;a href="http://www.xt-commerce.cn/index.php">xt:Commerce&lt;/a> 這套 opensource的程式碼，把日期函式取出來：&lt;a href="http://blog.wu-boy.com/2007/08/08/115/">[Html] javascript 好用的時間日曆表&lt;/a>，不過我認為這方法也太麻煩，因為 jQuery 一行就可以解決的事情，幹麼還要用那個方法呢？&lt;/p></description></item><item><title>[相簿] Coppermine Photo Gallery Album Expander</title><link>https://blog.wu-boy.com/2008/04/%E7%9B%B8%E7%B0%BF-coppermine-photo-gallery-album-expander/</link><pubDate>Tue, 01 Apr 2008 07:48:01 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/04/%E7%9B%B8%E7%B0%BF-coppermine-photo-gallery-album-expander/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/2378954219/" title="js_1 by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm4.static.flickr.com/3022/2378954219_945799366e.jpg?resize=500%2C340&amp;#038;ssl=1" alt="js_1" data-recalc-dims="1" />&lt;/a> 今天看到 gslin大神 文章：&lt;a href="http://blog.gslin.org/archives/2008/04/01/1463/">PIXNET Album Expander&lt;/a>，然後裝了一下，發覺非常好用，而我自己本身也有架設相簿，相簿程式是 open source &lt;a href="http://coppermine-gallery.net/">Coppermine Photo Gallery&lt;/a>，想說就自己練習看看，寫一個自己上傳相簿之後，可以快速瀏覽相簿，而這隻程式要先安裝好外掛 &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/748">Greasemonkey&lt;/a>，這隻外掛我之前有介紹過：&lt;a href="http://blog.wu-boy.com/2008/02/23/140/">firefox and IE 的 greasemonkey&lt;/a>，大家可以看看，google 上面也有很多文章 script：&lt;a href="http://userscripts.org/scripts/show/24610">Coppermine Photo Gallery Album Expander&lt;/a> 測試相簿：&lt;a href="http://pic.wu-boy.com">我的相簿 Angel &amp;amp; Devil&lt;/a>&lt;/p></description></item></channel></rss>