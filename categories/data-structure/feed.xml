<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Structure on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/categories/data-structure/</link><description>Recent content in Data Structure on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Tue, 24 Jan 2023 08:08:14 +0800</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/data-structure/feed.xml" rel="self" type="application/rss+xml"/><item><title>用 Go 語言實現固定大小的 Ring Buffer 資料結構</title><link>https://blog.wu-boy.com/2023/01/ring-buffer-queue-with-fixed-size-in-golang/</link><pubDate>Tue, 24 Jan 2023 08:08:14 +0800</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2023/01/ring-buffer-queue-with-fixed-size-in-golang/</guid><description>&lt;p>&lt;img src="https://i.imgur.com/mDJolWF.png" alt="logo">&lt;/p>
&lt;p>Ring Buffer Queue 是&lt;strong>固定大小記憶體&lt;/strong>的 FIFO (first in, first out) 資料結構，用來處理不同 Process 之前的資料交換。工作原理就是在一段連續固定大小區間的記憶體用 (head/tail) 兩個指針來決定現在要將資料放在哪個位置。本篇將帶大家用 &lt;a href="https://go.dev">Go 語言&lt;/a>快速實現 Ring Buffer 資料結構。&lt;/p></description></item></channel></rss>