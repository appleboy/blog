<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sql on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</title><link>https://demo.gh.wu-boy.com/categories/sql/</link><description>Recent content in sql on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sun, 16 May 2021 00:57:45 +0000</lastBuildDate><atom:link href="https://demo.gh.wu-boy.com/categories/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB 效能調校紀錄</title><link>https://demo.gh.wu-boy.com/2021/05/mongodb-performance-tunning/</link><pubDate>Sun, 16 May 2021 00:57:45 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2021/05/mongodb-performance-tunning/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/DZKO3gMs5RhQ0-uGU2Y-uaTsb7HKCJU3lH91uggni5HA-fpDMqgvKPwHRwuo-jlCbAJZYyY9TKKovtCDT7OFgiclb2VYz58HwmDeHUX6FjlwfnuTkaTZxYudTIiuJ6yWsuNu2vs1vTQ=w1920-h1080" title="mongodb">&lt;img src="https://lh3.googleusercontent.com/DZKO3gMs5RhQ0-uGU2Y-uaTsb7HKCJU3lH91uggni5HA-fpDMqgvKPwHRwuo-jlCbAJZYyY9TKKovtCDT7OFgiclb2VYz58HwmDeHUX6FjlwfnuTkaTZxYudTIiuJ6yWsuNu2vs1vTQ=w1920-h1080" alt="mongodb" title="mongodb">&lt;/a>&lt;/p>
&lt;p>最近剛好在實作 &lt;a href="https://prometheus.io/">Prometheus&lt;/a> + &lt;a href="https://grafana.com/">Grafana&lt;/a> 的時候，對 MongoDB 做了容器 CPU 使用率 (&lt;code>container_cpu_usage_seconds_total&lt;/code>) 的監控，Metrics 寫法如下:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-bash" data-lang="bash">sum(
rate(container_cpu_usage_seconds_total{name!~&lt;span style="color:#cd5555">&amp;#34;(^&lt;/span>$&lt;span style="color:#cd5555">|^0_.*)&amp;#34;&lt;/span>}[1m]))
by (name)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>從上面的 Metrics 可以拉長時間來看，會發現專案的 MongoDB 非常不穩定，起起伏伏，這時候就需要來看看資料庫到底哪邊慢，以及看看哪個語法造成 CPU 飆高？&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/FbcbJ75SVSEmNb94X6z9JsjkhKmuzjEGUesnTVxwcP2SGYWJpblQaD5ks02brR9kP9HYqP7KpbQAaoa7RUuBWi8EnXdN2eTCzekyGVmKAY4ltnmEnNrWerAzZkHIp9gGKieO71WUhJk=w1920-h1080" alt="">&lt;/p>
&lt;p>接著為了看 MongoDB 的 Log 紀錄，把 Grafana 推出的 &lt;a href="https://grafana.com/oss/loki/">Loki&lt;/a>，也導入專案系統，將容器所有的 Log 都導向 Loki，底下可以看看 docker-compose 將 Log 輸出到 loki&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-fallback" data-lang="fallback"> logging:
driver: loki
options:
loki-url: &amp;#34;http://xxxxxxx/loki/api/v1/push&amp;#34;
loki-retries: &amp;#34;5&amp;#34;
loki-batch-size: &amp;#34;400&amp;#34;
loki-external-labels: &amp;#34;environment=production,project=mongo&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://lh3.googleusercontent.com/TooE3Q49jzI_FpbjXm4b3A_9aho8J4Qws64XmhVzDVbe6NPMCmgYmuw5bMRwnMgmk_lXxNHDU1n6RXwFGvoZvPxLuM6clRJ_ZGRC9S47rvFbm3k9v6v8qaHhC6vqsFkXENQYlRAqKn0=w1920-h1080" alt="">&lt;/p>
&lt;p>先看看結論，做法其實很簡單，找出相對應 Slow Query，把相關的欄位加上 Index，就可以解決了&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/WgyOX8OOff6KGKlOvSvoNxzDsPGyiXBwPa_PX3O7L9AYSBfQ9VoNAP5s_HkbmMa7rokTnF--ZLnJ4p6oLqoTCV2Gyq7B696SEbTIrGIi1kDVtijVpZlYTklq3qbLFtpKGAQHeXxHE-Q=w1920-h1080" alt="">&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/nzKkL7J5x_LmoqTFYav5kKA8Jkp4E4s8OCOekd-fz2HAeU2ySC3DopumqMIevqelMN_bvw7Ug7BB2f6ZJeubCQzz4w1Uby709NqsqTEkQcJK7IwVkcHt_ZkArRjSlKfZvyWBE6ZBLnY=w1920-h1080" alt="">&lt;/p></description></item><item><title>將 Postgres 資料轉換到 CSV 格式</title><link>https://demo.gh.wu-boy.com/2020/06/convert-postgres-data-to-csv-file/</link><pubDate>Mon, 29 Jun 2020 04:12:50 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2020/06/convert-postgres-data-to-csv-file/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w1920-h1080" title="postgres">&lt;img src="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w400" alt="postgres" title="postgres">&lt;/a>&lt;/p>
&lt;p>時常用到 &lt;a href="https://www.postgresql.org/" title="Postgres">Postgres&lt;/a> 轉換資料的功能，來即時協助 PM 了解目前使用者實際狀況，底下紀錄常用的指令。首先安裝 Postgres 環境，這邊其實就是用 Docker 方式來啟動一個全新的 Postgres DB。&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">db&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">image&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>postgres:12&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">restart&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>always&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">volumes&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>- pg-data:/var/lib/postgresql/data&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">logging&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">options&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">max-size&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#cd5555">&amp;#34;100k&amp;#34;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">max-file&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#cd5555">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">environment&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">POSTGRES_USER&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>db&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">POSTGRES_DB&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>db&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">POSTGRES_PASSWORD&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>db&lt;span style="color:#bbb">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面的 &lt;code>environment&lt;/code> 參數可以自由調整，接著透過 &lt;code>docker-compose up -d&lt;/code> 來啟動資料庫進行 App 串接。&lt;/p></description></item><item><title>[SQL] 如何從單一資料表取得每個 key 前 n 筆資料</title><link>https://demo.gh.wu-boy.com/2020/02/how-to-select-top-n-rows-from-each-key-in-sql/</link><pubDate>Sat, 01 Feb 2020 13:38:24 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2020/02/how-to-select-top-n-rows-from-each-key-in-sql/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/TPxdqjL5VJkLQ0FQASqErBaBMi8w6uyPZLGEQ-s6ZX9_6-JMF21n5uD6CZyc_kJ31ZTBlyevmKsjYrIZK0Ts61eqd93wqsmx66uvSVhGn4JKAWb6i_1_ClO_j4G8NQ-pR31QRrqtgu4=w1920-h1080" title="postgres">&lt;img src="https://lh3.googleusercontent.com/TPxdqjL5VJkLQ0FQASqErBaBMi8w6uyPZLGEQ-s6ZX9_6-JMF21n5uD6CZyc_kJ31ZTBlyevmKsjYrIZK0Ts61eqd93wqsmx66uvSVhGn4JKAWb6i_1_ClO_j4G8NQ-pR31QRrqtgu4=w1920-h1080" alt="postgres" title="postgres">&lt;/a>&lt;/p>
&lt;p>最近專案需求需要實現單筆資料的版本控制，所以會有一張表 (foo) 專門儲存 key 資料，而有另外一張表 (bar) 專門存 Data 資料，那在 bar 這張表怎麼拿到全部 key 的最新版本資料？底下先看看 schema 範例&lt;/p></description></item><item><title>在 PostgreSQL 時區轉換及計算時間</title><link>https://demo.gh.wu-boy.com/2018/09/converting-timestamp-to-timestamp-in-a-specific-time-zone-in-postgres/</link><pubDate>Sun, 02 Sep 2018 07:51:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2018/09/converting-timestamp-to-timestamp-in-a-specific-time-zone-in-postgres/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w1920-h1080" title="postgres">&lt;img src="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w400" alt="postgres" title="postgres">&lt;/a>&lt;/p>
&lt;p>通常在使用資料表時，都會在每一筆紀錄上面寫入當下時間，而這個時間會根據目前系統所在的時區而有所不同，當然我們都會使用 &lt;code>UTC+0&lt;/code> 作為標準時區，而欄位我們則會是使用 timestamp 或者是 unix time 格式，兩者最大的差異就是在前者 (timestamp) 會根據目前系統的時區來記錄，而後者 (unix time) 則是紀錄秒數差異 (Jan 01 1970) 而不會隨著系統時區改變而變化。如果是發展開源專案，則會使用後者居多，這樣不會因為使用者時區變化，而產生不同的差異，在 &lt;a href="https://gitea.io">Gitea 開源專案&lt;/a>保留了兩者，但是只要計算時間則是用 (unix time) 作轉換。&lt;/p></description></item><item><title>增加 phpMyAdmin 登入時間</title><link>https://demo.gh.wu-boy.com/2013/12/increase-phpmyadmin-login-time/</link><pubDate>Tue, 31 Dec 2013 07:19:47 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2013/12/increase-phpmyadmin-login-time/</guid><description>phpMyAdmin 是一套管理 MySQL 資料庫的 UI 介面工具，預設登入時間為 1440 秒，這時間是定義在 libraries/config.default.php 內，phpMyAdmin 也是透過 gc-maxlifetime 來決定 Session 存在與否，所以如果要增加登入時間，比如說設定一年 (3600 * 24 * 365) 好了，請按照底下設定
PHP 設定檔 如果是裝 php-fpm 請修改 /etc/php5/fpm/php.ini 路徑
1 2 3 ;After this number of seconds, stored data will be seen as \&amp;#39;garbage\&amp;#39; and ; cleaned up by the garbage collection process. ; http://php.net/session.gc-maxlifetime session.gc_maxlifetime = 315360000 重新啟動 php-fpm
1 $ /etc/init.d/php5-fpm restart phpMyAdmin 設定檔 修改 config.</description></item><item><title>[資料庫] 如何轉換 Mysql varchar type 到 int type</title><link>https://demo.gh.wu-boy.com/2010/12/%E8%B3%87%E6%96%99%E5%BA%AB-%E5%A6%82%E4%BD%95%E8%BD%89%E6%8F%9B-mysql-varchar-type-%E5%88%B0-int-type/</link><pubDate>Fri, 17 Dec 2010 06:14:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2010/12/%E8%B3%87%E6%96%99%E5%BA%AB-%E5%A6%82%E4%BD%95%E8%BD%89%E6%8F%9B-mysql-varchar-type-%E5%88%B0-int-type/</guid><description>&lt;p>先來說明為什麼有時候需要用到轉換 varchar 到 int 型態，就是因為 order by 的問題，幫學校修改 Mysql 錯誤排序，前人設計全部都用 varchar 型態去存資料，當然包含了學生入學年度，以前不會遇到這問題，但是到了民國100年，就會發生排序錯誤，底下來講個例子，這樣大家就可以瞭解了。 建立 test 資料表，並且先增兩個欄位分別是 a(&lt;span style="color:red">&lt;strong>varchar&lt;/strong>&lt;/span>) 跟 b(&lt;span style="color:green">&lt;strong>int&lt;/strong>&lt;/span>)，個別輸入 100, 90 兩列資料&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">mysql> select * from test;
+------+------+
| a | b |
+------+------+
| 100 | 100 |
| 90 | 90 |
+------+------+
&lt;/pre> 先針對 varchar 排序 order by a DESC
&lt;pre class="brush: bash; title: ; notranslate" title="">mysql> select * from test order by a desc;
+------+------+
| a | b |
+------+------+
| 90 | 90 |
| 100 | 100 |
+------+------+&lt;/pre> 再來針對 int 排序 order by b DESC
&lt;pre class="brush: bash; title: ; notranslate" title="">mysql> select * from test order by b desc;
+------+------+
| a | b |
+------+------+
| 100 | 100 |
| 90 | 90 |
+------+------+&lt;/pre></description></item><item><title>[網站] 好站連結 (七) Android, javascript, Css, PHP, Perl, FreeBSD, Linux</title><link>https://demo.gh.wu-boy.com/2010/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%83-android-javascript-css-php-perl-freebsd-linux/</link><pubDate>Fri, 30 Jul 2010 14:53:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2010/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%83-android-javascript-css-php-perl-freebsd-linux/</guid><description>Windows C#
C# 比較字串 MSDN 比較字串 Request.Form Collection Request Query String / Form Parametrs ASP.NET QueryString Usage Using include files with ASP.NET html
[將所有 的內容包到一個
中][7] apache
Fixing mod_rewrite and .htaccess on GoDaddy Hosting javascript
jQuery Week Calendar Javascript: reference the parent window from a popup How to get and set form element values with jQuery How to check and uncheck a checkbox with jQuery Loop through parameters passed to a Javascript function perl-completion.</description></item><item><title>PHP+MySQL 環境下 SQL Injection 攻防戰</title><link>https://demo.gh.wu-boy.com/2009/12/phpmysql-%E7%92%B0%E5%A2%83%E4%B8%8B-sql-injection-%E6%94%BB%E9%98%B2%E6%88%B0/</link><pubDate>Sun, 06 Dec 2009 05:11:25 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2009/12/phpmysql-%E7%92%B0%E5%A2%83%E4%B8%8B-sql-injection-%E6%94%BB%E9%98%B2%E6%88%B0/</guid><description>&lt;p>在 &lt;a href="http://www.ourmysql.com/">OurMySQL Blog&lt;/a> 看到這篇：『&lt;a href="http://www.ourmysql.com/archives/791">PHP+MySQL环境下SQL Injection攻防总结&lt;/a>』寫的相當不錯，裡面有一些觀念，可以讓初學 PHP &amp;amp; MySQL 的使用者知道如何防護 &lt;a href="http://en.wikipedia.org/wiki/SQL_injection">SQL Injection (資料隱碼)&lt;/a>，內容提到 &lt;a href="http://tw2.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc&lt;/a> 在 on 跟 off 的狀況如何防護，但是可以清楚看到 &lt;a href="http://tw2.php.net/">PHP&lt;/a> 官方文件提到在 PHP 5.3.0 magic_quotes_gpc 預設已經是關閉，在 PHP 6.0 之後正式移除，所以內容寫的 magic_quotes_gpc 狀況，可以大致上瞭解就好，真正防護 SQL Injection 是需要寫程式或者是考慮很多方式去防護。 一般在做文章查詢，都會使用 &lt;span style="color: #008000;">/articles.php?id=123&lt;/span> 網址傳送方式，以 $_GET[&amp;lsquo;id&amp;rsquo;] 送到 PHP 頁面去做處理，如果駭客想要測試是否可以利用 SQL Injection 做攻擊，可以在網址列加上 &lt;span style="color: #008000;">/articles.php?id=123&lt;/span>&lt;span style="color: #ff0000;">'&lt;/span>，請注意網址後面多出 &lt;span style="font-size:11pt;color: #ff0000;">'&lt;/span>，如果沒有把 $_GET[&amp;lsquo;id&amp;rsquo;] 做處理的話，就會出現底下錯誤訊息：&lt;/p>
&lt;blockquote>
&lt;p>&lt;span style="color: #ff0000;">supplied argument is not a valid MySQL result resource in&lt;/span> 這是因為平常在寫 SQL 語法，會是底下這種寫法：&lt;/p>
&lt;/blockquote>
&lt;pre class="brush: php; title: ; notranslate" title="">$sql = "SELECT id, title, content FROM articles WHERE id = '".$_GET['id']."'";
$result = mysq_query($sql);&lt;/pre> 因為沒有處理跳脫字元 '，所以造成 SQL 語法錯誤，才會出現該錯誤訊息，但是如果又針對跳脫字元做防護得時候，還有另一種攻擊方式：
&lt;blockquote>
&lt;p>&lt;span style="color: #008000;">/articles.php?id=0 union select 1,2,load_file(char(47,101,116,99,47,112,97,115,115,119,100))&lt;/span> 其中的數字就是/etc/passwd 字符串的ASCII，除此之外，還可以使用字串 16 進位方式：&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;span style="color: #008000;">/articles.php?id=0 union select 1,2,load_file(0×2f6574632f706173737764)&lt;/span> 可以參考一下 &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/string-functions.html#function_load-file">MySQL LOAD_FILE(file_name)&lt;/a>，底下文章提到了很多方式解決。&lt;/p>
&lt;/blockquote></description></item><item><title>[SQL] Microsoft SQL Server 2008 Management Studio 防止儲存需要資料表重建的變更</title><link>https://demo.gh.wu-boy.com/2009/11/sql-microsoft-sql-server-2008-management-studio-%E9%98%B2%E6%AD%A2%E5%84%B2%E5%AD%98%E9%9C%80%E8%A6%81%E8%B3%87%E6%96%99%E8%A1%A8%E9%87%8D%E5%BB%BA%E7%9A%84%E8%AE%8A%E6%9B%B4/</link><pubDate>Wed, 11 Nov 2009 15:45:31 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2009/11/sql-microsoft-sql-server-2008-management-studio-%E9%98%B2%E6%AD%A2%E5%84%B2%E5%AD%98%E9%9C%80%E8%A6%81%E8%B3%87%E6%96%99%E8%A1%A8%E9%87%8D%E5%BB%BA%E7%9A%84%E8%AE%8A%E6%9B%B4/</guid><description>最近要寫 ASP.Net 專案，弄 MSSQL Server 2008 當作 Database，利用 SQL 2008 SQL Server Management Studio 管理資料庫，有點類似 MySQL Navicat Lite 軟體，或者是 Web 介面的 phpMyAdmin，在資料表填入欄位新增第一次之後，接下來要去修改資料表，發現會出現錯誤訊息：『防止儲存需要資料表重建的變更』 解決方法其實很簡單：工具-&amp;gt;選項-&amp;gt;左邊選單 Designers，裡面把**防止儲存需要資料表重建的變更**，取消掉，就可以了 參考資料：[SQL]使用SQL 2008 SQL Server Management Studio 更改資料表結構 出現錯誤訊息不允許儲存變更</description></item><item><title>[SQL] MySQL ROW_NUMBER Simulation</title><link>https://demo.gh.wu-boy.com/2009/07/sql-mysql-row_number-simulation/</link><pubDate>Wed, 15 Jul 2009 02:48:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2009/07/sql-mysql-row_number-simulation/</guid><description>&lt;p>在台大 &lt;a href="http://www.ptt.cc/bbs/Database/index.html">PTT Database&lt;/a> 版看到有人問一個問題，我覺得還不錯，問題如下：&lt;a href="http://www.ptt.cc/bbs/Database/M.1247394036.A.A50.html">網頁版&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>小弟在練習做一個系統遇到以下問題 志願 | 系所 | 功能 1 | a | 退選 2 | b | 退選 3 | c | 退選 4 | d | 退選 5 | e | 退選 網頁介面如上(用for迴圈+mysql_fetch_object抓出資料) 報名序號 | 姓名 | 志願1 | 志願2 | 志願3 | 志願4 | 志願5 1001 小王 a b c d e 資料庫欄位內容如上 想請問~若使用者想退選志願3~~照理說用update把志願3欄位清掉 網頁再一次抓資料會變成志願3的系所變空的~(如下表) 志願 | 系所 | 功能 1 | a | 退選 2 | b | 退選 3 | | 退選 4 | d | 退選 5 | e | 退選 有沒有辦法在select的時候排除空的那欄 也就是說抓資料的時候，以上述為例，只抓出4筆，變成下表 志願 | 系所 | 功能 1 | a | 退選 2 | b | 退選 3 | d | 退選 4 | e | 退選&lt;/p>
&lt;/blockquote></description></item><item><title>[網站] 好站連結 (二)</title><link>https://demo.gh.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%BA%8C/</link><pubDate>Thu, 28 May 2009 05:29:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%BA%8C/</guid><description/></item><item><title>mydumper 取代 mysqldump 效能</title><link>https://demo.gh.wu-boy.com/2009/03/mydumper-%E5%8F%96%E4%BB%A3-mysqldump-%E6%95%88%E8%83%BD/</link><pubDate>Mon, 09 Mar 2009 02:36:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2009/03/mydumper-%E5%8F%96%E4%BB%A3-mysqldump-%E6%95%88%E8%83%BD/</guid><description>&lt;p>這是我在 &lt;a href="http://blog.gslin.org">gslin 大神&lt;/a> 那邊看到的一篇文章：&lt;a href="http://blog.gslin.org/archives/2009/03/04/1956/">mydumper (取代 mysqldump 的工具)&lt;/a>，&lt;a href="http://dammit.lt/2009/02/03/mydumper/">mysqldumper&lt;/a> 有平行跟效能方面壓力測試，效果跟時間都壓縮的比 &lt;a href="http://dev.mysql.com/doc/refman/5.1/en/mysqldump.html">mysqldump&lt;/a> 還要快，簡單管理 output 資料，它把 database 每個資料表分別 dump 資料出來寫到檔案，方便觀看檔案資料，不過沒有支援 dump table 的 definitions，所以加速提取 data 寫入到檔案，gslin 大神也把它包進 &lt;a href="http://www.freebsd.org">FreeBSD&lt;/a> &lt;a href="http://www.freebsd.org/ports/">ports&lt;/a> 裡面，在 &lt;a href="http://www.freshports.org/databases/mydumper/">database/mydumper&lt;/a> 這裡。 我想會把這個機制套用到我之前寫的 shell script 裡面：&lt;a href="http://blog.wu-boy.com/2008/05/23/268/">[Linux&amp;amp;FreeBSD] 備份系統資料，MySQL 資料庫，PgSQL 資料庫的自動化 bash shell script 程式&lt;/a>，那 mydumper 用法也相當簡單，mydumper &amp;ndash;help 就寫的很清楚了，跟 mysqldump 用法差沒多少：&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">-h, --host 連接到 hostname 伺服器
-u, --user 使用者名稱
-p, --password 使用者密碼
-P, --port MySQL TCP/IP port
-B, --database Database 名稱
-t, --threads Number of parallel threads
-o, --outputdir 輸出的檔案要存放在哪, 預設 ./export-*/
-c, --compress gzip 壓縮每個檔案，多花一點時間
-x, --regex Regular expression for 'db.table' matching&lt;/pre></description></item><item><title>[MySQL]left, right, inner, outer join 使用方法</title><link>https://demo.gh.wu-boy.com/2009/01/mysqlleft-right-inner-outer-join-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 24 Jan 2009 12:09:39 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2009/01/mysqlleft-right-inner-outer-join-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid><description>&lt;p>最近在高雄面試的時候，被問到的資料庫問題，什麼是 left join，out join，inner join，其實這些都是寫基本 SQL 語法需要知道的，當然我比較少用到 out join，不過還是要知道一下比較好喔，底下來說明一下這些，整理一些心得&lt;/p>
&lt;h2 id="表格-test1-資料表">表格 test1 資料表&lt;/h2>
&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/3222461660/" title="2 (by appleboy46)">&lt;img src="https://i2.wp.com/farm4.static.flickr.com/3327/3222461660_4203972953_o.jpg?resize=171%2C92&amp;#038;ssl=1" title="2 (by appleboy46)" alt="2 (by appleboy46)" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;h2 id="表格-test2-資料表">表格 test2 資料表&lt;/h2>
&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/3222461636/" title="1 (by appleboy46)">&lt;img src="https://i1.wp.com/farm4.static.flickr.com/3328/3222461636_c25a9bf9e5_o.jpg?resize=126%2C121&amp;#038;ssl=1" title="1 (by appleboy46)" alt="1 (by appleboy46)" data-recalc-dims="1" />&lt;/a>&lt;/p></description></item><item><title>[MySQL] 實做 MySQL Master-Master Replication 同步</title><link>https://demo.gh.wu-boy.com/2008/12/mysql-%E5%AF%A6%E5%81%9A-mysql-master-master-replication-%E5%90%8C%E6%AD%A5/</link><pubDate>Tue, 30 Dec 2008 14:10:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/12/mysql-%E5%AF%A6%E5%81%9A-mysql-master-master-replication-%E5%90%8C%E6%AD%A5/</guid><description>&lt;p>今天無聊實做了 &lt;a href="http://www.mysql.com/">MySQL&lt;/a> 資料庫同步化，那可以先看看 &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/replication.html">MySQL Master Slave Replication&lt;/a>，中文網站可以上 google 查詢或者是看看這一篇：&lt;a href="http://plog.longwin.com.tw/my_note-app-setting/2008/03/11/mysql_replication_master_slave_set_2008">MySQL 設定 Replication (Master – Slave)&lt;/a>，基本上設定還蠻容易的，如果會 Master 同步到 Slave 的話，那 MySQL Master-Master 只是在用相同的方法在做一遍，如果不懂 MMM 的可以先參考這一篇：&lt;a href="http://plog.longwin.com.tw/news-technology/2008/10/21/mysql-master-replication-manager-mmm-intro-2008">MySQL Master-Master Replication Manager(1) – 簡介&lt;/a>，這篇寫的很清楚，今天看了文章，我實做起來，遇到一些問題，其實還蠻奇怪的，所以底下就來紀錄一下步驟，順便也說明一下。 實做兩台 Ubuntu 機器： db1：192.168.1.1 db2：192.168.1.2 先設定 db1： 目前我都是在 Ubuntu 7.10 底下實做的，那基本上只要有支援 MySQL 的 Linux 或者 FreeBSD 機器都可以實做這個方法： &lt;strong>&lt;span style="color: #ff0000;">步驟一：先修改 my.cnf 這個檔案：&lt;/span>&lt;/strong> FreeBSD 的話在：/var/db/mysql/my.cnf Ubuntu：/etc/mysql/my.cnf 有的版本是在 /etc/my.cnf 所以不太一定，請依照自己的作業系統 修改：&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">#
# bind-address 請 mark 起來，因為我們必須讓 MySQL Listen 各個不同的 IP Address
#bind-address = 127.0.0.1
#
# server id 請記得每台機器都設定不同喔
#
server-id = 1
log_bin = /var/log/mysql/mysql-bin.log&lt;/pre></description></item><item><title>[心得]2008八月份 SA@Tainan PHP 程式設計 – 初階資訊安全(8/30)</title><link>https://demo.gh.wu-boy.com/2008/08/%E5%BF%83%E5%BE%972008%E5%85%AB%E6%9C%88%E4%BB%BD-satainan-php-%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88-%E5%88%9D%E9%9A%8E%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8830/</link><pubDate>Sat, 30 Aug 2008 16:07:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/08/%E5%BF%83%E5%BE%972008%E5%85%AB%E6%9C%88%E4%BB%BD-satainan-php-%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88-%E5%88%9D%E9%9A%8E%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8830/</guid><description>&lt;p>今天從嘉義跑到台南聽 &lt;a href="http://phorum.study-area.org">酷！學園&lt;/a> 舉辦的 &lt;a href="http://phorum.study-area.org/index.php/topic,53191.0.html">2008八月份 SA@Tainan PHP 程式設計 – 初階資訊安全(8/30)&lt;/a> ，今天一大早就起床了，差點沒趕上火車，到了台南地點在社區大學，其實蠻近的，大概騎車5分鐘就到了喔，其實不會很趕，到了現場，第一次看到梁楓大大阿，感覺很有威勢，我看現場年齡層分佈好像很廣，有很多都是長輩了，不過大部分還是學生為主，然後我想大概有很多是工作人員，其實我都不太認識，我大概只知道梁楓大大，因為在酷！學園也一段時間了，哈哈，今天講的主題，我非常的有興趣，我看投影片還蠻多的，可是都是跳著講，然後一些實做的部份，然後最後一小時是在解如何拿到 Linux 的主機 /etc/passwd 的資訊。&lt;/p></description></item><item><title>[轉載]MySQL 的 “SET NAMES xxx” 字元編碼問題分析</title><link>https://demo.gh.wu-boy.com/2008/08/%E8%BD%89%E8%BC%89mysql-%E7%9A%84-set-names-xxx-%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC%E5%95%8F%E9%A1%8C%E5%88%86%E6%9E%90/</link><pubDate>Mon, 25 Aug 2008 10:02:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/08/%E8%BD%89%E8%BC%89mysql-%E7%9A%84-set-names-xxx-%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC%E5%95%8F%E9%A1%8C%E5%88%86%E6%9E%90/</guid><description>&lt;p>轉載自: &lt;a href="http://www.phpchina.com/bbs/viewthread.php?tid=13861">PHPChina&lt;/a> 近來接受 BBT 的培訓，做一個投票系統。系統程式碼倒不是很難，但是我的時間主要花費在了研究字符集和編碼上面。MySQL 和 Apache 兩個系統的編碼（字符集）問題讓我費勁腦筋，吃盡苦頭。網上對這些問題的解決比較零散，比較片面，大部分是提供解決方法，卻不說為什麼。於是我將這幾天收穫總結一下，避免後來者再走彎路。這篇文章對 PHP 編寫有一點幫助（看完你就知道，怎樣讓你的 PHP 程式在大部分空間提供商的伺服器裡顯示正常），但是更多幫助在於網路伺服器的架設和設置。 先說 MySQL 的字符集問題。Windows 下可透過修改 my.ini 內的&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title=""># CLIENT SECTION
[mysql]
default-character-set=utf8
# SERVER SECTION
[mysqld]
default-character-set=utf8&lt;/pre></description></item><item><title>[PHP]解決網站被 SQL injection 攻擊</title><link>https://demo.gh.wu-boy.com/2008/06/php%E8%A7%A3%E6%B1%BA%E7%B6%B2%E7%AB%99%E8%A2%AB-sql-injection-%E6%94%BB%E6%93%8A/</link><pubDate>Thu, 26 Jun 2008 08:26:51 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/06/php%E8%A7%A3%E6%B1%BA%E7%B6%B2%E7%AB%99%E8%A2%AB-sql-injection-%E6%94%BB%E6%93%8A/</guid><description>&lt;p>其實這個安全性的問題，在目前台灣網站都存在這樣的問題，大家平常用 $_POST，$_GET 用得很順利，但是沒有想過帳號密碼被 SQL injection 破解，當網站被破解了，基本上你損失就是相當嚴重，網路上也有很多攻擊方式，不過這方法是最常被拿出來講的，我自己有一套解決方式，除了比較重要的地方，就是輸入帳號密碼的地方要加強防護之外，加上數字驗證碼，還要 check 帳號的特性，我底下是我驗證帳號密碼機制&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">if($user_name == '' || $user_passwd == ''){
ErrMsg("帳號或密碼不得空白");
}
if (!preg_match('/^\w+$/', $user_name)){
ErrMsg("請勿攻擊本站台");
}&lt;/pre></description></item><item><title>[DataBase] 備份 MySQL 3.23.49 轉到 MySQL 5 utf8 轉換到 utf8</title><link>https://demo.gh.wu-boy.com/2008/05/database-%E5%82%99%E4%BB%BD-mysql-32349-%E8%BD%89%E5%88%B0-mysql-5-utf8-%E8%BD%89%E6%8F%9B%E5%88%B0-utf8/</link><pubDate>Fri, 09 May 2008 01:00:53 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/05/database-%E5%82%99%E4%BB%BD-mysql-32349-%E8%BD%89%E5%88%B0-mysql-5-utf8-%E8%BD%89%E6%8F%9B%E5%88%B0-utf8/</guid><description>&lt;p>最近在幫友人處理他們web跟資料庫的轉移，然後發現他們的資料庫是很古早的資料庫 MySQL 3.23.49 版本，相當古老吧，因為那個時候我才正值大二時代，剛開始接觸電腦的時候而已，連最基本的資料庫都不知道是什麼，哈哈經過這麼久終於發展到 MySQL 5版本了，不過從 MySQL 4.x 開始支援的 Unicode 系統，所以當時也有很多人遇到轉換問題，我今天也遇到相同問題，不過是在轉換到 Linux Centos 5.1 版本底下，原本機器使用 Red Hat Linux 7.3，真是一個很舊的版本，因為 Red Hat Linux 已經到 9.0 版本了，而且目前不維護了。 之前版本轉換都沒有什麼問題，就是 4.x 轉到 5.x 版本，參可我之前寫的這篇 &lt;a href="http://blog.wu-boy.com/2007/04/08/92/">[Mysql] 資料庫備份[big5]utf8轉換成utf-8&lt;/a>，如果這篇文章解決不了的話，那就可能用我底下的方法了，不過過上面那個方法不適合用在 3.23 轉到 5.x 版，因為還是會發生亂碼現象，可是這只會發生在 Linux 底下，因為我用 FreeBSD 7.0 R 版，在這環境底下是沒有問題的，所以今天很囧，都在處理 Linux 的部份，哈哈，所以大家還是去用 FreeBSD 吧&lt;/p></description></item><item><title>[MySQL] outer join 使用</title><link>https://demo.gh.wu-boy.com/2008/01/mysql-outer-join-%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 27 Jan 2008 06:56:17 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/01/mysql-outer-join-%E4%BD%BF%E7%94%A8/</guid><description>之前我遇到問題，有兩個表格 a 跟 b，分別利用 id 當作連接，當你使用 where a.id = b.id 的時候，當 b 資料表沒有對應到的時候，撈出來的資料就會少一筆，問題如下
: 想請教各位大大， : 如果我現在有兩個table t1,t2 : Table t1: : uid INT : name NCHAR(10) : Table t2: : uid INT : t1_id INT 參考到t1.uid : 我下一個SQL query: : SELECT t1.name, COUNT(t2.uid) : FROM t1,t2 : WHERE t2.t1_id=t1.uid : GROUP BY t1.name : 這樣會計算出每個t1.name項目在t2中所出現的次數。 : 但是如果次數為零時就不會顯示出來。 : 想請教大家，怎樣修改可以讓次數為零的t1.name也顯示出來呢? 解決方法：就是利用 outer join
$sql = "SELECT t1.t_name, count(t2.uid) as aa FROM "</description></item><item><title>[MySQL] 內建函式 MySQL Replace 功能</title><link>https://demo.gh.wu-boy.com/2008/01/mysql-%E5%85%A7%E5%BB%BA%E5%87%BD%E5%BC%8F-mysql-replace-%E5%8A%9F%E8%83%BD/</link><pubDate>Sun, 27 Jan 2008 05:16:51 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/01/mysql-%E5%85%A7%E5%BB%BA%E5%87%BD%E5%BC%8F-mysql-replace-%E5%8A%9F%E8%83%BD/</guid><description>今天老師寄信給我，說我轉移的 journal.CN 的文章，出現以前的文章，不能看到圖片，我去查了一下，發現 AMS 文章系統的編輯軟體，相當爛，它的插入圖片，竟然是用絕對網址，然後他會先讀取 mainfile.php 裡面的
define('XOOPS_URL', 'http://journal.cn.ee.ccu.edu.tw');
然後把圖片的網址寫死，而不是動態的，就是利用相對路徑，所以我利用了 replace 的功能來解決全部文章圖片的問題，語法如下 update `xoops_ams_text` set `hometext` = replace(`hometext`,'140.123.107.38/~cnews','journal.cn.ee.ccu.edu.tw');
上面是說，取代 hometext 這個欄位的，找到 140.123.107.38/~cnews 取代成 journal.cn.ee.ccu.edu.tw 這語法相當好用，大家可以嘗試看看，畢竟如果用 php 的 replace 語法，還要利用陣列方式，比較麻煩</description></item><item><title>[BCB] 如何利用連結 MySQL 5以上跟 MSSQL Server</title><link>https://demo.gh.wu-boy.com/2008/01/bcb-%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E9%80%A3%E7%B5%90-mysql-5%E4%BB%A5%E4%B8%8A%E8%B7%9F-mssql-server/</link><pubDate>Fri, 18 Jan 2008 14:33:36 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/01/bcb-%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E9%80%A3%E7%B5%90-mysql-5%E4%BB%A5%E4%B8%8A%E8%B7%9F-mssql-server/</guid><description>這兩天開始玩 BCB 的這東西，其實我原本就有打算要學一套視窗軟體，畢竟好像還不錯，可以寫寫軟體，所以就拿了 BCB 來學習。 剛開始想說寫個要跟 MSSQL 資料庫的統計圖，發現 BCB 並不支援 MSSQL，解決方式，當然就是拿 Delphi 的元件 利用 Delphi 7 的 MSSQL Driver Update 內的「dbexpmss.dll」 Copy 到「 $(BCB)\BIN 」 然後在設定 dbxconnections.ini
[MSSQL] GetDriverFunc=getSQLDriverMSSQL LibraryName=dbexpmss.dll VendorLib=oledb HostName=ServerName DataBase=Database Name User_Name=user Password=password BlobSize=-1 ErrorResourceFile= LocaleCode=0000 MSSQL TransIsolation=ReadCommited OS Authentication=False 然後再來是 MySQL5，原本的 BCB 並不支援 MSQL5 所以自己另外找了文章 http://www.justsoftwaresolutions.co.uk/delphi/dbexpress_and_mysql_5.html</description></item><item><title>[MySQL] 取代部份字串問題</title><link>https://demo.gh.wu-boy.com/2008/01/mysql-%E5%8F%96%E4%BB%A3%E9%83%A8%E4%BB%BD%E5%AD%97%E4%B8%B2%E5%95%8F%E9%A1%8C/</link><pubDate>Thu, 17 Jan 2008 06:44:01 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2008/01/mysql-%E5%8F%96%E4%BB%A3%E9%83%A8%E4%BB%BD%E5%AD%97%E4%B8%B2%E5%95%8F%E9%A1%8C/</guid><description>剛剛在 ptt 遇到之前當兵的工作同事，話說他要去中華電信工作了，還真是不錯，他在 database 版問一個取代的問題，然後我幫他找一下答案，解決了，這可以用 sql 語法解決，或者是用程式都可以 問題：
在MySQL 我有大約50000筆資料 有個欄位像這樣 0040000001~0040050000 現在因故要把 004改成005 變成像這樣 0050000001~0050050000 我的解法：
UPDATE `test` SET `test` = CONCAT( '005', SUBSTRING( `test` , 4 ) ) WHERE
SUBSTRING( `test` , 1, 3 ) = '004'
有更快解法嗎？ REPLACE 好像不行，因為後面數字也會被改到，不過還是主要用 SUBSTRINGG</description></item><item><title>[MYSQL] 忘記 root 密碼，登不進去 phpMyAdmin 教學</title><link>https://demo.gh.wu-boy.com/2007/12/mysql-%E5%BF%98%E8%A8%98-root-%E5%AF%86%E7%A2%BC%EF%BC%8C%E7%99%BB%E4%B8%8D%E9%80%B2%E5%8E%BB-phpmyadmin-%E6%95%99%E5%AD%B8/</link><pubDate>Mon, 31 Dec 2007 15:53:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2007/12/mysql-%E5%BF%98%E8%A8%98-root-%E5%AF%86%E7%A2%BC%EF%BC%8C%E7%99%BB%E4%B8%8D%E9%80%B2%E5%8E%BB-phpmyadmin-%E6%95%99%E5%AD%B8/</guid><description>2011.06.24 Update: 修改語法 剛剛在處理老闆的機器移機問題，雖然有給我 root 權限，可是 MySQL 密碼沒有給我 root 的，然後我去看程式，都沒有用到 root ，都是用普通使用者，所以就上網找一下忘記密碼怎麼處理，其實找到的方法就是利用 command line 的方法，相當方便，最終解決方法還是文字介面，作法如下 首先先 Kill 掉所有 MySQL 的連線
# on Linux
/etc/init.d/mysqld stop
# on FreeBSD
/usr/local/etc/rc.d/mysql-server stop
killall -9 mysqld
然後進入 MySQL 安全模式 mysqld_safe -u root --skip-grant-tables &amp;#038;
然後利用文字介面修改 MySQL root 密碼 $ mysql -u root -p
use mysql;
UPDATE user SET password=password('這裡輸入你的密碼') where user='root';
FLUSH PRIVILEGES;
exit;
dump database $ mysqladmin -uroot -p flush-logs
$ mysqldump -B -uroot -p --opt phpbb2 phpbb2_20020601.</description></item><item><title>[SQL] 隨機選取資料 (MSSQL,ACCESS,MYSQL)</title><link>https://demo.gh.wu-boy.com/2007/08/sql-%E9%9A%A8%E6%A9%9F%E9%81%B8%E5%8F%96%E8%B3%87%E6%96%99-mssqlaccessmysql/</link><pubDate>Thu, 16 Aug 2007 03:15:31 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2007/08/sql-%E9%9A%A8%E6%A9%9F%E9%81%B8%E5%8F%96%E8%B3%87%E6%96%99-mssqlaccessmysql/</guid><description>這個功能還蠻需要的，底下就是三個例子 以下方法，可以幫助隨機取得廣告資料、最新消息等，隨機產生資料。 使用 SQL 語法的 TOP n 來指定取得筆數，再用 ORDER BY 的方式，來亂數取得資料，並排序。
MS SQL：SELECT TOP 1 * FROM Table WHERE 條件 ORDER BY NEWID()
ACCESS：SELECT TOP 1 * FROM Table WHERE 條件 ORDER BY RND(數字欄位名稱)
MYSQL：SELECT * FROM Table ORDER BY RAND() LIMIT 1
http://blog.xuite.net/jameschih/java/8308864</description></item><item><title>[Mysql] 資料庫備份[big5]utf8轉換成utf-8</title><link>https://demo.gh.wu-boy.com/2007/04/mysql-%E8%B3%87%E6%96%99%E5%BA%AB%E5%82%99%E4%BB%BDbig5utf8%E8%BD%89%E6%8F%9B%E6%88%90utf-8/</link><pubDate>Sun, 08 Apr 2007 13:14:29 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2007/04/mysql-%E8%B3%87%E6%96%99%E5%BA%AB%E5%82%99%E4%BB%BDbig5utf8%E8%BD%89%E6%8F%9B%E6%88%90utf-8/</guid><description>&lt;p>其實在很多opensource底下的套裝軟體，資料庫預設都是用 utf8，我想這會造成在 phpMyAdmin 底下看到亂碼，然後自己之前也有遇到問題，然後又在網路上看到這篇 &lt;a title="Permanent Link: 搶救 xdite.net 所用的奇技淫巧" rel="bookmark" href="http://blog.xdite.net/?p=307">搶救 xdite.net 所用的奇技淫巧&lt;/a> 裡面所寫的備份方式跟我在轉換 phpBB2 跟自己的 wordpress 一樣 大同小異，我還在想說有更好的解法說，看來是沒有，在 wordpress 底下，只能利用後台的資料庫備份，不然用phpMyAdmin的話，我想你備份出來也是沒用。&lt;/p></description></item></channel></rss>