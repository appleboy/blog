<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>System Design on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/categories/system-design/</link><description>Recent content in System Design on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Fri, 23 Dec 2022 08:32:31 +0800</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/system-design/feed.xml" rel="self" type="application/rss+xml"/><item><title>系統設計: 如何取消正在執行的工作任務</title><link>https://blog.wu-boy.com/2022/12/system-design-how-to-cancel-a-running-task-in-golang/</link><pubDate>Fri, 23 Dec 2022 08:32:31 +0800</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2022/12/system-design-how-to-cancel-a-running-task-in-golang/</guid><description>&lt;p>&lt;img src="https://i.imgur.com/VZyfv0M.png" alt="cancel a task">&lt;/p>
&lt;p>本篇來聊聊『如何取消正在執行的工作任務』，當系統內有需要處理比較久或較多資源的任務，肯定會將這些任務丟到其他機器再執行，執行過程如果需要取消，會經過如上圖幾個步驟。先假設中間的過程不透過 Message Queue 機制，而是兩個服務進行溝通透過 &lt;a href="https://aws.amazon.com/tw/what-is/restful-api/">RESTful&lt;/a> 或 &lt;a href="https://grpc.io/">gRPC&lt;/a> 方式。&lt;/p></description></item><item><title>系統設計: 處理服務讀取多個任務遇到的問題 (Go 語言)</title><link>https://blog.wu-boy.com/2022/11/simple-scheduler-with-multiple-worker-using-golang/</link><pubDate>Sun, 13 Nov 2022 08:23:09 +0800</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2022/11/simple-scheduler-with-multiple-worker-using-golang/</guid><description>&lt;p>&lt;img src="https://i.imgur.com/lbY6KzL.png" alt="system design 02">&lt;/p>
&lt;p>不同的服務都會有需要處理比較久的任務，這些任務是不能即時執行完成，才回應給前端，這樣使用者體驗會非常的差。將類型的任務存在資料庫或放在&lt;a href="https://zh.m.wikipedia.org/zh-hant/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">消息對列&lt;/a>就是一種處理方式，接著啟動另一個服務來消化非即時性的任務，而常見的處理方式就是在服務內啟動多個 Worker Node 來平行消化任務 (如上圖)。&lt;/p></description></item></channel></rss>