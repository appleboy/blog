<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Laravel on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</title><link>https://blog.wu-boy.com/categories/laravel/</link><description>Recent content in Laravel on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Mon, 03 Jul 2017 01:43:57 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/laravel/index.xml" rel="self" type="application/rss+xml"/><item><title>台灣第一屆 Laravel 研討會</title><link>https://blog.wu-boy.com/2017/07/laravel-conf-in-taipei/</link><pubDate>Mon, 03 Jul 2017 01:43:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2017/07/laravel-conf-in-taipei/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/35625404626/in/dateposted-public/" title="laravelconftw_o">&lt;img src="https://i2.wp.com/farm5.staticflickr.com/4237/35625404626_71f7a8a492_z.jpg?w=840&amp;#038;ssl=1" alt="laravelconftw_o" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>這次很高興擔任第一屆 &lt;a href="https://laravelconf.tw">Laravel 台灣研討會&lt;/a>講者，會議當天中午才到現場，我是兩點分享的議程，在整天聽下來及最後的案例討論，聽到最多的都是原本從 &lt;a href="https://codeigniter.org.tw/">CodeIgniter&lt;/a> 架構換到 &lt;a href="https://laravel.com/">Laravel&lt;/a> 上面，身為 CodeIgniter 的維護人員的我，聽到是蠻開心的，在 Laravel 還沒出來前，大家都是選用這輕量級的 CodeIgniter。&lt;/p></description></item><item><title>用 Docker 取代 Laravel Homestead 開發環境</title><link>https://blog.wu-boy.com/2016/03/replace-laravel-homestead-with-docker/</link><pubDate>Thu, 10 Mar 2016 06:37:40 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/03/replace-laravel-homestead-with-docker/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/25660808075/in/dateposted-public/" title="docker">&lt;img src="https://i2.wp.com/farm2.staticflickr.com/1600/25660808075_c8190290f7_z.jpg?resize=640%2C217&amp;#038;ssl=1" alt="docker" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>新手第一次接觸 &lt;a href="http://laravel.com/">Laravel&lt;/a>，我都會推薦使用 &lt;a href="https://laravel.com/docs/5.2/homestead">Homestead&lt;/a> 來解決開發環境的困擾，但是我發現 Homestead 對於第一次接觸 &lt;a href="https://www.virtualbox.org/">Virtualbox&lt;/a> 及指令的初學者，設定還是比較複雜，造成很多新手光是在這邊就卡關了，有沒有什麼辦法可以解決這煩人又複雜的 Homestead 設定，剛好今天在 &lt;a href="https://github.com/">Github&lt;/a> 上看到 &lt;a href="https://github.com/laraedit/laraedit-docker">laraedit-docker&lt;/a> 專案，此專案是把 Homestead 轉換成用 &lt;a href="https://www.docker.com/">Docker&lt;/a> 來跑，這樣只要您的環境有支援 Docker，就可以快速設定好環境含 MySQL, Redis &amp;hellip;等&lt;/p></description></item><item><title>為什麼我選擇使用 Laravel Framework?</title><link>https://blog.wu-boy.com/2016/03/why-i-choose-laravel-framework/</link><pubDate>Wed, 09 Mar 2016 06:45:31 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/03/why-i-choose-laravel-framework/</guid><description>&lt;p>&lt;a href="https://i1.wp.com/farm2.staticflickr.com/1655/23493872563_4f01a9c336_o.png?ssl=1">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1655/23493872563_4f01a9c336_o.png?w=840&amp;#038;ssl=1" alt="" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>根據上次寫了一篇&lt;a href="https://blog.wu-boy.com/2016/01/how-to-choose-web-framework/">如何選擇 Web Framework&lt;/a>，本篇寫了為什麼我選擇 &lt;a href="https://laravel.com/">Laravel&lt;/a> 這套 PHP Framework。底下是對於 Laravel 我選擇的一些看法，大家可以參考看看。要選一套好的 frmaework 真不容易，要考慮團隊成員技能，及後續的教育訓練等 &amp;hellip;&lt;/p></description></item><item><title>Laravel 搭配 Google, Facebook, Twitter 第三方 OAuth 認證</title><link>https://blog.wu-boy.com/2016/01/laravel-socialite-with-google-facebook-twitter/</link><pubDate>Thu, 14 Jan 2016 14:53:27 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/01/laravel-socialite-with-google-facebook-twitter/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/23493872563/in/dateposted-public/" title="laravel">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1655/23493872563_4f01a9c336_o.png?resize=400%2C400&amp;#038;ssl=1" alt="laravel" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://laravel.com/">Laravel&lt;/a> 提供了 &lt;a href="https://github.com/laravel/socialite">Socialite&lt;/a> 套件讓開發者可以快速整合 Facebook, Twitter, &lt;a href="https://www.google.com">Google&lt;/a>, LinkedIn, GitHub and Bitbucket 等第三方服務的登入認證，我挑了大家最常使用的 Facebook, Twitter, Google 來整合，用 Google 跟 Twitter 需要注意一些小細節，首先是 Google 部分，如果大家去 &lt;a href="https://console.developers.google.com">Developer console&lt;/a> 把 Oauth Callback 寫完，注意的是，這樣是不夠的，要去把 &lt;code>Contacts API&lt;/code> 及 &lt;code>Google+ API&lt;/code> 啟用，才可以真正使用 Google OAuth 認證服務。&lt;/p></description></item><item><title>Laravel Homestead 搭配 phpMyAdmin Docker</title><link>https://blog.wu-boy.com/2016/01/laravel-homestead-and-phpmyadmin-docker/</link><pubDate>Sat, 02 Jan 2016 08:14:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/01/laravel-homestead-and-phpmyadmin-docker/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/23493872563/in/dateposted-public/" title="laravel">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1655/23493872563_4f01a9c336_o.png?resize=400%2C400&amp;#038;ssl=1" alt="laravel" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>相信大家對於 &lt;a href="https://laravel.com/">Laravel&lt;/a> 推出的 &lt;a href="https://laravel.com/docs/5.1/homestead">Homestead&lt;/a> 開發環境不陌生，本篇不會教學使用 Homestead，直接看&lt;a href="https://laravel.tw/docs/5.1/homestead">繁中官網的教學&lt;/a>就可以完成了，Homestead 可以幫助開發者快速架設好 Laravel 環境，當然 Homestead 也適用於 &lt;a href="https://codeigniter.org.tw/">CodeIgniter&lt;/a> 的開發，因為兩套 Framework 的環境是一樣的，Homestead 開啟 VM 後，會自動將 Local port 對應到 VM port 如下&lt;/p>
&lt;ul>
&lt;li>SSH: 2222 → Forwards To 22&lt;/li>
&lt;li>HTTP: 8000 → Forwards To 80&lt;/li>
&lt;li>HTTPS: 44300 → Forwards To 443&lt;/li>
&lt;li>MySQL: 33060 → Forwards To 3306&lt;/li>
&lt;li>Postgres: 54320 → Forwards To 5432&lt;/li>
&lt;/ul></description></item><item><title>Laravel 50 個小技巧 + Laravel 5.2 新功能</title><link>https://blog.wu-boy.com/2015/12/50-laravel-tricks-and-5-2-new-feature/</link><pubDate>Fri, 04 Dec 2015 15:14:25 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/12/50-laravel-tricks-and-5-2-new-feature/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/23207680879/in/dateposted-public/" title="laravel">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5765/23207680879_9c86233e9b.jpg?resize=300%2C300&amp;#038;ssl=1" alt="laravel" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在學習 &lt;a href="http://laravel.tw/">Laravel&lt;/a> 階段，一定會天天看 &lt;a href="http://laravel.tw/docs/5.1">Laravel Documentation&lt;/a>，但是有很多小技巧是在文件內沒寫出來的，網路上找到這篇 &lt;a href="https://speakerdeck.com/willroth/50-laravel-tricks-in-50-minutes">50 Laravel Tricks in 50 Minutes&lt;/a>，寫了 50 個 Laravel 小技巧，包含了 IoC Container, Blade, Eloquent, Middleware, Routing, Commands, Queues, Events, Caching 等模組。&lt;/p></description></item><item><title>Laravel Homestead 支援 MySQL 5.7 和 Node 5.0</title><link>https://blog.wu-boy.com/2015/11/laravel-homestead-support-mysql-5-7-and-node-5-0/</link><pubDate>Sat, 14 Nov 2015 06:43:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/11/laravel-homestead-support-mysql-5-7-and-node-5-0/</guid><description> 昨天半夜看到 Laravel News 發佈支援 MySQL 5.7 和 Node 5.0 的消息，作者已經將 Homestead Vagrant box 更新上最新版了，如果你是用 PHP7 版本，請更新到 0.1.1 (laravel/homestead-7 branch)，如果非用 PHP 5.7 請更新到 0.3.3 版本，此 Box 更新兩個項目，就是支援 MySQL 5.7 版本，及 NodeJS 5.0 版本，已經非常新的版號，透過底下指令就可以更新 Local 端的 Box Image:
$ vagrant box update MySQL 5.7 版本支援了 JSON Format 真是太令人振奮了，另外此 Box 也是為了將來要釋出 Laravel 5.2 版本搭配用。最後補上升級後版本截圖</description></item><item><title>Laravel Homestead 支援 PHP 7</title><link>https://blog.wu-boy.com/2015/10/laravel-homestead-support-php-7/</link><pubDate>Mon, 05 Oct 2015 12:34:25 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/10/laravel-homestead-support-php-7/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="//www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>很高興看到 &lt;a href="http://laravel.com">Laravel&lt;/a> 的 &lt;a href="http://laravel.com/docs/5.1/homestead">Homestead&lt;/a> 推出 PHP 7 的版本，假如您還在使用 PHP 5.x 的 homestead box，請參考本篇教學，或者是參考&lt;a href="http://laravel.com/docs/5.1/homestead#installation-and-setup">線上文件&lt;/a>來升級。底下是這次升級的兩個步驟，第一個就是重新下載新的 PHP-7 box 檔案，第二步驟修改 &lt;code>Homestead.yaml&lt;/code>設定檔，請參考如下：&lt;/p></description></item><item><title>Laravel Presenter 在 Controller 的使用</title><link>https://blog.wu-boy.com/2015/09/how-to-use-laravel-presenter-in-controller/</link><pubDate>Fri, 04 Sep 2015 01:28:48 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/09/how-to-use-laravel-presenter-in-controller/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="https://github.com/laravel-auto-presenter/laravel-auto-presenter">Laravel Auto Presenter&lt;/a> 是一套用在 view 裡的 decorates objects，搭配資料庫時，如果有需要組合或整合欄位來顯示相關資訊，這套就非常適合使用在 &lt;a href="http://laravel.com/">Laravel&lt;/a> View 裡，如果不是透過 Laravel Auto Presenter，開發者也可以利用 &lt;a href="http://laravel.com/docs/5.1/eloquent-mutators#accessors-and-mutators">Laravel Accessors &amp;amp; Mutators&lt;/a> 來實現這方法，只是這要寫在 Model 層，寫法如下，此做法寫起來蠻亂的，而且也並不是每個地方都需要擴充這些欄位。&lt;/p>
&lt;div>
&lt;pre class="brush: php; title: ; notranslate" title="">/**
* The accessors to append to the model's array form.
*
* @var array
*/
protected $appends = [
'is_twitter',
];
&lt;p>/**&lt;/p>
&lt;ul>
&lt;li>Get the user&amp;rsquo;s is_twitter flag.&lt;/li>
&lt;li>&lt;/li>
&lt;li>@param string $value&lt;/li>
&lt;li>@return string
*/
public function getIsTwitterAttribute()
{
return (bool) ($this-&amp;gt;attributes[&amp;lsquo;options&amp;rsquo;] &amp;amp; self::$OPTIONS[&amp;lsquo;is_twitter&amp;rsquo;]);
}&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Laravel Homestead 2.1.5 版本將不再刪除舊有資料庫</title><link>https://blog.wu-boy.com/2015/07/homestead-no-longer-drops-databases-on-provision/</link><pubDate>Mon, 27 Jul 2015 01:14:05 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/07/homestead-no-longer-drops-databases-on-provision/</guid><description>Laravel Homestead 提供一套虛擬機器，讓開發者可以快速將 Laravel 環境架設起來。在 2.1.5 版本以前，要新增新的 Site 都會透過修改 yaml 設定檔後，直接下 homestead provision 來重新啟動 VM，問題就來了，此指令會將現有的 Database 全部刪除，重先建立一次，這樣開發者就要重新跑 DB Migration 才有資料。此問題作者聽到了，所以在 2.1.5 版本作者拿掉 Drop Database 指令，而是透過 CREATE DATABASE IF NOT EXISTS 來取代原有指令 (下面程式碼)，這樣開發者就不用擔心資料會被刪除。當然作者也很貼心，如果開發者想要清除整個資料庫，一樣可以透過指令 homestead destroy 來將整個 VM 刪除即可。
// 取代原有 mysql -uhomestead -psecret -e "DROP DATABASE IF EXISTS \`$DB\`"; mysql -uhomestead -psecret -e "CREATE DATABASE IF NOT EXISTS \`$DB\` DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_unicode_ci"; 詳細的資訊可以參考 official documentation，或參考最近修改的 commit 內容。</description></item><item><title>Laravel 5.1 is released</title><link>https://blog.wu-boy.com/2015/06/laravel-5-1-is-released/</link><pubDate>Wed, 10 Jun 2015 01:38:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/06/laravel-5-1-is-released/</guid><description>&lt;p>&lt;img src="https://i2.wp.com/d1zj60nuin5mrx.cloudfront.net/media/2015/06/07203934/laravel-5.1-released.png?w=640&amp;#038;ssl=1" alt="" data-recalc-dims="1" />&lt;/p>
&lt;p>很高興昨天收到 &lt;a href="http://laravel.com/">Laravel&lt;/a> 釋出 5.1 版本，此版本在 Laravel 發展過程中第一個長期支援的版本，底下我們就來看看 Taylor Otwell 作者在此版本釋出有什麼新功能或變化。&lt;/p></description></item><item><title>Laravel 5 PHP Framework 釋出</title><link>https://blog.wu-boy.com/2015/02/laravel-5-php-framework-release/</link><pubDate>Fri, 06 Feb 2015 05:44:45 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/02/laravel-5-php-framework-release/</guid><description>很開心看到 Laravel 作者 Taylor Otwell 能在年前公開 Laravel 5 is Released!，這次連官網也順道一起改版了，經過幾天努力，Laravel Taiwan 也將官網換成新的了，這次 Laravel 5 共釋出 22 個新功能，前端部份也導入新功能叫做 Elixir，另外也將 Scheduler 納入主功能了，非常開心能看到作者開發了好多新功能。由於 Laravel 5 出來了，那接下來就是要翻譯新的文件，請大家可以到 Hackpad 登記翻譯，翻譯完成後送 PR 到 Laravel Taiwan documentation Repo，基本上翻譯過 4.2 版本，把差異性部份補上即可。
Laravel 5 新功能可以直接到 Laracasts 看 laravel 5 Fundamentals 教學影音。</description></item><item><title>CodeIgniter 搭配 Homestead 開發環境</title><link>https://blog.wu-boy.com/2014/12/codeigniter-with-homestead-development/</link><pubDate>Mon, 01 Dec 2014 08:18:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/12/codeigniter-with-homestead-development/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div>
&lt;p>&lt;a href="http://laravel.tw/docs/4.2/homestead">Homestead&lt;/a> 為 &lt;a href="http://laravel.tw">Laravel Framework&lt;/a> 所提供出來的懶人安裝環境，大幅降低學習 Laravel 的門檻，大家都知道初學一套 Framework 最重要的是快速寫出 Hello world，如果初學者卡在環境都架設不來，那就更加不用接著學習 MVC 架構了，所以 Laravel 提供了 Homestead，不管你是用 Linux 或 Windows 都可以快速的把開發環境架設起來。相信很多人也從 &lt;a href="http://codeigniter.org.tw/">CodeIgniter&lt;/a> 跳往 Laravel 框架了，但是舊的網站還是要維護阿，所以這次透過 Laravel Homestead 一起來把 CodeIgniter 開發環境無痛架設起來，省去新人安裝 &lt;a href="http://nginx.org/">Nginx&lt;/a> + &lt;a href="http://php.net/">PHP&lt;/a> + &lt;a href="http://www.mysql.com/">MySQL&lt;/a> 的時間。&lt;/p></description></item><item><title>Laravel Homestead 2.0 介紹</title><link>https://blog.wu-boy.com/2014/11/introduction-to-laravel-homestead-2-0/</link><pubDate>Mon, 24 Nov 2014 04:22:29 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/11/introduction-to-laravel-homestead-2-0/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在九月寫了 &lt;a href="http://blog.wu-boy.com/2014/09/get-homestead-vagrant-vm-running/">Laravel Homestead 的基礎介紹&lt;/a>，最近 &lt;a href="http://laravel.com">Laravel&lt;/a> 推出 Laravel Homestead 2.0，在 1.0 套件是沒有支援 &lt;code>homestead&lt;/code> 指令，現在 2.0 可以直接使用 &lt;code>homestead&lt;/code> 指令，前置安裝 &lt;a href="https://www.vagrantup.com/">Vagrant&lt;/a> + &lt;a href="https://www.virtualbox.org/wiki/Downloads">Virtualbox&lt;/a> 就不在此介紹了。&lt;/p></description></item><item><title>Laravel Homestead 開始支援 HHVM</title><link>https://blog.wu-boy.com/2014/09/laravel-homestead-support-hhvm/</link><pubDate>Thu, 11 Sep 2014 03:13:01 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/09/laravel-homestead-support-hhvm/</guid><description>在 Laravel News 看到這篇 Laravel Homestead – Now with HHVM，也就是官方 Homestead 開始支援 HHVM，現在可以直接透過底下指令升級 Box:
$ vagrant box update 版本會從 0.1.8 升級到 0.1.9，升級過程需要一段時間，最後要啟用 HHVM 服務，請在 Homestead.yaml 加入底下設定
sites: - map: homestead.app to: /home/vagrant/Code/Laravel/public hhvm: true 不用煩惱架設 HHVM 環境了，對開發者真是一大幅音。</description></item><item><title>快速安裝 Laravel Homestead 環境</title><link>https://blog.wu-boy.com/2014/09/get-homestead-vagrant-vm-running/</link><pubDate>Fri, 05 Sep 2014 03:56:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/09/get-homestead-vagrant-vm-running/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在看本篇安裝教學前可以參考翻譯完成的 &lt;a href="http://laravel.tw/docs/homestead">Laravel Homestead&lt;/a>，此篇會紀錄如何在 Ubuntu 底下快速架設 &lt;a href="http://Laravel.tw">Laravel&lt;/a> 環境，對於一般新手而言，剛開始安裝 Laravel 開發環境一定會遇到許多問題，為了解決開發環境，Laravel 推出 Homestead 搭配 Vagrant Box，讓初學者不用為環境問題而煩惱，減少浪費時間在架設 Laravel。簡單來說 Laravel Homestead = Vagrant + &lt;a href="https://www.virtualbox.org/">VirtualBox&lt;/a> + Laravel 安裝包。底下簡單幾個步驟就可以完成 Laravel 開發環境。&lt;/p></description></item><item><title>Laravel 4.2 繁體中文文件完整上線</title><link>https://blog.wu-boy.com/2014/09/laravel-4-2-traditional-chinese-document/</link><pubDate>Mon, 01 Sep 2014 08:11:45 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/09/laravel-4-2-traditional-chinese-document/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://laravel.com">Laravel&lt;/a> 是目前最火紅的 PHP Framework，但是對於第一次接觸 Framework 的使用者，安裝或學習方面一定會遇到重重困難，而為了降低學習門檻，網路上集結很多好朋友一起加入翻譯，經過了半年時間，快速的完成 4.2 版本的翻譯文件，雖然 4.3 版本在年底即將推出。這次要好好感謝 &lt;a href="https://www.facebook.com/groups/laravel.tw/">Facebook Laravel Taiwan 群組&lt;/a>，透過台北的小聚會來定期 review 及分配翻譯項目，才可以在這麼短的時間完成翻譯內容，果然團結力量大。目前線上內容已經翻譯完成，但是還需要網路上各位大大來潤稿，Laravel TW 的 Github 在&lt;a href="https://github.com/laravel-taiwan">這裡&lt;/a>，若要參與翻譯，請直接看 &lt;a href="https://github.com/laravel-taiwan/docs">Docs Repo&lt;/a>，有人常常問我，不會 Git 可以幫忙嗎？答案是當然可以阿，可以直接將介面切換到瀏覽模式，找到底下符號，按下編輯，修改完成，拉到底下按下送出就可以了喔&lt;/p></description></item><item><title>Laravel 不同開發環境設定</title><link>https://blog.wu-boy.com/2014/08/laravel-application-environments-without-hostnames/</link><pubDate>Tue, 12 Aug 2014 02:09:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/08/laravel-application-environments-without-hostnames/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://laravel.com/">Laravel&lt;/a> 本來預設的 &lt;a href="http://laravel.com/docs/configuration#environment-configuration">Environment Configuration&lt;/a> 是透過 Domain Name 來區分，程式碼 &lt;code>bootstrap/start.php&lt;/code> 如下&lt;/p>
&lt;div>
&lt;pre class="brush: php; title: ; notranslate" title="">&lt;?php
$env = $app->detectEnvironment(array(
'local' => array('your-machine-name'),
));&lt;/pre>
&lt;/div>
&lt;p>我們可以根據上述程式碼產生不同的開發環境，像是 develop, production, staging… 等，根據不同的 Domain 給予不同的環境設定檔。但是根據使用 Domain Name 來區分各種不同的環境換產生兩種問題&lt;/p></description></item><item><title>升級 PHP Facebook SDK 到 4.0.x 版本</title><link>https://blog.wu-boy.com/2014/07/upgrade-php-facebook-sdk-to-4-0-x/</link><pubDate>Thu, 24 Jul 2014 09:11:12 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/07/upgrade-php-facebook-sdk-to-4-0-x/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div>
&lt;p>最近幫公司建立 Staging 環境，申請了新的 &lt;a href="https://developers.facebook.com">FB App&lt;/a> 來，用原本 &lt;a href="https://github.com/facebook/facebook-php-sdk">Facebook v3.2.3 SDK&lt;/a> 發現已經不能 work 了，去翻了 &lt;a href="https://developers.facebook.com/docs/apps/changelog">Facebook Platform Changelog&lt;/a>，看到今年 4 月 30 號以後申請的 App 會強制走 v2.0 Auth 機制，所以原本用 php sdk 3.2.3 版本的話，完全無法呼叫 Auth 2.0 API，導致整個網站爛掉，當然線上的網站是不會隨意換 App ID 及 secret，免得怎麼爆掉的都不知道。這次來教學在 CodeIgniter 轉換 PHP Facebook SDK，可以直接參考&lt;a href="https://developers.facebook.com/docs/php/gettingstarted/4.0.0">官方 4.0.0 的教學&lt;/a>，原本 3.2.3 版本直接下載程式碼，放到 library 目錄，直接 include 就可以取得 Facebook 個人資料，4.0.0 版本以後，請先確認系統是否升級為 PHP 5.4 版本以上，並且支援 &lt;a href="https://getcomposer.org/">Composer&lt;/a> 安裝，當然如果不用 Composer 也可以，只是要 include 很多檔案，真的比較麻煩。&lt;/p></description></item><item><title>Laravel 搭配 Memcached Cross Domain Session</title><link>https://blog.wu-boy.com/2014/02/laravel-memcached-cross-domain-session/</link><pubDate>Mon, 24 Feb 2014 07:09:49 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/02/laravel-memcached-cross-domain-session/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://laravel.com/">Laravel&lt;/a> 提供了 &lt;code>file&lt;/code>、&lt;code>cookie&lt;/code>、&lt;code>database&lt;/code>、&lt;code>memcached&lt;/code>、&lt;code>array&lt;/code> 五種方式來存取 &lt;a href="http://laravel.com/docs/session">Session&lt;/a>，預設的使用方式會是 &lt;code>file&lt;/code> 存取，如果要跨 Domain 存取 Session 基本上只要設定 &lt;code>php.ini&lt;/code> 裡面的 Session 相關參數即可，請注意底下 3 個參數。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://tw1.php.net/manual/en/session.configuration.php#ini.session.save-path">session.save_handler&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tw1.php.net/manual/en/session.configuration.php#ini.session.save-handler">session.save_path&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tw1.php.net/manual/en/session.configuration.php#ini.session.cookie-domain">session.cookie_domain&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Nginx 搭配 Laravel PHP Framework 設定</title><link>https://blog.wu-boy.com/2013/09/setup-laravel-with-nginx/</link><pubDate>Thu, 12 Sep 2013 07:45:45 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/09/setup-laravel-with-nginx/</guid><description> 筆記在 Nginx 設定 Laravel 專案，現在的 PHP Framework 都將 query string 整個導向首頁 index.php，就拿 CodeIgniter 來說，在 Apache 只要設定
RewriteEngine on
RewriteBase /
RewriteCond $1 !^(index\.php|images|robots\.txt|$)
RewriteRule ^(.*)$ index.php/$1 [L,QSA] 在 Nginx 內只要透過 try_files 即可
location / {
try_files $uri $uri/ /index.php
} 正常來說 Laravel 直接用上面的設定即可，但是我發現在 $_GET 這全域變數會拿到空值，解法也很簡單，在 Nginx 將 query string 變數帶到 index.php 後面即可 location / {
try_files $uri $uri/ /index.php?$query_string;
}</description></item><item><title>2012 PHPConf RESTful API Design &amp; Implementation with CodeIgniter PHP Framework</title><link>https://blog.wu-boy.com/2012/11/2012-phpconf-restful-api-design-implementation-with-codeigniter-php-framework/</link><pubDate>Sat, 03 Nov 2012 06:21:40 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/11/2012-phpconf-restful-api-design-implementation-with-codeigniter-php-framework/</guid><description> 去年 PHPConf 介紹了 CodeIgniter PHP Framework，這次講如何在 CodeIgniter 底下設計 RESTFul API，其實主要介紹兩個 CodeIgniter 套件，第一個是 RESTFul Server 前面是 RESTFul Client，一個伺服器端，後面用來測試 (Unit Test)，底下是今年的 Slide，歡迎大家下載
RESTful API Design &amp; Implementation with CodeIgniter PHP Framework from Bo-Yi Wu</description></item><item><title>PHP MVC Framework 搭配 Nginx + PHP-FPM 設定檔</title><link>https://blog.wu-boy.com/2012/10/php-mvc-framework-nginx-php-fpm/</link><pubDate>Mon, 08 Oct 2012 12:03:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/10/php-mvc-framework-nginx-php-fpm/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div> 相信大家都知道
&lt;p>&lt;a href="http://nginx.com/" target="_blank">Nginx&lt;/a> 搭配 &lt;a href="http://php-fpm.org/" target="_blank">PHP-FPM&lt;/a> 用起來效能還不錯，這次來筆記如何設定 Nginx 去除 PHP MVC Framework 討厭的 index.php 字串，不管是 &lt;a href="http://laravel.com/" target="_blank">Laravel&lt;/a> 或 &lt;a href="http://codeigniter.org.tw" target="_blank">CodeIgniter&lt;/a> 教學文件都是在 &lt;a href="http://www.apache.org/" target="_blank">Apache&lt;/a> 設定 &lt;a href="http://en.wikipedia.org/wiki/Htaccess" target="_blank">.htaccess&lt;/a> 來達成 Cleaner URL，Apache 最大好處支援 .htaccess，但是 Nginx 也有強大的效能，此篇紀錄如何設定 Nginx 達成 &lt;a href="http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html" target="_blank">mod_rewrite&lt;/a> 效果。&lt;/p></description></item><item><title>phpfog 免費提供升級 Silver 一個月</title><link>https://blog.wu-boy.com/2012/03/phpfog-get-29-account-credit-by-just-deploying-a-new-app/</link><pubDate>Sat, 10 Mar 2012 02:01:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/03/phpfog-get-29-account-credit-by-just-deploying-a-new-app/</guid><description>phpFog 最近放出一個消息 Get $29 account credit by just deploying a new App!，內文大意就是說，只要您註冊網站成功，並且新開 application，系統就會在帳戶增加 $29 美元，您隨時可以升級到 Silver Cloud，重點是免費的啦，如果大家想玩看看，就趕快去註冊吧，開放時間是 8 AM PST on 6 March 2012 and runs until 8 AM PST on 9 March 2012.，不確定時間是不是過了 XD，如果已經有帳號的，可以直接到 Live Chat 直接請他們把 Credit 加上去就好。 phpfog 搭配當紅 git 來當作下載及上傳程式碼，跟過去都是用 FTP 方式來運作有很大的不同，所以用此平台之前，請先學會基本 git version control，網站提供了很多 PHP Framework 或 Application，例如 CodeIgniter、CakePHP、FuelPHP、Laravel…等，不管選擇哪一個 Framework，都可以隨時修改，系統只是預設把 Source Code 抓下來放到 Application 裡面，所以可以任意刪除。</description></item><item><title>輕量級 A Clean &amp; Classy PHP Framework Laravel 簡介安裝</title><link>https://blog.wu-boy.com/2011/10/install-a-clean-classy-php-framework-laravel/</link><pubDate>Sun, 16 Oct 2011 04:40:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/10/install-a-clean-classy-php-framework-laravel/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div> 今日作者來介紹一套輕量級 PHP Framework:
&lt;p>&lt;a href="http://laravel.com/" target="_blank">Laravel&lt;/a>，目前還尚未發現台灣有任何人使用這套，然而 PHP Framework 實在太多種了，要把每一套都弄熟實在很不容易，如果作者有玩過一定會上來寫些教學文件，Laravel 是基於 &lt;strong>&lt;span style="color:green">PHP 5.3&lt;/span>&lt;/strong> 環境的 PHP Framwork，裡面已經都是用物件及 5.3 的 &lt;a href="http://php.net/manual/en/language.namespaces.php" target="_blank">Namespace&lt;/a> 下去開發，如果您想研究 Laravel PHP Framework 可以 &lt;a href="http://twitter.com/laravelphp" target="_blank">Follow Laravel Twitter&lt;/a>，更重要的是追蹤 &lt;a href="http://github.com/laravel" target="_blank">Github Source Code&lt;/a>。也許可以看一下 &lt;a href="http://laravel.com/roadmap" target="_blank">2.0 的 Roadmap&lt;/a>。&lt;/p></description></item></channel></rss>