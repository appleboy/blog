<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gitea on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/categories/gitea/</link><description>Recent content in Gitea on 小惡魔 - AppleBOY</description><generator>Hugo</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sat, 16 Nov 2024 12:32:46 +0800</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/gitea/feed.xml" rel="self" type="application/rss+xml"/><item><title>使用 GitLab API 學習 Go 語言</title><link>https://blog.wu-boy.com/2024/11/learning-go-language-with-gitlab-api-zh-tw/</link><pubDate>Sat, 16 Nov 2024 12:32:46 +0800</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2024/11/learning-go-language-with-gitlab-api-zh-tw/</guid><description>&lt;p>&lt;img src="https://blog.wu-boy.com/images/2024-11-16/gitlab-flow.png" alt="logo">&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>常常會有人問我如何學習 &lt;a href="https://go.dev/">Go 語言&lt;/a>，我通常會建議他們從實際專案開始，這樣可以更快的學習到語言的特性。個人也是透過先寫小專案，再慢慢擴大專案的範圍，從貢獻文件到開源專案，在進一步學習如何修改原始碼，最後再自己寫一個專案。這樣的學習方式可以讓你更快的熟悉 Go 語言的特性。&lt;/p></description></item></channel></rss>