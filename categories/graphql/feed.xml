<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GraphQL on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/categories/graphql/</link><description>Recent content in GraphQL on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sat, 06 Feb 2021 01:12:54 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/graphql/feed.xml" rel="self" type="application/rss+xml"/><item><title>使用 GraphQL Gateway 串接多個 Data Schema</title><link>https://blog.wu-boy.com/2021/02/graphql-gateway-in-golang/</link><pubDate>Sat, 06 Feb 2021 01:12:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2021/02/graphql-gateway-in-golang/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/eWR5fi9ipIuscey-E940I6fhwU5ZySehbItzPLyPVchJxBlq8N1uXT-psLHdX_wV6xojac3_EeCFZH6vs6C1R910vzDV1mY2uOo33so6QqpWgNqbDjGZPB6ar2NwspITQ7paTfjqSo8=w1920-h1080" title="infra">&lt;img src="https://lh3.googleusercontent.com/eWR5fi9ipIuscey-E940I6fhwU5ZySehbItzPLyPVchJxBlq8N1uXT-psLHdX_wV6xojac3_EeCFZH6vs6C1R910vzDV1mY2uOo33so6QqpWgNqbDjGZPB6ar2NwspITQ7paTfjqSo8=w1920-h1080" alt="infra" title="infra">&lt;/a>&lt;/p>
&lt;p>不久之前寫過一篇『&lt;a href="https://blog.wu-boy.com/2020/04/switch-graphql-go-to-gqlgen-in-golang/">從 graphql-go 轉換到 gqlgen&lt;/a>』，目前團隊舊有的專案還是繼續用 &lt;a href="https://github.com/graphql-go/graphql">graphql-go&lt;/a> 來撰寫，不過之後需求量越來越大，維護 graphql-go 就越來越困難，故有在想怎麼把 &lt;a href="https://gqlgen.com/">gqlgen&lt;/a> 跟 graphql-go 相容在一起，那就是把這兩個套件想成不同的服務，再透過 Gateway 方式完成 &lt;a href="https://principledgraphql.com/integrity#1-one-graph">single data graph&lt;/a>。至於怎麼選擇 GraphQL Gateway 套件，最容易的方式就是使用 &lt;a href="https://www.apollographql.com/docs/federation/gateway/">@apollo/gateway&lt;/a>，但是由於個人比較偏好 &lt;a href="https://golang.org">Go 語言&lt;/a>的解決方案，就稍微找看看有無人用 Go 實現了 Gateway，後來找到 &lt;a href="https://github.com/nautilus/gateway">nautilus/gateway&lt;/a>，官方有&lt;a href="https://gateway.nautilus.dev/">提供文件&lt;/a>以及&lt;a href="https://medium.com/@aaivazis/a-guide-to-schema-federation-part-1-995b639ac035">教學 Blog&lt;/a> 可以供開發者參考。底下會教大家使用 nautilus/gateway 將兩個不同的服務串接在一起。&lt;/p></description></item><item><title>為什麼要學 GraphQL?</title><link>https://blog.wu-boy.com/2020/06/why-we-need-to-learn-graphql/</link><pubDate>Sat, 20 Jun 2020 04:57:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2020/06/why-we-need-to-learn-graphql/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/2N2CsbTrA9I78S376IqY4LYiw02t8a6xNwO96lZG3CAENy4bSX8dRFrdFYxQnmIesEjLBQoG1tccIjKF944I7M91-POoYrHhHOS6kgiuKt39QuTI5zZ9NSAjbCrQYmktjct3YZfiJ4I=w1920-h1080">&lt;img src="https://lh3.googleusercontent.com/2N2CsbTrA9I78S376IqY4LYiw02t8a6xNwO96lZG3CAENy4bSX8dRFrdFYxQnmIesEjLBQoG1tccIjKF944I7M91-POoYrHhHOS6kgiuKt39QuTI5zZ9NSAjbCrQYmktjct3YZfiJ4I=w1920-h1080" alt="">&lt;/a>&lt;/p>
&lt;p>身為網站工程師，您不能不知道什麼是 &lt;a href="https://graphql.org/">GraphQL&lt;/a>，這是一個前端跟後端溝通的 API Query 語法，大幅改善了前後端的合作模式，這篇會跟大家介紹為什麼麼要學 GraphQL，以及整理出三大 GraphQL 優勢，讓大家了解跟傳統 RESTful API 有什麼不同。當然不是叫開發者捨棄 RESTful API，而是根據專案的不同，來決定不同的技術 Stack。像是服務跟服務之前您說要用 GraphQL，肯定被打槍，而是要用更輕量的 RESTful API 或 &lt;a href="https://grpc.io/">gRPC&lt;/a>。好了，底下來說明三點 GraphQL 的優勢。&lt;/p></description></item></channel></rss>