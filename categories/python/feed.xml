<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/categories/python/</link><description>Recent content in Python on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Thu, 25 Apr 2013 16:35:37 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/categories/python/feed.xml" rel="self" type="application/rss+xml"/><item><title>Fabric 管理多台 Linux 機器的 command tool</title><link>https://blog.wu-boy.com/2013/04/fabric-ssh-for-deploy-or-systems-administration/</link><pubDate>Thu, 25 Apr 2013 16:35:37 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/04/fabric-ssh-for-deploy-or-systems-administration/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/8679381967/" title="python-logo-master-v3-TM by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm9.staticflickr.com/8123/8679381967_75cee4e0e9_n.jpg?resize=320%2C108&amp;#038;ssl=1" alt="python-logo-master-v3-TM" data-recalc-dims="1" />&lt;/a>
&lt;/div> 相信 Administrator 管理過兩台以上的 Linux Server 都一定會找 tool 讓多台機器同時執行指令，這也應用在 Deploy 任何 application 到多台機器或者是同時更新系統套件…等，網路上有蠻多套 command line tool 像是
&lt;p>&lt;a href="https://github.com/capistrano/capistrano" target="_blank">capistrano&lt;/a>、&lt;a href="http://docs.fabfile.org" target="_blank">Fabric&lt;/a>、&lt;a href="http://code.google.com/p/parallel-ssh/" target="_blank">pssh&lt;/a>、&lt;a href="http://packages.debian.org/search?keywords=dsh" target="_blank">dsh&lt;/a>…等都，本篇會以 &lt;a href="http://www.python.org/" target="_blank">Python&lt;/a> 所推的 Fabric 來做介紹。另外 Ruby 所寫的 capistrano tool 也是不錯的選擇，這兩套其實大同小異，可以將 Deploy 的邏輯寫成單一 file 再透過 task 定義來決定執行的工作。當然你也可以透過此 tool 來管理 local 端動作，但是這有點多此一舉，因為基本的 Shell 就可以完成了，如果熟悉 Python 則選 fabric，如果喜歡寫 &lt;a href="http://www.ruby-lang.org/en/" target="_blank">Ruby&lt;/a> 則可以試試看 capistrano。&lt;/p>
&lt;h3 id="安裝方式installation-如果是">安裝方式(Installation) 如果是&lt;/h3>
&lt;p>&lt;a href="http://www.centos.org/" target="_blank">CentOS&lt;/a> 系列可以透過 yum 套件管理，&lt;a href="http://www.ubuntu.com/" target="_blank">Ubuntu&lt;/a> 或 &lt;a href="http://www.debian.org/" target="_blank">Debian&lt;/a> 則是透過 aptitude 方式安裝。 Yum&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title=""># install python pip tool and fabric command
yum -y install python-pip
pip-python install fabric&lt;/pre> APT
&lt;pre class="brush: bash; title: ; notranslate" title=""># install python easy_install
aptitude -y install python-pip
# install fabric command
pip install fabric&lt;/pre> 安裝 capistrano 可以透過 Ruby gem。
&lt;pre class="brush: bash; title: ; notranslate" title="">$ gem install capistrano&lt;/pre></description></item><item><title>2011 OSDC Day 1 筆記</title><link>https://blog.wu-boy.com/2011/03/2011-osdc-day-1-%E7%AD%86%E8%A8%98/</link><pubDate>Thu, 31 Mar 2011 12:55:56 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/03/2011-osdc-day-1-%E7%AD%86%E8%A8%98/</guid><description>Update: 補上 OSDC 紀錄影片 2011.06.26 今年很高興可以北上參加 OSDC 2011 (Open Source Developers Conference)，由於之前都在南部唸書及工作，沒有機會北上參加聚會，現在人在新竹，終於有機會可以參加了，雖然早上六點就要起床趕電車了，不過到現場聽課感覺就是不同，也可以認識很多新朋友，底下來紀錄上課筆記
微軟與 jQuery 社群的親密接觸 講者: Eric Shangkuan (Microsoft) Slide: 微軟與 jQuery 社群的親密接觸 這是 OSDC 第一場演講，早上九點就開始了，雖然人不多，但是蠻多人還是為了講者而來，首先介紹什麼是 jQuery，以及 jQuery 一些基本用法，像是 CSS selector，如何在 Windows Visual Studio 上面開發 jQuery 及撰寫 plugin 整合進去 ASP.Net，最後介紹三個不錯用的 jQuery Plugin: Templeate, Datalink, Globalzation。
Templeate: 這搭配 Facebook api 可以直接做個人頁面，請參考這裡 Globalzation: 前端多國語系實做 Datalink: 可以快速處理 form，利用 object 跟 jQuery 搭配 如果要研究上述三個 jQuery Plugin 可以參考底下: jQuery Datalink: https://github.com/jquery/jquery-datalink jQuery Templeate: https://github.</description></item><item><title>[網站] 好站連結(一)</title><link>https://blog.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90%E4%B8%80/</link><pubDate>Wed, 06 May 2009 03:47:58 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/05/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90%E4%B8%80/</guid><description/></item><item><title>[Python] OSSF::自由軟體鑄造場 Python network programming -進階</title><link>https://blog.wu-boy.com/2009/05/python-ossf%E8%87%AA%E7%94%B1%E8%BB%9F%E9%AB%94%E9%91%84%E9%80%A0%E5%A0%B4-python-network-programming-%E9%80%B2%E9%9A%8E/</link><pubDate>Mon, 04 May 2009 13:58:49 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/05/python-ossf%E8%87%AA%E7%94%B1%E8%BB%9F%E9%AB%94%E9%91%84%E9%80%A0%E5%A0%B4-python-network-programming-%E9%80%B2%E9%9A%8E/</guid><description>&lt;p>今天跑來聽 &lt;a href="http://www.openfoundry.org/">OSSF::自由軟體鑄造場&lt;/a> 舉辦的 &lt;a href="http://whoswho.openfoundry.org/workshop/details/22.html">Python network programming -進階&lt;/a> 課程，紀錄上課的心得，以及講師提到的一堆重點整理，分享給大家，收穫實在是太多了，本身在南部能聽到的課程就很少，一看到有開課程，就非常開心報名參加，講師對於上課準備的講義也很用心，學習到平常看書學不到的經驗跟實作。 &lt;strong>1. 字串處理函式&lt;/strong>&lt;/p>
&lt;pre class="brush: python; title: ; notranslate" title=""># 字串轉換小寫
string.lower
# 字串轉換大寫
string.upper
# 切割字串
string.split
# 合併字串
string.join
# 找尋字串
string.find&lt;/pre></description></item><item><title>[Django] Web Framework- Django -初階學習心得</title><link>https://blog.wu-boy.com/2009/04/django-web-framework-django-%E5%88%9D%E9%9A%8E%E5%AD%B8%E7%BF%92%E5%BF%83%E5%BE%97/</link><pubDate>Mon, 27 Apr 2009 02:50:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/04/django-web-framework-django-%E5%88%9D%E9%9A%8E%E5%AD%B8%E7%BF%92%E5%BF%83%E5%BE%97/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/3475465970/" title="django-logo-negative_1236046419 (by appleboy46)">&lt;img title="django-logo-negative_1236046419 (by appleboy46)" src="https://i1.wp.com/farm4.static.flickr.com/3595/3475465970_7044242629.jpg?resize=198%2C90&amp;#038;ssl=1" alt="django-logo-negative_1236046419 (by appleboy46)" data-recalc-dims="1" />&lt;/a> 首先感謝 &lt;a href="http://phorum.study-area.org/index.php">酷學園團隊&lt;/a>、&lt;a href="http://whoswho.openfoundry.org">Who&amp;rsquo;s Who 工作坊&lt;/a>、&lt;a href="http://www.openfoundry.org" target="_blank">自由軟體鑄造場&lt;/a> 舉辦的一系列南部的 &lt;a href="http://www.python.org/">python&lt;/a>、&lt;a href="http://www.djangoproject.com/" target="_blank">Django&lt;/a> 活動，今天的活動主題是：&lt;a href="http://whoswho.openfoundry.org/workshop/details/21.html">Web Framework- Django -初階 (講者：陳建玎)&lt;/a>，簡介了為什麼需要 MVC 架構寫法，MVC 的重要性，以及 Django 的優點，還蠻豐富的課程，其實重點都是在如何使用 MVC 加速開發 Web 網站，以及在 Team Work 裡的重要性，目前在開發 Web Framework 都是利用 PHP 一套 Frame Work：&lt;a href="http://codeigniter.com/">Codeigniter&lt;/a>，在台灣已經有中文網站：&lt;a href="http://www.codeigniter.com.tw/">CodeIgniter 繁體中文&lt;/a>，自己接手了 CodeIgniter 計畫翻譯中文文件，還有開發 &lt;a href="http://www.codeigniter.com.tw/forums">forum 中文討論區&lt;/a>，還在規劃中，自己也才摸 CodeIgniter 一個多禮拜，底下有一張上課的投影片，介紹三種 Frame Work 的 Model、Views、Controller &lt;a href="https://www.flickr.com/photos/appleboy/3474957475/" title="django (by appleboy46)">&lt;img title="django (by appleboy46)" src="https://i0.wp.com/farm4.static.flickr.com/3343/3474957475_2a379b69ff.jpg?resize=500%2C371&amp;#038;ssl=1" alt="django (by appleboy46)" data-recalc-dims="1" />&lt;/a>&lt;/p></description></item><item><title>[高雄] Python 入門 – Python tutorial</title><link>https://blog.wu-boy.com/2009/04/%E9%AB%98%E9%9B%84-python-%E5%85%A5%E9%96%80-python-tutorial/</link><pubDate>Tue, 14 Apr 2009 14:46:39 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/04/%E9%AB%98%E9%9B%84-python-%E5%85%A5%E9%96%80-python-tutorial/</guid><description>&lt;p>在現今 &lt;a href="http://www.google.com">Google&lt;/a> 的大多數服務都是利用 &lt;a href="http://www.python.org/">Python&lt;/a> 程式撰寫，例如：&lt;a href="http://code.google.com/intl/zh-TW/appengine/">Google App Engine&lt;/a>，之前買下的 Youtube 影音網站，就是因為 Youtube 是用 Python 的程式撰寫起來的一個 Web 2.0 網站，在上禮拜去參加了 &lt;a href="http://whoswho.openfoundry.org/">工作坊&lt;/a> 所開的一門入門的課程 &lt;a href="http://whoswho.openfoundry.org/workshop/details/18.html">Python 入門 - Python tutorial - 第一梯 (講者：黃宇新)&lt;/a>，這課程是給要學習 Python 的基本入門，講師 黃宇新 教的真的很棒，把 Python 的精神都講的非常好，自己感覺跟 Perl 的功能差沒多少，可是兩種語言在比較方面各有優缺點，聽完最大的感想歸納為兩點，那就是 &lt;span style="color: #ff0000;">Python 產生線上文件相當方&lt;/span>便，還有非常的&lt;span style="color: #ff0000;">快速模組化&lt;/span>，每個 Python 程式都是一個獨立模組，在其他 Python 程式裡面都以利用 import 方式來交互使用，個人認為在 系統管理、網路管理、網路傳輸程式、網頁程式開發 上面會有相當大的幫助。 Python 還有一個優點就是程式可閱讀性，在每個程式都必須有良好的撰寫習慣，那就是要善用 tab 鍵來排版，不然程式就是會錯誤，底下一個 Python 的例子，九九乘法表：&lt;/p>
&lt;pre class="brush: python; title: ; notranslate" title="">#!/usr/local/bin/python
for i in range(1,10):
for j in range(1,10):
print "%d*%d=%s" % (i,j,i*j),
print ""&lt;/pre></description></item></channel></rss>