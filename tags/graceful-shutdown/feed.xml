<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>graceful shutdown on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/graceful-shutdown/</link><description>Recent content in graceful shutdown on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sun, 20 Jun 2021 10:28:17 +0800</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/graceful-shutdown/feed.xml" rel="self" type="application/rss+xml"/><item><title>用 docker-compose 優雅關閉服務</title><link>https://blog.wu-boy.com/2021/06/graceful-stop-service-using-docker-compose-in-golang/</link><pubDate>Sun, 20 Jun 2021 10:28:17 +0800</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2021/06/graceful-stop-service-using-docker-compose-in-golang/</guid><description>&lt;p>&lt;img src="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" alt="logo">&lt;/p>
&lt;p>之前已經有寫過幾篇關於 Graceful Shutdown 教學文章，大家有興趣可以先閱讀底下教學連結資訊，而本篇最主要是紀錄在如何用 docker 指令優雅關閉容器服務，尤其是關閉服務後，可以讓原本服務內的工作可以正常做完，才正式關閉。在本文開始前，先將 &lt;a href="https://www.docker.com/">docker&lt;/a> 及 &lt;a href="https://docs.docker.com/compose/compose-file/">docker-compose&lt;/a> 版本資訊貼出來，避免有資訊的落差，畢竟 docker-compose 在不同版本之間有不同的設定方式。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.wu-boy.com/2020/02/graceful-shutdown-using-docker-compose-with-rolling-update/">[Go 教學] graceful shutdown 搭配 docker-compose 實現 rolling update&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.wu-boy.com/2020/02/graceful-shutdown-with-multiple-workers/">[Go 教學] graceful shutdown with multiple workers&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>如何取得上傳進度條 progress bar 相關數據及實作 Graceful Shutdown</title><link>https://blog.wu-boy.com/2021/05/graceful-shutdown-with-progress-bar-in-golang/</link><pubDate>Fri, 21 May 2021 04:52:17 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2021/05/graceful-shutdown-with-progress-bar-in-golang/</guid><description>&lt;p>&lt;img src="https://lh3.googleusercontent.com/ASkclquxfpPTlJ_QWnhZjB5katrz18NyK4zt2w47UM8gS71MCjWodDoGp50nHRyeQx8MfbJJbwWjfIWCoKbZYLkec7a-FqMEw-r9Lh3U8XGAuwEqWa3DVMB2lkhdgMQUI1IMiKWL5Ss=w1920-h1080" alt="">&lt;/p>
&lt;p>由於專案需求，需要開發一套 CLI 工具，讓 User 可以透過 CLI 上傳大檔案來進行 Model Training，請參考上面的流程圖。首先第一步驟會先跟 API Server 驗證使用者，驗證完畢就開始上傳資料到 &lt;a href="https://aws.amazon.com/tw/s3/">AWS S3&lt;/a> 或其他 Storage 空間，除了上傳過程需要在 CLI 顯示目前進度，另外也需要將目前上傳的進度 (速度, 進度及剩餘時間) 都上傳到 API Server，最後在 Web UI 介面透過 &lt;a href="https://www.apollographql.com/docs/react/data/subscriptions/">GraphQL Subscription&lt;/a> 讓使用者可以即時看到上傳進度數據。&lt;/p>
&lt;p>而 CLI 上傳進度部分，我們選用了一套開源套件 &lt;a href="https://github.com/cheggaaa/pb">cheggaaa/pb&lt;/a>，相信有在寫 &lt;a href="https://golang.org">Go 語言&lt;/a>都並不會陌生。而此套件雖然可以幫助在 Terminal 顯示進度條，但是有些接口是沒有提供的，像是即時速度，上傳進度及剩餘時間。本篇教大家如何實作這些數據，及分享過程會遇到相關問題。&lt;/p></description></item><item><title>[Go 教學] 什麼是 graceful shutdown?</title><link>https://blog.wu-boy.com/2020/02/what-is-graceful-shutdown-in-golang/</link><pubDate>Sat, 08 Feb 2020 03:29:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2020/02/what-is-graceful-shutdown-in-golang/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" title="golang logo">&lt;img src="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" alt="golang logo" title="golang logo">&lt;/a>&lt;/p>
&lt;p>我們該如何升級 Web 服務，你會說很簡單啊，只要關閉服務，上程式碼，再開啟服務即可，可是很多時候開發者可能沒有想到現在服務上面是否有正在處理的資料，像是購物車交易？也或者是說背景有正在處理重要的事情，如果強制關閉服務，就會造成下次啟動時會有一些資料上的差異，那該如何優雅地關閉服務，這就是本篇的重點了。底下先透過簡單的 gin http 服務範例介紹簡單的 web 服務&lt;/p></description></item></channel></rss>