<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drone.io on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/drone.io/</link><description>Recent content in Drone.io on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Mon, 19 Nov 2018 02:26:03 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/drone.io/index.xml" rel="self" type="application/rss+xml"/><item><title>開源專案 Drone 推出 1.0.0 RC1 版本</title><link>https://blog.wu-boy.com/2018/11/drone-release-1-0-0-rc1/</link><pubDate>Mon, 19 Nov 2018 02:26:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2018/11/drone-release-1-0-0-rc1/</guid><description>&lt;p>&lt;img src="https://i2.wp.com/farm5.staticflickr.com/4838/45223480124_b038fd86c1_z.jpg?w=840&amp;#038;ssl=1" alt="Screen Shot 2018-11-19 at 10.12.47 AM" data-recalc-dims="1" />&lt;/p>
&lt;p>終於看到 &lt;a href="https://github.com/drone/drone">Drone&lt;/a> 作者 &lt;a href="https://twitter.com/bradrydzewski">bradrydzewski&lt;/a> 在 &lt;a href="https://blog.drone.io/drone-1-release-candidate-1/">11/7 號釋出 1.0.0-RC1 版本&lt;/a>，此版本尚未開源在 GitHub 上面，所以目前只能透過 docker 方式來安裝。另外如果您正在用 0.8.x 版本的，不建議現在轉換到 1.0 版本，原因有幾點，第一作者尚未公開原始碼，第二現在公開也才一週而已，還有很多 bug 以及用法都沒有在線上 document 寫很清楚，第三就是作者尚未提供工具從 0.8.x 升級到 1.0.0 RC 版本。根據上述的原因，建議大家先不要轉換，當然如果團隊尚未導入 CI/CD 的話，我強烈建議使用 1.0.0 RC-1 版本。底下來看看 1.0.0 RC-1 做了哪些變動？&lt;/p></description></item><item><title>在本機端導入 Drone CLI 做專案測試</title><link>https://blog.wu-boy.com/2017/12/drone-cli-local-testing/</link><pubDate>Sun, 24 Dec 2017 03:16:33 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2017/12/drone-cli-local-testing/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/34957940160/in/dateposted-public/" title="drone-logo_512">&lt;img src="https://i1.wp.com/c1.staticflickr.com/5/4236/34957940160_435d83114f_z.jpg?w=840&amp;#038;ssl=1" alt="drone-logo_512" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/drone/drone">Drone&lt;/a> 是一套用 &lt;a href="https://golang.org">Go 語言&lt;/a>所撰寫的 CI/CD 開源專案，透過 &lt;code>.drone.yml&lt;/code> 檔案方式讓開發者可以自行撰寫測試及部署流程。大家一定會認為要先架設好 Drone 伺服器，才能透過 Git Push 方式來達到自動化測試及部署專案。現在跟大家介紹，如果你的團隊尚未架設 Drone 服務，但是又想要使用 Drone 透過 Yaml 方式所帶來的好處，很簡單，你只需要透過 Drone CLI 工具就可以完成，不需要架設任何一台 Drone 服務，只要學會 Yaml 方式如何撰寫，就可以透過 &lt;code>drone exec&lt;/code> 指令來完成。好處是寫完 .drone.yml 檔案，未來圖隊如果正式架設了 Drone 服務，就可以無痛升級，沒有的話，也可以透過 CLI 工具在公司專案內單獨使用，這比寫 docker-compose.yml 方式還要快很多。本篇會介紹使用 &lt;code>drone exec&lt;/code> 的小技巧。&lt;/p></description></item><item><title>Drone Secret 安全性管理</title><link>https://blog.wu-boy.com/2017/11/drone-secret-security/</link><pubDate>Mon, 20 Nov 2017 01:34:14 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2017/11/drone-secret-security/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/34957940160/in/dateposted-public/" title="drone-logo_512">&lt;img src="https://i1.wp.com/c1.staticflickr.com/5/4236/34957940160_435d83114f_z.jpg?w=840&amp;#038;ssl=1" alt="drone-logo_512" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/drone/drone">Drone&lt;/a> 是一套以 &lt;a href="https://www.docker.com/what-container">Docker 容器&lt;/a>技術為主的 &lt;a href="https://www.docker.com/use-cases/cicd">CI/CD&lt;/a> 開源專案，來聊聊 Drone 如何管理專案內的 Secret 資料，首先先來定義什麼是 Secret，舉個簡單例子，Drone 可以輕易完成基本打包+上傳到遠端伺服器，過程中一定會需要用到兩個 Plugin，就是 &lt;a href="https://github.com/appleboy/drone-scp">drone-scp&lt;/a> 及 &lt;a href="https://github.com/appleboy/drone-ssh">drone-ssh&lt;/a>，而使用這兩個 plugin 需要有一組 Password 或是一把金鑰 (Public Key Authentication)，在 Drone 可以透過後台 UI 介面將密碼或者是金鑰內容儲存在 Secret 設定頁面。預覽圖如下:&lt;/p>
&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/24659201508/in/dateposted-public/" title="Screen Shot 2017-11-20 at 9.10.10 AM">&lt;img src="https://i1.wp.com/farm5.staticflickr.com/4561/24659201508_1517253288_z.jpg?w=840&amp;#038;ssl=1" alt="Screen Shot 2017-11-20 at 9.10.10 AM" data-recalc-dims="1" />&lt;/a>&lt;/p></description></item><item><title>Drone CI Server 搭配 Atlassian Bitbucket Server (前身 Stash)</title><link>https://blog.wu-boy.com/2016/09/drone-ci-server-integrate-atlassian-bitbucket-server/</link><pubDate>Tue, 13 Sep 2016 03:25:29 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/09/drone-ci-server-integrate-atlassian-bitbucket-server/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/29645454615/in/dateposted-public/" title="Screen Shot 2016-09-13 at 10.36.58 AM">&lt;img src="https://i2.wp.com/c8.staticflickr.com/9/8044/29645454615_79d329eacb_z.jpg?resize=640%2C361&amp;#038;ssl=1" alt="Screen Shot 2016-09-13 at 10.36.58 AM" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>目前團隊是使用 &lt;a href="https://www.atlassian.com/software/bitbucket/server">Atlassian Bitbucket&lt;/a> 搭配 &lt;a href="https://www.atlassian.com/software/bamboo">Bamboo&lt;/a>，雖然 Bamboo 搭配自家的 Bitbucket (前身是 Stash Server) 整合得相當不錯，但是個人覺得設定上蠻複雜的，所以才想測試看看其他家 CI Service 對團隊學習及設定上更容易。最近找到一套用 &lt;a href="https://golang.org/">Golang&lt;/a> 寫的 CI Server 就是 &lt;a href="https://drone.io/">Drone&lt;/a>，Drone &lt;a href="http://readme.drone.io/">線上文件&lt;/a>提供了 &lt;a href="https://github.com/">Github&lt;/a>, &lt;a href="https://about.gitlab.com/">Gitlab&lt;/a>, &lt;a href="https://gogs.io/">Gogs&lt;/a>, Bitbucket (Stash) 等整合。在整合 Drone 搭配 Bitbucket 時，文件寫得不是很清楚，尤其是在 Bitbucket 建立 Application Link 遇到許多問題，官方文件也沒寫得很清楚，故寫此篇記錄如何將 Drone 服務整合 Bitbucket 伺服器。&lt;/p></description></item><item><title>Drone.io 搭配 Ruby 環境測試</title><link>https://blog.wu-boy.com/2013/10/drone-io-with-runy-compass-setup/</link><pubDate>Thu, 17 Oct 2013 02:54:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/10/drone-io-with-runy-compass-setup/</guid><description>&lt;p>相信現在 &lt;a href="http://git-scm.com/" target="_blank">Git&lt;/a> 已經是大家共通的版本控制工具，每當專案有新的 commit，我們可以透過 &lt;a href="https://travis-ci.org/" target="_blank">Travis&lt;/a> 來幫忙做測試，但是 Travis 真的只有支援測試而已，如果測試成功想要進一步 Deploy 到任何機器或者是繼續做任何動作，這些都不支援的，那國外有些 Service 可以整合 &lt;a href="https://github.com/" target="_blank">Github&lt;/a> 或 &lt;a href="https://bitbucket.org/" target="_blank">Bitbucket&lt;/a> Project 幫忙做到自動測試及 Deploy，比較常見的就是 &lt;a href="https://www.codeship.io" target="_blank">Codeship&lt;/a>，這服務非常強大，整合了 &lt;a href="https://www.heroku.com/" target="_blank">Heroku&lt;/a>，&lt;a href="https://appengine.google.com/" target="_blank">App Engine&lt;/a>，&lt;a href="https://www.nodejitsu.com/" target="_blank">Nodejitsu&lt;/a> .. 等服務，Deploy 也支援 &lt;a href="https://github.com/fabric/fabric" target="_blank">Fabric&lt;/a>, &lt;a href="http://puppetlabs.com/" target="_blank">Puppet&lt;/a>, Shell script 等等，這家的收費是看每個月做了多少次編譯測試動作，最便宜的方案每個月 $9 美金，只能編譯 50 次。&lt;/p></description></item></channel></rss>