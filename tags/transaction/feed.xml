<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Transaction on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/transaction/</link><description>Recent content in Transaction on 小惡魔 - AppleBOY</description><generator>Hugo</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sat, 10 Mar 2018 08:26:38 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/transaction/feed.xml" rel="self" type="application/rss+xml"/><item><title>用 Go 語言實現單一或多重 Queue 搭配 optimistic concurrency</title><link>https://blog.wu-boy.com/2018/03/simple-queue-with-optimistic-concurrency-in-go/</link><pubDate>Sat, 10 Mar 2018 08:26:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2018/03/simple-queue-with-optimistic-concurrency-in-go/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/25850362427/in/dateposted-public/" title="Screen Shot 2018-03-10 at 3.22.59 PM">&lt;img src="https://i2.wp.com/farm5.staticflickr.com/4781/25850362427_fb8199a5ee_z.jpg?w=840&amp;#038;ssl=1" alt="Screen Shot 2018-03-10 at 3.22.59 PM" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>本篇教學會著重在如何使用 Go 語言的 &lt;a href="https://gobyexample.com/goroutines">goroutine&lt;/a> 及 &lt;a href="https://gobyexample.com/channels">channel&lt;/a>。&lt;a href="https://www.mongodb.com/">MongoDB&lt;/a> 是一套具有高效能讀寫的 NoSQL 資料庫，但是不像傳統關連式資料庫，有非常好用的 Transaction 交易模式，而在 MongoDB 也可以透過 &lt;a href="https://docs.mongodb.com/manual/tutorial/perform-two-phase-commits/">Two Phase Commits&lt;/a> 來達成交易功能，大家可以先打開文件看看，非常冗長，工程師需要花很多時間閱讀文件並且實現出來。而在 &lt;a href="https://golang.org">Go 語言&lt;/a>內，我們可以在 Single Thread 內同一時間點讀寫存取同一筆資料庫來解決此問題。此篇作法只適合運作在單一 application，如果是執行多個 application 則需要透過其他方式來解決，像是 &lt;a href="https://en.wikipedia.org/wiki/Optimistic_concurrency_control">Optimistic concurrency control&lt;/a>。&lt;/p></description></item></channel></rss>