<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git branch on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/git-branch/</link><description>Recent content in git branch on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Thu, 28 Apr 2016 02:30:06 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/git-branch/feed.xml" rel="self" type="application/rss+xml"/><item><title>Git Flow 與團隊合作</title><link>https://blog.wu-boy.com/2016/04/git-flow-tips/</link><pubDate>Thu, 28 Apr 2016 02:30:06 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/04/git-flow-tips/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/26620468361/in/dateposted-public/" title="branching-illustration@2x">&lt;img src="https://i2.wp.com/farm2.staticflickr.com/1584/26620468361_7fe972425a_z.jpg?resize=640%2C413&amp;#038;ssl=1" alt="branching-illustration@2x" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>本月最後一篇投影片來介紹 &lt;a href="https://git-scm.com/">Git&lt;/a> Flow 流程該如何導入團隊，之前寫過一篇 &lt;a href="https://blog.wu-boy.com/2011/03/git-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6-branch-model-%E5%88%86%E6%94%AF%E6%A8%A1%E7%B5%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/">Git branch model&lt;/a> 文章，裡面提到該如何正確使用 branch，但是現在回想起來要導入團隊內真的是有點麻煩，也遇到蠻多問題的，後來最後只採用 &lt;a href="https://guides.github.com/introduction/flow/">Github Flow&lt;/a>，簡單又容易理解，如果開發者很常在 &lt;a href="https://github.com">Github&lt;/a> 活動，相信對於此方法並不會很陌生。&lt;/p></description></item><item><title>Git tips: 更改 commit log 作者</title><link>https://blog.wu-boy.com/2016/02/git-tips-blame-someone-else/</link><pubDate>Thu, 11 Feb 2016 16:11:43 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/02/git-tips-blame-someone-else/</guid><description>在 Github 上面看到這 git-blame-someone-else 專案，用來隨時修改 commit log 作者，也就是可以任意改 commit id 內的 `Author` 欄位資訊，作者也相當幽默，直接拿此 commit id 改成 Linux 作者 Linus Torvalds。
使用時機 大家會問到什麼時候才會用到需要修改 commit 作者，以我自己的狀況為例，在團隊內開發新功能會直接開新的 Branch 來開發，完成後會進行 code review，此時原開發者目前正在忙其他專案，其他團隊成員就必須幫忙修改原先 commit 內容，通常我是直接建議透過 `git reset &amp;ndash;soft HEAD^` 來更動原本 commit，而不是產生新的 commit，修改後作者就會變成自己，此時後這功能就派上用場了。
安裝方式 根據源專案是透過 root 權限，將執行檔丟到 `/usr/loca/bin` 目錄底下，但是我個人不建議用這方式，因為還需要 root 權限，要打密碼有點麻煩，我建議透過在家目錄建立 `bin` 目錄，並將此目錄加到 `$PATH` 變數內即可。
1 2 3 $ mkdir ~/bin $ wget https://raw.githubusercontent.com/jayphelps/git-blame-someone-else/master/git-blame-someone-else -O ~/bin/git-blame-someone-else $ chmod 755 ~/bin/git-blame-someone-else 修改 .bashrc，加入底下程式碼</description></item><item><title>Git 版本控制 branch model 分支模組基本介紹</title><link>https://blog.wu-boy.com/2011/03/git-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6-branch-model-%E5%88%86%E6%94%AF%E6%A8%A1%E7%B5%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</link><pubDate>Wed, 02 Mar 2011 04:45:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/03/git-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6-branch-model-%E5%88%86%E6%94%AF%E6%A8%A1%E7%B5%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</guid><description>&lt;p>我相信大家對於 &lt;a href="http://git-scm.com/">Git&lt;/a> 版本控制不陌生了，Git 最大強項就是可以任意建立 branch，讓您開發程式不需要擔心原本的程式碼會被動到，造成不知道該怎麼恢復原來的狀態。為了不影響產品發展，branch 對於大型工作團隊就顯得更重要了，今天在網路上看到一篇 &lt;a href="http://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model&lt;/a> 文章，裡面把 branch 使用方式寫得非常清楚，底下我會透過指令來說明如何使用簡單 branch 指令，當然請大家先去 &lt;a href="https://github.com/">github&lt;/a> 註冊申請帳號，如果不想申請帳號，也可以自己在 local 端去執行。&lt;/p>
&lt;p>底下所引用的圖片都是經由 &lt;a href="http://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model&lt;/a> 文章所提供。&lt;/p>
&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/5488984404/" title="git-flow by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm6.static.flickr.com/5293/5488984404_4f693eec32_z.jpg?resize=480%2C640&amp;#038;ssl=1" alt="git-flow" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>看到這張圖其實就說明了 branch 最重要的精神:『無限建立分支』，大家也不用害怕看不懂這張圖，底下說明 branch 分支狀況&lt;/p></description></item></channel></rss>