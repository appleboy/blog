<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GraphQL on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</title><link>https://demo.gh.wu-boy.com/tags/graphql/</link><description>Recent content in GraphQL on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sat, 06 Feb 2021 01:12:54 +0000</lastBuildDate><atom:link href="https://demo.gh.wu-boy.com/tags/graphql/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 GraphQL Gateway 串接多個 Data Schema</title><link>https://demo.gh.wu-boy.com/2021/02/graphql-gateway-in-golang/</link><pubDate>Sat, 06 Feb 2021 01:12:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2021/02/graphql-gateway-in-golang/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/eWR5fi9ipIuscey-E940I6fhwU5ZySehbItzPLyPVchJxBlq8N1uXT-psLHdX_wV6xojac3_EeCFZH6vs6C1R910vzDV1mY2uOo33so6QqpWgNqbDjGZPB6ar2NwspITQ7paTfjqSo8=w1920-h1080" title="infra">&lt;img src="https://lh3.googleusercontent.com/eWR5fi9ipIuscey-E940I6fhwU5ZySehbItzPLyPVchJxBlq8N1uXT-psLHdX_wV6xojac3_EeCFZH6vs6C1R910vzDV1mY2uOo33so6QqpWgNqbDjGZPB6ar2NwspITQ7paTfjqSo8=w1920-h1080" alt="infra" title="infra">&lt;/a>&lt;/p>
&lt;p>不久之前寫過一篇『&lt;a href="https://blog.wu-boy.com/2020/04/switch-graphql-go-to-gqlgen-in-golang/">從 graphql-go 轉換到 gqlgen&lt;/a>』，目前團隊舊有的專案還是繼續用 &lt;a href="https://github.com/graphql-go/graphql">graphql-go&lt;/a> 來撰寫，不過之後需求量越來越大，維護 graphql-go 就越來越困難，故有在想怎麼把 &lt;a href="https://gqlgen.com/">gqlgen&lt;/a> 跟 graphql-go 相容在一起，那就是把這兩個套件想成不同的服務，再透過 Gateway 方式完成 &lt;a href="https://principledgraphql.com/integrity#1-one-graph">single data graph&lt;/a>。至於怎麼選擇 GraphQL Gateway 套件，最容易的方式就是使用 &lt;a href="https://www.apollographql.com/docs/federation/gateway/">@apollo/gateway&lt;/a>，但是由於個人比較偏好 &lt;a href="https://golang.org">Go 語言&lt;/a>的解決方案，就稍微找看看有無人用 Go 實現了 Gateway，後來找到 &lt;a href="https://github.com/nautilus/gateway">nautilus/gateway&lt;/a>，官方有&lt;a href="https://gateway.nautilus.dev/">提供文件&lt;/a>以及&lt;a href="https://medium.com/@aaivazis/a-guide-to-schema-federation-part-1-995b639ac035">教學 Blog&lt;/a> 可以供開發者參考。底下會教大家使用 nautilus/gateway 將兩個不同的服務串接在一起。&lt;/p></description></item><item><title>為什麼要學 GraphQL?</title><link>https://demo.gh.wu-boy.com/2020/06/why-we-need-to-learn-graphql/</link><pubDate>Sat, 20 Jun 2020 04:57:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2020/06/why-we-need-to-learn-graphql/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/2N2CsbTrA9I78S376IqY4LYiw02t8a6xNwO96lZG3CAENy4bSX8dRFrdFYxQnmIesEjLBQoG1tccIjKF944I7M91-POoYrHhHOS6kgiuKt39QuTI5zZ9NSAjbCrQYmktjct3YZfiJ4I=w1920-h1080">&lt;img src="https://lh3.googleusercontent.com/2N2CsbTrA9I78S376IqY4LYiw02t8a6xNwO96lZG3CAENy4bSX8dRFrdFYxQnmIesEjLBQoG1tccIjKF944I7M91-POoYrHhHOS6kgiuKt39QuTI5zZ9NSAjbCrQYmktjct3YZfiJ4I=w1920-h1080" alt="">&lt;/a>&lt;/p>
&lt;p>身為網站工程師，您不能不知道什麼是 &lt;a href="https://graphql.org/">GraphQL&lt;/a>，這是一個前端跟後端溝通的 API Query 語法，大幅改善了前後端的合作模式，這篇會跟大家介紹為什麼麼要學 GraphQL，以及整理出三大 GraphQL 優勢，讓大家了解跟傳統 RESTful API 有什麼不同。當然不是叫開發者捨棄 RESTful API，而是根據專案的不同，來決定不同的技術 Stack。像是服務跟服務之前您說要用 GraphQL，肯定被打槍，而是要用更輕量的 RESTful API 或 &lt;a href="https://grpc.io/">gRPC&lt;/a>。好了，底下來說明三點 GraphQL 的優勢。&lt;/p></description></item><item><title>[Go 語言] 從 graphql-go 轉換到 gqlgen</title><link>https://demo.gh.wu-boy.com/2020/04/switch-graphql-go-to-gqlgen-in-golang/</link><pubDate>Thu, 16 Apr 2020 07:05:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2020/04/switch-graphql-go-to-gqlgen-in-golang/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" title="golang logo">&lt;img src="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" alt="golang logo" title="golang logo">&lt;/a>&lt;/p>
&lt;p>相信各位開發者對於 &lt;a href="https://graphql.org/">GraphQL&lt;/a> 帶來的好處已經非常清楚，如果對 GraphQL 很陌生的朋友們，可以直接參考之前作者寫的一篇『&lt;a href="https://blog.wu-boy.com/2018/07/graphql-in-go/">Go 語言實戰 GraphQL&lt;/a>』，內容會講到用 &lt;a href="https://golang.org">Go 語言&lt;/a>實戰 GraphQL 架構，教開發者如何撰寫 GraphQL 測試及一些開發小技巧，不過內容都是以 &lt;a href="https://github.com/graphql-go/graphql">graphql-go&lt;/a> 框架為主。而本篇主題會講為什麼我從 &lt;a href="https://github.com/graphql-go/graphql">graphql-go&lt;/a> 框架轉換到 &lt;a href="https://gqlgen.com/">gqlgen&lt;/a>。&lt;/p></description></item><item><title>Go 語言的 graphQL-go 套件正式支援 Concurrent Resolvers</title><link>https://demo.gh.wu-boy.com/2018/09/graphql-go-library-support-concurrent-resolvers/</link><pubDate>Sun, 16 Sep 2018 03:35:36 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2018/09/graphql-go-library-support-concurrent-resolvers/</guid><description>要在 Go 語言寫 graphQL，大家一定對 graphql-go 不陌生，討論度最高的套件，但是我先說，雖然討論度是最高，但是效能是最差的，如果大家很要求效能，可以先參考此專案，裡面有目前 Go 語言的 graphQL 套件比較效能，有機會在寫另外一篇介紹。最近 graphql-go 的作者把 Concurrent Resolvers 的解法寫了一篇 Issue 來討論，最終採用了 Resolver returns a Thunk 方式來解決 Concurrent 問題，這個 PR 沒有用到額外的 goroutines，使用方式也最簡單
1 2 3 4 5 6 7 8 9 10 11 12 13 14 &amp;#34;pullRequests&amp;#34;: &amp;amp;graphql.Field{ Type: graphql.NewList(PullRequestType), Resolve: func(p graphql.ResolveParams) (interface{}, error) { ch := make(chan []PullRequest) // Concurrent work via Goroutines. go func() { // Async work to obtain pullRequests.</description></item><item><title>Go 語言實戰 GraphQL</title><link>https://demo.gh.wu-boy.com/2018/07/graphql-in-go/</link><pubDate>Thu, 19 Jul 2018 01:12:07 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2018/07/graphql-in-go/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/41690303080/in/dateposted-public/" title="Screen Shot 2018-07-19 at 8.58.48 AM">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1769/41690303080_3d1a278b8a_z.jpg?w=840&amp;#038;ssl=1" alt="Screen Shot 2018-07-19 at 8.58.48 AM" data-recalc-dims="1" />&lt;/a> 很高興能在 &lt;a href="http://modernweb.tw/">2018 ModernWeb&lt;/a> 研討會跟大家分享用 &lt;a href="https://golang.org">Go 語言&lt;/a>實戰 &lt;a href="https://graphql.org/">GraphQL&lt;/a>，相信大家都知道 GraphQL 帶給前端後端及手機開發者很多好處，強烈推薦大家來嘗試看看。這場議程最主要是推廣 GraphQL 及 Go 語言。底下有投影片大家可以參考看看。&lt;/p></description></item></channel></rss>