<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>profiling on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/profiling/</link><description>Recent content in profiling on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sun, 27 Feb 2022 09:07:55 +0800</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/profiling/feed.xml" rel="self" type="application/rss+xml"/><item><title>使用 pyroscope adhoc 加速找到效能瓶頸</title><link>https://blog.wu-boy.com/2022/02/pyroscope-adhoc-profiling-in-golang/</link><pubDate>Sun, 27 Feb 2022 09:07:55 +0800</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2022/02/pyroscope-adhoc-profiling-in-golang/</guid><description>&lt;p>&lt;img src="https://i.imgur.com/KMl96Ks.png" alt="pyroscope profiling">&lt;/p>
&lt;p>大家在開發軟體時，會快速迭代專案時程跟需求，功能越多，系統就會開始出現效能上的瓶頸，而最快的解決方式就是先垂直擴展，把 CPU 跟記憶體先往上加，但是這是治標不治本，所以之前有推薦大家一套如何在服務執行時，快速找到哪個地方執行較慢，請參考之前的文章『&lt;a href="https://blog.wu-boy.com/2021/03/debug-performance-issues-using-pyroscope/">即時效能分析工具 Pyroscope&lt;/a>』，&lt;a href="https://pyroscope.io">Pyroscope&lt;/a> 目前支援了很多語言，像是 Go, Python, Java, Ruby, Rust, PHP 及 .Net，如果你想要快速在本地端找到效能瓶頸，請繼續將本篇看完。底下會用 &lt;a href="https://go.dev">Go 語言&lt;/a>實際範例教大家。&lt;/p></description></item></channel></rss>