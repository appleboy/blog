<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Travis on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/travis/</link><description>Recent content in Travis on 小惡魔 - AppleBOY</description><generator>Hugo</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sun, 20 Oct 2019 02:27:53 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/travis/feed.xml" rel="self" type="application/rss+xml"/><item><title>Drone CI/CD 支援 Auto cancellation 機制</title><link>https://blog.wu-boy.com/2019/10/auto-cancellation-in-drone-ci-cd/</link><pubDate>Sun, 20 Oct 2019 02:27:53 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2019/10/auto-cancellation-in-drone-ci-cd/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/RK0neP9RNsD1P5N5zGL0BqgvUFnDDb1YuzyIUKLlD01ejmM87JNaU29bweqw_CyD0v39FYfi5wAh6wCls1CIxaMMiOdHX6WQ4p7hFU5Qlt052uya0NZ6pjJJAA24rfhbpDFDwKmivfU=w1920-h1080">&lt;img src="https://lh3.googleusercontent.com/RK0neP9RNsD1P5N5zGL0BqgvUFnDDb1YuzyIUKLlD01ejmM87JNaU29bweqw_CyD0v39FYfi5wAh6wCls1CIxaMMiOdHX6WQ4p7hFU5Qlt052uya0NZ6pjJJAA24rfhbpDFDwKmivfU=w1920-h1080" alt="">&lt;/a>&lt;/p>
&lt;p>大家一定會問什麼是『Auto cancellation』呢？中文翻作自動取消，這機制會用在 CI/CD 的哪個流程或步驟呢？我們先來探討一個情境，不知道大家有無遇過在同一個 branch 陸續發了 3 個 commit，會發現在 CI/CD 會依序啟動 3 個 Job 來跑這 3 個 commit，假設您有設定同時間只能跑一個 Job，這樣最早的 commit 會先開始啟動，後面兩個 commit 則會處於 &lt;code>Penging&lt;/code> 的狀態，等到第一個 Job 完成後，後面兩個才會繼續執行。&lt;/p></description></item><item><title>Go Module 導入到專案內且搭配 Travis CI 或 Drone 工具</title><link>https://blog.wu-boy.com/2018/12/go-module-integrate-with-travis-or-drone/</link><pubDate>Sun, 30 Dec 2018 03:07:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2018/12/go-module-integrate-with-travis-or-drone/</guid><description>&lt;p>&lt;a href="https://photos.google.com/share/AF1QipPZ8MkcLAazbfRWwBrT1CQpipCL8N_1uAcYosJmJ-o6du2XRRHNEokVarxey5Bp8w?key=clctLU9JYVMzcEdHYWR2dUlVTVZ6YnZUUjlYRG9B&amp;amp;source=ctrlq.org">&lt;img src="https://lh3.googleusercontent.com/Q5CP9S-xtRHxnDRvxDpWWkvBsEVw5C5uRyb5EiBh-UpYkrp_dkZp_oN8yi1WtqwruhSgnwNMB5QjJPxO94ABjG9oLBqmcRjlouNTNmrChIWbQcsAAbuV9eWB1wbsK-x-OY6iolb5ahc=w2400" alt="">&lt;/a>&lt;/p>
&lt;p>相信各位 &lt;a href="http://golang.org">Go 語言&lt;/a>開發者陸陸續續都將專案從各種 &lt;a href="https://github.com/golang/go/wiki/PackageManagementTools">Vendor 工具&lt;/a>轉換到 &lt;a href="https://github.com/golang/go/wiki/Modules">Go Module&lt;/a>，本篇會帶大家一步一步從舊專案轉換到 Go Module，或是該如何導入新專案，最後會結合 CI/CD 著名的兩套工具 &lt;a href="https://travis-ci.org/">Travis&lt;/a> 或 &lt;a href="https://drone.io/">Drone&lt;/a> 搭配 Go Module 測試。&lt;/p></description></item><item><title>在 Travis 實現 Docker Cache</title><link>https://blog.wu-boy.com/2016/09/docker-cache-on-travis/</link><pubDate>Sat, 17 Sep 2016 08:25:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/09/docker-cache-on-travis/</guid><description>&lt;p>&lt;a href="https://i1.wp.com/farm2.staticflickr.com/1600/25660808075_c8190290f7_c.jpg?ssl=1">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1600/25660808075_c8190290f7_c.jpg?w=840&amp;#038;ssl=1" alt="" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>前一篇寫了『&lt;a href="https://blog.wu-boy.com/2016/09/upload-docker-image-to-registry-using-travis/">用 Travis 自動上傳 Docker Image&lt;/a>』，Travis 跑完測試成功後才自動編譯 Docker Image 並且上傳到 Docker Hub。在每次 commit 後，&lt;a href="https://travis-ci.com/">Travis&lt;/a> 執行 docker build 時間總是非常長，當然原因很多。如果選用的 Docker base image 非常肥，指令非常多，每次編譯都要重新下載及執行指令，所以執行時間就是這麼長。本篇就是想辦法減少 Travis 編譯 Image 時間，就像把 &lt;code>node_modules&lt;/code> 壓縮起來，下次執行測試前先解壓縮再安裝，可以大幅減少 npm install 時間(可以參考之前的『&lt;a href="https://blog.wu-boy.com/2016/07/speed-up-npm-install-command/">用一行指令加速 npm install&lt;/a>』)。這邊我們就需要用到 Travis 的 &lt;a href="https://docs.travis-ci.com/user/caching/">Cache 功能&lt;/a>。&lt;/p></description></item><item><title>用 Travis 自動上傳 Docker Image 到 Docker Registry</title><link>https://blog.wu-boy.com/2016/09/upload-docker-image-to-registry-using-travis/</link><pubDate>Sat, 17 Sep 2016 07:13:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/09/upload-docker-image-to-registry-using-travis/</guid><description>&lt;p>&lt;a href="https://i1.wp.com/farm2.staticflickr.com/1600/25660808075_c8190290f7_c.jpg?ssl=1">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1600/25660808075_c8190290f7_c.jpg?w=840&amp;#038;ssl=1" alt="" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>在今年七月寫了一篇『&lt;a href="https://blog.wu-boy.com/2016/07/upgrade-docker-and-docker-compose-on-travis/">在 Travis 升級 Docker 和 docker-compose 版本&lt;/a>』，就在上個月底 &lt;a href="https://travis-ci.org/">Travis&lt;/a> 終於將 &lt;a href="https://www.docker.com/">Docker&lt;/a> 預設版本換成 1.12.x 版本，並且將 &lt;a href="https://docs.docker.com/compose/">docker-compose&lt;/a> 也一併升級到 1.8.0，這樣就可以不用手動升級了。那這篇會紀錄如何用 Travis 自動編譯 Docker Image 並且上傳到 &lt;a href="https://hub.docker.com/">Docker Hub&lt;/a>。Docker Hub 提供兩種方式讓開發者上傳 Image，第一種是透過 Command line 下指令手動上傳，另外一種則是在 Docker Hub 後台指定 Dockerfile 路徑及需要執行編譯的分支，這樣只要 Push commit 到 &lt;a href="https://github.com/">Github&lt;/a>，Docker Hub 就會根據 &lt;a href="https://docs.docker.com/engine/reference/builder/">Dockerfile&lt;/a> 來自動編譯 Docker Image。本篇會介紹如何透過 Travis 服務來自動上傳 Dokcer Image，像是 Golang 的部屬方式通常是編譯出 Binary 執行檔後，將此執行檔加入 Image 最後才上傳。&lt;/p></description></item><item><title>在 Travis 升級 Docker 和 docker-compose 版本</title><link>https://blog.wu-boy.com/2016/07/upgrade-docker-and-docker-compose-on-travis/</link><pubDate>Mon, 25 Jul 2016 13:10:56 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/07/upgrade-docker-and-docker-compose-on-travis/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/25660808075/in/dateposted-public/" title="docker">&lt;img src="https://i2.wp.com/farm2.staticflickr.com/1600/25660808075_c8190290f7_z.jpg?resize=640%2C217&amp;#038;ssl=1" alt="docker" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://travis-ci.org/">Travis&lt;/a> 是在 &lt;a href="https://github.com/">Github&lt;/a> 上常用的整合測試服務，支援了各種程式語言 &lt;a href="https://golang.org/">Golang&lt;/a>, PHP, Node.js ..等測試及部署，也同時支援了一些常用 Service，像是 &lt;a href="https://www.docker.com/">Docker&lt;/a>, Redis 或 Database。這次來聊聊&lt;a href="https://docs.travis-ci.com/user/docker/">在 Travis 如何使用 Docker&lt;/a>，在 Travis 內建的 Docker 跟 &lt;a href="https://docs.docker.com/compose/">docker-compose&lt;/a> 版本都是非常舊，所以使用預設的 docker-compose 指令常常會出現 (詳細 build log 可以參考&lt;a href="https://travis-ci.org/appleboy/golang-testing/jobs/147125401">這裡&lt;/a>)&lt;/p></description></item></channel></rss>