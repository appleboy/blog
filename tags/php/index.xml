<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>php on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</title><link>https://blog.wu-boy.com/tags/php/</link><description>Recent content in php on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Tue, 26 Apr 2016 06:55:28 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>來聊聊 PHP &amp; JavaScript &amp; CSS 的 Coding Style</title><link>https://blog.wu-boy.com/2016/04/php-javascript-css-coding-style/</link><pubDate>Tue, 26 Apr 2016 06:55:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/04/php-javascript-css-coding-style/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/26625548056/in/dateposted-public/" title="Screen Shot 2016-04-20 at 11.47.45 PM">&lt;img src="https://i0.wp.com/farm2.staticflickr.com/1676/26625548056_192cb60246_z.jpg?resize=640%2C395&amp;#038;ssl=1" alt="Screen Shot 2016-04-20 at 11.47.45 PM" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>專案開始前，要決定好前端或後端各用什麼語言及制定符合團隊的 &lt;a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Coding_Style">Coding Style&lt;/a>，統一團隊 Style 是非常重要的，尤其是專案需要經過 Code Review 步驟，不要造成 Reviewer 困擾。底下寫了一份投影片介紹 &lt;a href="https://secure.php.net/">PHP&lt;/a> &amp;amp; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript&lt;/a> 及 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS&lt;/a> 的基本 Coding Style 及該如何透過工具來改善 Coding Style。&lt;/p></description></item><item><title>為什麼我選擇使用 Laravel Framework?</title><link>https://blog.wu-boy.com/2016/03/why-i-choose-laravel-framework/</link><pubDate>Wed, 09 Mar 2016 06:45:31 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/03/why-i-choose-laravel-framework/</guid><description>&lt;p>&lt;a href="https://i1.wp.com/farm2.staticflickr.com/1655/23493872563_4f01a9c336_o.png?ssl=1">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1655/23493872563_4f01a9c336_o.png?w=840&amp;#038;ssl=1" alt="" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>根據上次寫了一篇&lt;a href="https://blog.wu-boy.com/2016/01/how-to-choose-web-framework/">如何選擇 Web Framework&lt;/a>，本篇寫了為什麼我選擇 &lt;a href="https://laravel.com/">Laravel&lt;/a> 這套 PHP Framework。底下是對於 Laravel 我選擇的一些看法，大家可以參考看看。要選一套好的 frmaework 真不容易，要考慮團隊成員技能，及後續的教育訓練等 &amp;hellip;&lt;/p></description></item><item><title>Laravel 搭配 Google, Facebook, Twitter 第三方 OAuth 認證</title><link>https://blog.wu-boy.com/2016/01/laravel-socialite-with-google-facebook-twitter/</link><pubDate>Thu, 14 Jan 2016 14:53:27 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/01/laravel-socialite-with-google-facebook-twitter/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/23493872563/in/dateposted-public/" title="laravel">&lt;img src="https://i1.wp.com/farm2.staticflickr.com/1655/23493872563_4f01a9c336_o.png?resize=400%2C400&amp;#038;ssl=1" alt="laravel" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://laravel.com/">Laravel&lt;/a> 提供了 &lt;a href="https://github.com/laravel/socialite">Socialite&lt;/a> 套件讓開發者可以快速整合 Facebook, Twitter, &lt;a href="https://www.google.com">Google&lt;/a>, LinkedIn, GitHub and Bitbucket 等第三方服務的登入認證，我挑了大家最常使用的 Facebook, Twitter, Google 來整合，用 Google 跟 Twitter 需要注意一些小細節，首先是 Google 部分，如果大家去 &lt;a href="https://console.developers.google.com">Developer console&lt;/a> 把 Oauth Callback 寫完，注意的是，這樣是不夠的，要去把 &lt;code>Contacts API&lt;/code> 及 &lt;code>Google+ API&lt;/code> 啟用，才可以真正使用 Google OAuth 認證服務。&lt;/p></description></item><item><title>將 wordpress 強制使用 SSL 連線</title><link>https://blog.wu-boy.com/2015/12/force-https-connection-on-wordpress/</link><pubDate>Sat, 19 Dec 2015 10:03:17 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/12/force-https-connection-on-wordpress/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/23840721545/in/dateposted-public/" title="Letsencrypt">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5803/23840721545_e0350b687f.jpg?w=300&amp;#038;ssl=1" alt="Letsencrypt" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>繼上篇介紹 &lt;a href="https://blog.wu-boy.com/2015/12/letsencrypt-entering-public-beta-free-ssl/">Letsencrypt 開放申請免費 SSL 憑證&lt;/a>，就把我的 Blog 強制使用 https 連線，Wordpress 強制使用 SSL 連線有幾個步驟需要注意，底下會是搭配 Nginx 相關設定，建議如果有裝任何 Plugin，都先進去後台暫時關閉。Nginx 1.9.5 之後有把 &lt;a href="http://nginx.org/en/docs/http/ngx_http_v2_module.html">http2&lt;/a> 模組加入，所以本篇會是以設定 http2 為主，當然跟 &lt;a href="https://www.chromium.org/spdy/spdy-whitepaper">spdy&lt;/a> 設定一樣，只是換個名字而已。&lt;/p></description></item><item><title>PHP 7 vs HHVM Benchmark 比較</title><link>https://blog.wu-boy.com/2015/12/the-definitive-php-7-final-version-hhvm-benchmark/</link><pubDate>Wed, 09 Dec 2015 02:12:01 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/12/the-definitive-php-7-final-version-hhvm-benchmark/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6034284842/" title="php-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" alt="php-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>2015-12-03 &lt;a href="http://php.net">PHP&lt;/a> 終於釋出 &lt;a href="http://php.net/index.php#id2015-12-03-1">7.0 版本&lt;/a>，&lt;a href="https://kinsta.com">kinsta&lt;/a> 工程師馬上寫出一篇 &lt;a href="https://kinsta.com/blog/the-definitive-php-7-final-version-hhvm-benchmark/">PHP7 vs HHVM 效能比較文章&lt;/a>，直接先講結論，就是 HHVM 效能還是大於 PHP 7，所以 kinsta 最終還是採用 &lt;a href="http://hhvm.com/">HHVM&lt;/a> 來 Host &lt;a href="https://wordpress.com/">WordPress&lt;/a> 網站，文章內容都是以 CMS 平台做比較，而不是以各大 Framework 來比較，但是看結果來說，&lt;code>HHVM &amp;gt; PHP7 &amp;gt;&amp;gt; PHP 5&lt;/code>，所以建議可以升級到 PHP 7 或者是直接上 HHVM 也可以了。底下是 WordPress benchmark 比較圖。&lt;/p></description></item><item><title>Laravel 50 個小技巧 + Laravel 5.2 新功能</title><link>https://blog.wu-boy.com/2015/12/50-laravel-tricks-and-5-2-new-feature/</link><pubDate>Fri, 04 Dec 2015 15:14:25 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/12/50-laravel-tricks-and-5-2-new-feature/</guid><description>&lt;p>&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/23207680879/in/dateposted-public/" title="laravel">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5765/23207680879_9c86233e9b.jpg?resize=300%2C300&amp;#038;ssl=1" alt="laravel" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>在學習 &lt;a href="http://laravel.tw/">Laravel&lt;/a> 階段，一定會天天看 &lt;a href="http://laravel.tw/docs/5.1">Laravel Documentation&lt;/a>，但是有很多小技巧是在文件內沒寫出來的，網路上找到這篇 &lt;a href="https://speakerdeck.com/willroth/50-laravel-tricks-in-50-minutes">50 Laravel Tricks in 50 Minutes&lt;/a>，寫了 50 個 Laravel 小技巧，包含了 IoC Container, Blade, Eloquent, Middleware, Routing, Commands, Queues, Events, Caching 等模組。&lt;/p></description></item><item><title>Laravel Homestead 支援 MySQL 5.7 和 Node 5.0</title><link>https://blog.wu-boy.com/2015/11/laravel-homestead-support-mysql-5-7-and-node-5-0/</link><pubDate>Sat, 14 Nov 2015 06:43:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/11/laravel-homestead-support-mysql-5-7-and-node-5-0/</guid><description> 昨天半夜看到 Laravel News 發佈支援 MySQL 5.7 和 Node 5.0 的消息，作者已經將 Homestead Vagrant box 更新上最新版了，如果你是用 PHP7 版本，請更新到 0.1.1 (laravel/homestead-7 branch)，如果非用 PHP 5.7 請更新到 0.3.3 版本，此 Box 更新兩個項目，就是支援 MySQL 5.7 版本，及 NodeJS 5.0 版本，已經非常新的版號，透過底下指令就可以更新 Local 端的 Box Image:
$ vagrant box update MySQL 5.7 版本支援了 JSON Format 真是太令人振奮了，另外此 Box 也是為了將來要釋出 Laravel 5.2 版本搭配用。最後補上升級後版本截圖</description></item><item><title>PHP-FIG 新網站</title><link>https://blog.wu-boy.com/2015/10/php-fig-new-website/</link><pubDate>Thu, 29 Oct 2015 01:51:36 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/10/php-fig-new-website/</guid><description>PHP-FIG 終於通出新網站了，介面比上一版本還要清楚許多，首頁直接清楚列出三大標準參考 AUTOLOADING, INTERFACES, CODING STYLES，網站的 Souce Code 可以在 Github 上面找到，目前 FIG 只有釋出 PSR-0, PSR-1, PSR-2, PSR-3, PSR-4, PSR-7，其他有很多部分目前都在 Review 中，詳情可以參考 PHP Standards Recommendations，Coding Style 部分，我建議可以裝 PHP-CS-Fixer 搭配 SublimText 編輯器就可以自動幫你校正所有 PHP Source Code。新人建議可以先把 PSR-2 看完，這樣團隊 Coding Style 才能達到一致性。</description></item><item><title>Laravel Homestead 支援 PHP 7</title><link>https://blog.wu-boy.com/2015/10/laravel-homestead-support-php-7/</link><pubDate>Mon, 05 Oct 2015 12:34:25 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/10/laravel-homestead-support-php-7/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="//www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>很高興看到 &lt;a href="http://laravel.com">Laravel&lt;/a> 的 &lt;a href="http://laravel.com/docs/5.1/homestead">Homestead&lt;/a> 推出 PHP 7 的版本，假如您還在使用 PHP 5.x 的 homestead box，請參考本篇教學，或者是參考&lt;a href="http://laravel.com/docs/5.1/homestead#installation-and-setup">線上文件&lt;/a>來升級。底下是這次升級的兩個步驟，第一個就是重新下載新的 PHP-7 box 檔案，第二步驟修改 &lt;code>Homestead.yaml&lt;/code>設定檔，請參考如下：&lt;/p></description></item><item><title>Laravel 5.1 is released</title><link>https://blog.wu-boy.com/2015/06/laravel-5-1-is-released/</link><pubDate>Wed, 10 Jun 2015 01:38:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/06/laravel-5-1-is-released/</guid><description>&lt;p>&lt;img src="https://i2.wp.com/d1zj60nuin5mrx.cloudfront.net/media/2015/06/07203934/laravel-5.1-released.png?w=640&amp;#038;ssl=1" alt="" data-recalc-dims="1" />&lt;/p>
&lt;p>很高興昨天收到 &lt;a href="http://laravel.com/">Laravel&lt;/a> 釋出 5.1 版本，此版本在 Laravel 發展過程中第一個長期支援的版本，底下我們就來看看 Taylor Otwell 作者在此版本釋出有什麼新功能或變化。&lt;/p></description></item><item><title>CodeIgniter 3.0 Release 終於釋出啦</title><link>https://blog.wu-boy.com/2015/04/codeigniter-3-0-release/</link><pubDate>Wed, 01 Apr 2015 08:58:17 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/04/codeigniter-3-0-release/</guid><description>從 2.2.x 版本到現在的 3.0 Release，終於等到釋出大家所期待的 3.0，此版本跟 2.2.x 版本差距極大，修正很多 bugs 重構很多程式碼，官網列出底下重大修正，要嘗鮮的請直接下載吧
CodeIgniter 使用 MIT 版權宣告 重構各種 Database Driver library 支援 PDO 所有函數 重新撰寫 Session Library，支援 Native Session 重新撰寫 Encryption library 已加強單元測試部分，以及改善程式碼覆蓋率 官方建議使用 PHP 5.4 或更新版本，但是官方仍繼續支援 PHP 5.2.4 詳細資料，可以參考官方的 ChangeLog，如果要升級 CodeIgniter 2 到 3，請詳細參考升級文件。
ＰＳ：台灣官網部分近期內會修正</description></item><item><title>Debian 7.x Install PHP 5.5 或 5.6 版本</title><link>https://blog.wu-boy.com/2015/01/install-php-5-6-or-5-5-on-debian/</link><pubDate>Tue, 20 Jan 2015 05:06:10 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/01/install-php-5-6-or-5-5-on-debian/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/15703430593" title="screen by Bo-Yi Wu, on Flickr">&lt;img src="https://i1.wp.com/farm8.staticflickr.com/7487/15703430593_ffa1a49a44.jpg?resize=500%2C305&amp;#038;ssl=1" alt="screen" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="https://www.debian.org/">Debian&lt;/a> 目前預設的 &lt;a href="http://php.net/">PHP&lt;/a> Stable 版本是 5.4.x，由於 Laravel PHP Framework 關係，所以希望升級到 PHP 5.5 或 5.6 版本，只要透過底下操作就可以直接裝 PHP 5.6 版本了&lt;/p></description></item><item><title>Parse 支援台灣繁體中文文件</title><link>https://blog.wu-boy.com/2014/12/parse-support-chinese-language-document/</link><pubDate>Fri, 12 Dec 2014 03:48:33 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/12/parse-support-chinese-language-document/</guid><description>Parse 月初宣佈將支援簡體、繁體、日文、韓文等語系的文件，為什麼宣佈此消息呢？其實原因最大就是在 Parse 內部統計，全世界亞洲區的流量成長率高達 90 ％，加上全球 15 個最大用戶內，亞洲區就佔了六個 India, Japan, Australia, China, Taiwan, Korea。沒看錯，台灣也是榜上有名。雖然不知道台灣有哪些網站用到了 Parse，我自己最主要用 Parse 的原因就是 Push Notification，公司就不用架設兩套伺服器 Apple 或 Google GCM。Parse 提供了 JavaScript, PHP SDK, .NET SDK 等。台灣開發者可以直接線上看繁體中文文件了。</description></item><item><title>加速 PHP Composer 執行效率</title><link>https://blog.wu-boy.com/2014/12/optimizing-php-composer-performance/</link><pubDate>Wed, 03 Dec 2014 05:33:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/12/optimizing-php-composer-performance/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/15747689648" title="logo-composer-transparent by Bo-Yi Wu, on Flickr">&lt;img src="https://i2.wp.com/farm9.staticflickr.com/8658/15747689648_a4e7ccfca9_m.jpg?resize=202%2C240&amp;#038;ssl=1" alt="logo-composer-transparent" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>早上剛起床就看到 &lt;a href="https://blog.gslin.org">DK&lt;/a> 發表一篇&lt;a href="https://blog.gslin.org/archives/2014/12/02/5383/%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A1%8C%E7%A8%8B%E5%BC%8F%E7%A2%BC%E8%AE%93-php-composer-%E6%95%88%E7%8E%87%E7%88%86%E5%A2%9E/">增加一行程式碼讓 PHP Composer 效率爆增&lt;/a>，&lt;a href="https://getcomposer.org/">Composer&lt;/a> 是 PHP 套件管理工具，現在各大 Framework 都用 Composer 管理套件相依性，但是最讓人擔憂的是，每次執行 &lt;code>composer install&lt;/code> 或 update 的時候，機器就會開始哀號，然後等了很久指令才執行完成。今天看到 &lt;a href="http://github.com">Github&lt;/a> 上 Composer 為了改善執行效率及時間&lt;a href="https://github.com/composer/composer/commit/ac676f47f7bbc619678a29deae097b6b0710b799">就把 gc disabled&lt;/a>。這 commit 引發了很多人迴響，超多搞笑留言圖片。底下有兩種方式可以加速 Composer 執行效率&lt;/p></description></item><item><title>CodeIgniter 終於找到新東家 British Columbia Institute of Technology 英屬哥倫比亞理工學院</title><link>https://blog.wu-boy.com/2014/10/codeigniter-has-a-new-home/</link><pubDate>Tue, 07 Oct 2014 06:01:19 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/10/codeigniter-has-a-new-home/</guid><description>自從去年 CodeIgniter 宣佈要開始找尋新東家，我就很期待下一個新東家會是誰，終於在今天公佈了新東家 British Columbia Institute of Technology 英屬哥倫比亞理工學院 (BCIT)，官方也正式公佈一篇 Your Favorite PHP Framework, CodeIgniter, Has a New Home，去年到現在 EllisLab 就收到大量的候選人信件，但是困難的就是要從一堆候選人中選出一位最適合 CodeIgniter 新雇主，最後決定人選就是 BCIT，BCIT 是一間理工學院學校，裡面有超過 4 萬 8 千名學生，最重要的是，每年學校都會培養 150 名 CodeIgniter 學生，導入這套 PHP Framework 到業界。
最後會由該學校的 James Parry 擔任 CodeIgniter Project Leader，並且由每年訓練優秀的學生加入此 Project 並且持續貢獻原始碼。看到這裡應該很興奮，因為對於 CodeIgniter 3.0 看起來應該不久之後就可以問世了。新的 Repo 網址也變成
https://github.com/bcit-ci/CodeIgniter</description></item><item><title>Laravel Homestead 開始支援 HHVM</title><link>https://blog.wu-boy.com/2014/09/laravel-homestead-support-hhvm/</link><pubDate>Thu, 11 Sep 2014 03:13:01 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/09/laravel-homestead-support-hhvm/</guid><description>在 Laravel News 看到這篇 Laravel Homestead – Now with HHVM，也就是官方 Homestead 開始支援 HHVM，現在可以直接透過底下指令升級 Box:
$ vagrant box update 版本會從 0.1.8 升級到 0.1.9，升級過程需要一段時間，最後要啟用 HHVM 服務，請在 Homestead.yaml 加入底下設定
sites: - map: homestead.app to: /home/vagrant/Code/Laravel/public hhvm: true 不用煩惱架設 HHVM 環境了，對開發者真是一大幅音。</description></item><item><title>快速安裝 Laravel Homestead 環境</title><link>https://blog.wu-boy.com/2014/09/get-homestead-vagrant-vm-running/</link><pubDate>Fri, 05 Sep 2014 03:56:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/09/get-homestead-vagrant-vm-running/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在看本篇安裝教學前可以參考翻譯完成的 &lt;a href="http://laravel.tw/docs/homestead">Laravel Homestead&lt;/a>，此篇會紀錄如何在 Ubuntu 底下快速架設 &lt;a href="http://Laravel.tw">Laravel&lt;/a> 環境，對於一般新手而言，剛開始安裝 Laravel 開發環境一定會遇到許多問題，為了解決開發環境，Laravel 推出 Homestead 搭配 Vagrant Box，讓初學者不用為環境問題而煩惱，減少浪費時間在架設 Laravel。簡單來說 Laravel Homestead = Vagrant + &lt;a href="https://www.virtualbox.org/">VirtualBox&lt;/a> + Laravel 安裝包。底下簡單幾個步驟就可以完成 Laravel 開發環境。&lt;/p></description></item><item><title>Laravel 不同開發環境設定</title><link>https://blog.wu-boy.com/2014/08/laravel-application-environments-without-hostnames/</link><pubDate>Tue, 12 Aug 2014 02:09:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/08/laravel-application-environments-without-hostnames/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://laravel.com/">Laravel&lt;/a> 本來預設的 &lt;a href="http://laravel.com/docs/configuration#environment-configuration">Environment Configuration&lt;/a> 是透過 Domain Name 來區分，程式碼 &lt;code>bootstrap/start.php&lt;/code> 如下&lt;/p>
&lt;div>
&lt;pre class="brush: php; title: ; notranslate" title="">&lt;?php
$env = $app->detectEnvironment(array(
'local' => array('your-machine-name'),
));&lt;/pre>
&lt;/div>
&lt;p>我們可以根據上述程式碼產生不同的開發環境，像是 develop, production, staging… 等，根據不同的 Domain 給予不同的環境設定檔。但是根據使用 Domain Name 來區分各種不同的環境換產生兩種問題&lt;/p></description></item><item><title>升級 PHP Facebook SDK 到 4.0.x 版本</title><link>https://blog.wu-boy.com/2014/07/upgrade-php-facebook-sdk-to-4-0-x/</link><pubDate>Thu, 24 Jul 2014 09:11:12 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/07/upgrade-php-facebook-sdk-to-4-0-x/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div>
&lt;p>最近幫公司建立 Staging 環境，申請了新的 &lt;a href="https://developers.facebook.com">FB App&lt;/a> 來，用原本 &lt;a href="https://github.com/facebook/facebook-php-sdk">Facebook v3.2.3 SDK&lt;/a> 發現已經不能 work 了，去翻了 &lt;a href="https://developers.facebook.com/docs/apps/changelog">Facebook Platform Changelog&lt;/a>，看到今年 4 月 30 號以後申請的 App 會強制走 v2.0 Auth 機制，所以原本用 php sdk 3.2.3 版本的話，完全無法呼叫 Auth 2.0 API，導致整個網站爛掉，當然線上的網站是不會隨意換 App ID 及 secret，免得怎麼爆掉的都不知道。這次來教學在 CodeIgniter 轉換 PHP Facebook SDK，可以直接參考&lt;a href="https://developers.facebook.com/docs/php/gettingstarted/4.0.0">官方 4.0.0 的教學&lt;/a>，原本 3.2.3 版本直接下載程式碼，放到 library 目錄，直接 include 就可以取得 Facebook 個人資料，4.0.0 版本以後，請先確認系統是否升級為 PHP 5.4 版本以上，並且支援 &lt;a href="https://getcomposer.org/">Composer&lt;/a> 安裝，當然如果不用 Composer 也可以，只是要 include 很多檔案，真的比較麻煩。&lt;/p></description></item><item><title>Ngnix 搭配 PHP-FPM 噴 php5-fpm.sock failed (13: Permission denied)</title><link>https://blog.wu-boy.com/2014/06/ngnix-php5-fpm-sock-failed-permission-denied/</link><pubDate>Wed, 25 Jun 2014 02:43:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/06/ngnix-php5-fpm-sock-failed-permission-denied/</guid><description>Nginx 搭配 PHP-FPM 已經是架設 PHP 伺服器基本入門款了，這次升級 CentOS 機器完後，發現 Log 一直噴出底下訊息
nginx error connect to php5-fpm.sock failed (13: Permission denied) 透過 Stackoverflow 查到這篇解答 nginx error connect to php5-fpm.sock failed (13: Permission denied)，裡面提到兩種作法，其中一解法是直接修改 /var/run/php5-fpm.sock 為 666，讓其他使用者可以直接存取此檔案，但是此作法在下次重新開機後一樣會出現同問題，最終解法請修改 /etc/php-fpm.d/www.conf 如果是搭配 Nginx 請使用底下設定
user = nginx group = nginx ; Set permissions for unix socket, if one is used. In Linux, read/write ; permissions must be set in order to allow connections from a web server.</description></item><item><title>Laravel 搭配 Memcached Cross Domain Session</title><link>https://blog.wu-boy.com/2014/02/laravel-memcached-cross-domain-session/</link><pubDate>Mon, 24 Feb 2014 07:09:49 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/02/laravel-memcached-cross-domain-session/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://laravel.com/">Laravel&lt;/a> 提供了 &lt;code>file&lt;/code>、&lt;code>cookie&lt;/code>、&lt;code>database&lt;/code>、&lt;code>memcached&lt;/code>、&lt;code>array&lt;/code> 五種方式來存取 &lt;a href="http://laravel.com/docs/session">Session&lt;/a>，預設的使用方式會是 &lt;code>file&lt;/code> 存取，如果要跨 Domain 存取 Session 基本上只要設定 &lt;code>php.ini&lt;/code> 裡面的 Session 相關參數即可，請注意底下 3 個參數。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://tw1.php.net/manual/en/session.configuration.php#ini.session.save-path">session.save_handler&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tw1.php.net/manual/en/session.configuration.php#ini.session.save-handler">session.save_path&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tw1.php.net/manual/en/session.configuration.php#ini.session.cookie-domain">session.cookie_domain&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>PHP The Right Way 出電子書</title><link>https://blog.wu-boy.com/2014/02/php-the-right-way-best-practices/</link><pubDate>Mon, 03 Feb 2014 01:32:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/02/php-the-right-way-best-practices/</guid><description>最近看到前 CodeIgniter 及 FuelPHP 作者 Phil Sturgeon 和 PHP The Right Way 發起人 Josh Lockhart 合力推出電子書，目前一本定價為 4 塊美金，當然作者也不一定要使用者付錢，您可以直接線上看。這本線上 PDF 很適合丟給剛進來公司的新人，此新人當然對 PHP 有一定程度的了解，團隊內最重視的就是整個專案素質，也就是如果能達到多人維護同一個專案，讓其他人檢視的時候，不會覺得是好多人共同維護一個專案，也就是要求大家寫法一致 (Code Style Guide)。</description></item><item><title>增加 phpMyAdmin 登入時間</title><link>https://blog.wu-boy.com/2013/12/increase-phpmyadmin-login-time/</link><pubDate>Tue, 31 Dec 2013 07:19:47 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/12/increase-phpmyadmin-login-time/</guid><description>phpMyAdmin 是一套管理 MySQL 資料庫的 UI 介面工具，預設登入時間為 1440 秒，這時間是定義在 libraries/config.default.php 內，phpMyAdmin 也是透過 gc-maxlifetime 來決定 Session 存在與否，所以如果要增加登入時間，比如說設定一年 (3600 * 24 * 365) 好了，請按照底下設定
PHP 設定檔 如果是裝 php-fpm 請修改 /etc/php5/fpm/php.ini 路徑
1 2 3 ;After this number of seconds, stored data will be seen as \&amp;#39;garbage\&amp;#39; and ; cleaned up by the garbage collection process. ; http://php.net/session.gc-maxlifetime session.gc_maxlifetime = 315360000 重新啟動 php-fpm
1 $ /etc/init.d/php5-fpm restart phpMyAdmin 設定檔 修改 config.</description></item><item><title>CodeIgniter 初始化 Library 流程</title><link>https://blog.wu-boy.com/2013/12/codeigniter-load-library-process/</link><pubDate>Fri, 20 Dec 2013 15:52:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/12/codeigniter-load-library-process/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div>
&lt;p>好久沒寫 &lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a> 相關文章，這次看到在論壇有人發問 &lt;a href="http://www.codeigniter.org.tw/forum/viewtopic.php?f=6&amp;t=3885" target="_blank">application/libraries 優先權&lt;/a>，想說把整個 CodeIgniter 如何讀取 Library 的流程整個寫下來，其實也不會很難，但是就是要照著 CI 定義的規則來命名檔名以及 Class。假設要讀取 Email Library，我們可以透過底下方式讀取&lt;/p>
&lt;div>
&lt;pre class="brush: php; title: ; notranslate" title="">$this->load->library('email');&lt;/pre>
&lt;/div></description></item><item><title>2013 PHPConf Introduction to Gearman in PHP</title><link>https://blog.wu-boy.com/2013/10/2013-phpconf-introduction-to-gearman-in-php/</link><pubDate>Sat, 05 Oct 2013 06:21:21 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/10/2013-phpconf-introduction-to-gearman-in-php/</guid><description>今天 PHPConf 簡報檔，介紹 Gearman in PHP 應用，歡迎自取，有問題可以留言</description></item><item><title>CodeIgniter 尋找新東家</title><link>https://blog.wu-boy.com/2013/07/seeking-new-owner-for-codeigniter/</link><pubDate>Wed, 10 Jul 2013 07:13:47 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/07/seeking-new-owner-for-codeigniter/</guid><description>很高興看到 CodeIgniter 出了 2.1.4 版本了，距離上個版本大約 9 個月，但是這次的 Release 只針對 Security 做改善，可以參考 Change Log。然而在今天看到 Ellislab 宣佈找尋 CodeIgniter 新東家，也就是官網不再維護此 Project，希望有新的團隊或公司可以接手，繼續讓 CodeIgniter 發揚光大，在 GitHub 上的 PHP Language 排名上，CodeIgniter 幾乎榜上有名，討論活躍度也是非常高的，但是公司就是找不到任何 Business Model 來支撐整個 Project 維護成本。其實觀察幾年下來，本來寫 CodeIgniter 核心人物都漸漸不在了，像是 @Philsturgeon 自己創了 Fuel PHP Framework，現在似乎也沒在參與此 Project？CodeIgniter 最後都是由 @narfbg 來 maintain 以及開發新功能，世界各地的 Pull Request 也都是由他負責審核並且參與討論，但是一個人還是無法負擔這麼多事情阿，所以現在 CodeIgniter 3.0 還是生不出來。最後希望還是有人可以接手 CodeIgniter，很期待 3.0 出來的說，都已經做了一半以上了，不要放棄阿。</description></item><item><title>PHP 5.5.0 Release note: support Zend OPcache</title><link>https://blog.wu-boy.com/2013/06/php-5-5-0-release-zend-opcache/</link><pubDate>Tue, 25 Jun 2013 06:53:45 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/06/php-5-5-0-release-zend-opcache/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="php-logo by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/6034284842/">&lt;img alt="php-logo" src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://www.php.net/" target="_blank">PHP&lt;/a> 5.5.0 在上週 20 號正式 Release，也看到 PHP 官網終於改版了，新的版面看起來比較清爽，想嘗試新版面的朋友們，可以點選官網最上面鎖提示的 Bar，如果覺得新版面不是很好看，也可以切回去舊版。本篇來介紹 PHP 5.5.0 有哪些新 Feature。&lt;/p>
&lt;h3 id="新增-generators-and-coroutines-功能">新增 generators and coroutines 功能&lt;/h3>
&lt;p>&lt;a href="http://php.net/generators" target="_blank">Generators&lt;/a> 提供了最簡單的寫法來實做 iterators，而不需要實做 Class 去實做 Iterator 介面，generators function 就跟一般的 PHP function 一樣，只是多了 yield 這 keyword，簡單舉個例子&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">&lt;?php
function gen_one_to_three() {
for ($i = 1; $i &lt;= 3; $i++) {
// Note that $i is preserved between yields.
yield $i;
}
}
$generator = gen_one_to_three();
foreach ($generator as $value) {
echo "$value\n";
}
?>&lt;/pre></description></item><item><title>在 git Commit 之前檢查 PHP 是否有錯誤</title><link>https://blog.wu-boy.com/2013/02/git-hooks-parse-php-error-before-commit/</link><pubDate>Fri, 08 Feb 2013 07:12:00 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/02/git-hooks-parse-php-error-before-commit/</guid><description> 在 commit code 之前，程式設計師必須確保程式碼的正確性，包含不要放入 debug message 到 git server，寫了一個簡單的 pre-commit 程式，來確保 PHP 是否有 Parse error，或者是在寫 CoffeeScript 及 JavaScript 時，常常會用到 console.* 來當作中斷點或者是顯示變數資料，這也是需要盡量避免 commit 到伺服器，你可不想要長官 review 的時候看到這麼多 debug 訊息吧。這時候就是需要 git-hooks 的 **pre-commit** 幫忙檢查這些 Syntax 語法，可以直接參考我的 git-hooks 專案。安裝方式很簡單:
$ git clone https://github.com/appleboy/git-hooks.git
$ chmod +x bin/hooks.sh pre-commit
$ ./bin/hooks.sh your_project_path 如果使用 git commit 之前，就會檢查 .js、.coffee、.php 等副檔名。</description></item><item><title>CodeIgniter Error Handler 處理</title><link>https://blog.wu-boy.com/2013/02/codeigniter-error-handler/</link><pubDate>Fri, 01 Feb 2013 02:54:37 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/02/codeigniter-error-handler/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div>
&lt;p>&lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a> 在處理 PHP Error handler 是直接呼叫內建的 Exceptions Class 顯示在瀏覽器上，如果有打開 log，系統另外會紀錄在 &lt;strong>&lt;span style="color:green">application/logs&lt;/span>&lt;/strong> 目錄。這是 CodeIgniter 預設作法，但是我希望能把這些錯誤訊息都紀錄到 Database，相關 Notice, Error 訊息都一律寫到 DB 裡面，但是如果用 extend 系統內的 Exceptions 是完全做不到的，所以我寫了一個 Library 只要直接 include 系統就可以直接開始紀錄，因為在 PHP 你會遇到無數種 User experience，都會產生相關錯誤訊息，在產品上線都會將 &lt;strong>&lt;span style="color:red">display_errors&lt;/span>&lt;/strong> 設定為 0，不要讓使用者看到任何錯誤訊息，但是我們還是需要全部的錯誤訊息阿，底下來看看如何安裝 Log Library。&lt;/p>
&lt;h3 id="建立-log-table-可以直接參考">建立 log table 可以直接參考&lt;/h3>
&lt;p>&lt;a href="https://github.com/appleboy/CodeIgniter-Log-Library/blob/master/sql/mysql.sql" target="_blank">連結&lt;/a>，或者是複製底下資料貼到 phpMyAdmin。&lt;/p>
&lt;pre class="brush: sql; title: ; notranslate" title="">--
-- Table structure for table `logs`
--
DROP TABLE IF EXISTS `logs`;
CREATE TABLE IF NOT EXISTS `logs` (
`id` int(11) NOT NULL AUTO_INCREMENT,
`errno` int(2) NOT NULL,
`errtype` varchar(32) CHARACTER SET utf8 NOT NULL,
`errstr` text CHARACTER SET utf8 NOT NULL,
`errfile` varchar(255) CHARACTER SET utf8 NOT NULL,
`errline` int(4) NOT NULL,
`time` datetime NOT NULL,
PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;&lt;/pre></description></item><item><title>CodeIgniter 台灣官網原始碼釋出</title><link>https://blog.wu-boy.com/2013/01/taiwain-codeigniter-source-code-release/</link><pubDate>Sun, 20 Jan 2013 02:06:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/01/taiwain-codeigniter-source-code-release/</guid><description>2009 年開始接觸 CodeIgniter，拿到第1版原始碼來自 中國 CodeIgniter ，版本是很舊的 1.7.x 版本，目前官方已經是 2.1.3 版本，現在朝 3.0.x 版本邁進，這次有機會將整個原始碼改寫成 3.0.x develop 分支版本，也將整個官方 source code 分享出來，讓需要原始碼範例初學者可以參考，Source Code 已經放在 github 上面，由於是拿大陸那邊的原始碼，也許有些地方寫的不是很完整，歡迎大家 pull request。 台灣 CodeIgniter Source Code Github</description></item><item><title>PHPFog 即將關閉，請儘速轉移到 AppFog</title><link>https://blog.wu-boy.com/2012/12/phpfog-will-be-closed/</link><pubDate>Wed, 05 Dec 2012 02:19:33 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/12/phpfog-will-be-closed/</guid><description>在10月寫了一篇 PHP 免費雲端主機 PHPFog vs Pagoda vs AppFog 介紹，上個月很不幸接到 mail 通知，說在今年12月即將關閉 PHPFog，所以免費的服務會在12月21號全部斷線，所以官方寫了 如何轉移 PHPFog 到 AppFog，大家可以參考看看，話說自己把所有的服務都轉到 AWS EC2 上面了，因為在 PHPFog 遇到 Session 一直消失的 Issue，也沒辦法解決，如果有在用 PHPFog 服務，請儘快轉移。</description></item><item><title>2012 PHPConf RESTful API Design &amp; Implementation with CodeIgniter PHP Framework</title><link>https://blog.wu-boy.com/2012/11/2012-phpconf-restful-api-design-implementation-with-codeigniter-php-framework/</link><pubDate>Sat, 03 Nov 2012 06:21:40 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/11/2012-phpconf-restful-api-design-implementation-with-codeigniter-php-framework/</guid><description> 去年 PHPConf 介紹了 CodeIgniter PHP Framework，這次講如何在 CodeIgniter 底下設計 RESTFul API，其實主要介紹兩個 CodeIgniter 套件，第一個是 RESTFul Server 前面是 RESTFul Client，一個伺服器端，後面用來測試 (Unit Test)，底下是今年的 Slide，歡迎大家下載
RESTful API Design &amp; Implementation with CodeIgniter PHP Framework from Bo-Yi Wu</description></item><item><title>PHP 免費雲端主機 PHPFog vs Pagoda vs AppFog</title><link>https://blog.wu-boy.com/2012/10/php-cloud-hosting-phpfog-pagoda-appfog/</link><pubDate>Sat, 20 Oct 2012 02:35:52 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/10/php-cloud-hosting-phpfog-pagoda-appfog/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6034284842/" title="php-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" alt="php-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div> 今天筆者來介紹幾套目前免費的雲端虛擬主機服務，自從
&lt;p>&lt;a href="http://git-scm.com/" target="_blank">Git&lt;/a> 版本控制的出現後，大家可以發現，以往免費的虛擬主機搭配後台 Panel，這種模式已經不再看到，取代而之的就是用 Git 來管理程式碼，而不是用 FTP 上下傳方式了。筆者認為學會 Git，是一件非常重要的事情，這樣可以嘗試不同雲端服務，，像是 &lt;a href="https://phpfog.com/" target="_blank">PHPFog&lt;/a>，&lt;a href="https://pagodabox.com/" target="_blank">Pagoda Box&lt;/a>，&lt;a href="http://www.appfog.com/" target="_blank">AppFog&lt;/a> &amp;hellip;等。這次介紹的雲端主機服務不同於 &lt;a href="http://www.linode.com/" target="_blank">Linode VPS&lt;/a>，Linode 是可以拿到完整的虛擬主機權限，可以進行主機的效能優化，以及安裝合適的套件。&lt;/p></description></item><item><title>PHP MVC Framework 搭配 Nginx + PHP-FPM 設定檔</title><link>https://blog.wu-boy.com/2012/10/php-mvc-framework-nginx-php-fpm/</link><pubDate>Mon, 08 Oct 2012 12:03:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/10/php-mvc-framework-nginx-php-fpm/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div> 相信大家都知道
&lt;p>&lt;a href="http://nginx.com/" target="_blank">Nginx&lt;/a> 搭配 &lt;a href="http://php-fpm.org/" target="_blank">PHP-FPM&lt;/a> 用起來效能還不錯，這次來筆記如何設定 Nginx 去除 PHP MVC Framework 討厭的 index.php 字串，不管是 &lt;a href="http://laravel.com/" target="_blank">Laravel&lt;/a> 或 &lt;a href="http://codeigniter.org.tw" target="_blank">CodeIgniter&lt;/a> 教學文件都是在 &lt;a href="http://www.apache.org/" target="_blank">Apache&lt;/a> 設定 &lt;a href="http://en.wikipedia.org/wiki/Htaccess" target="_blank">.htaccess&lt;/a> 來達成 Cleaner URL，Apache 最大好處支援 .htaccess，但是 Nginx 也有強大的效能，此篇紀錄如何設定 Nginx 達成 &lt;a href="http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html" target="_blank">mod_rewrite&lt;/a> 效果。&lt;/p></description></item><item><title>[PHP] preg_replace 效能測試 (將兩個空白字元以上取代成一個)</title><link>https://blog.wu-boy.com/2012/09/php-preg_replace-performance/</link><pubDate>Fri, 21 Sep 2012 12:28:29 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/09/php-preg_replace-performance/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6034284842/" title="php-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" alt="php-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://php.net/manual/en/function.preg-replace.php" target="_blank">preg_replace&lt;/a> 可以使用正規語法來取代字串任何字元，，今天探討取代空白字元的效能，雖然這是個不起眼的效能評估，一般人不太會這樣去改，不過這是國外 PHP Framework 有人提出來修正的，經過許多人的測試一致同意。功能就是一篇文章內如果有多餘的空白能空取代成一個，一般人都會用 &lt;strong>&lt;span style="color:green">\s+&lt;/span>&lt;/strong> 正規語法，畢竟大家都知道 \s 代表單一空白或 \r 等符號，但是國外有人提出用 &lt;strong>&lt;span style="color:green">{2,}&lt;/span>&lt;/strong> 方式來取代空白。程式碼如下，大家可以測試看看。&lt;/p></description></item><item><title>簡易 PHP Excel Generator Library</title><link>https://blog.wu-boy.com/2012/09/a-simple-php-to-excel-conversion-library/</link><pubDate>Fri, 14 Sep 2012 12:47:15 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/09/a-simple-php-to-excel-conversion-library/</guid><description>因為專案需求，必須將資料庫資料輸出成簡易 Excel 檔案，如果要用 PHP 取裡 Excel 文件，我想大家首推一定是 PHPExcel，不管你要對 Excel 做任何處理都一定辦的到，但是專案只需要 generate excel 簡易表格出來，有需要這麼強大的 PHPExcel，網路上找到一個非常簡易的 Library 那就是 php-excel 作者似乎現在沒再更新了，不過已經夠專案使用了，PHP 程式碼也非常簡單。
How to use 程式碼很簡易 $header = array('編號', '姓名', '電話'); $body = array('1', '小惡魔', '0934353289'); $xls = new Excel_XML;
$xls-addRow($header);
$xls-addRow($body);
$xls-generateXML("test"); 或是將資料寫成多為陣列 $body = array(array('編號', '姓名', '電話'), array('1', '小惡魔', '0934353289')); $xls = new Excel_XML;
$xls-addArray($body);
$xls-generateXML("test"); 結論就是殺雞焉用牛刀，就這個簡易 Library 就對了。�</description></item><item><title>CodeIgniter 3.0.x 支援 Native Session Driver</title><link>https://blog.wu-boy.com/2012/08/codeigniter-3-0-x-support-native-session-driver/</link><pubDate>Thu, 30 Aug 2012 12:54:11 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/08/codeigniter-3-0-x-support-native-session-driver/</guid><description>看來 CodeIgniter 團隊看到大家的心聲了，在 2.0.x 版本的時候就已經有人開始發 patch 讓 CI 可以支援 Native Session，也就是透過 session_start 來存取 session，而不是本來的 cookie session，很高興 philsturgeon (Fuel Framework 作者) 今天將此功能 merge 進來 3.0.x 分支，另外 Session 也同時抽出來變成 Driver 而不是單一個 Library 了，詳細可以看此 Patch 連結，也因為這樣所以之前自己寫的 CodeIgniter-Native-Session 可以功成身退了。目前官方同時維護兩個分支，2.1.x 另外是 3.0.x，後者是專門開發新功能，有機會在慢慢介紹。</description></item><item><title>快速修正專案 PHP Coding Standards</title><link>https://blog.wu-boy.com/2012/08/php-coding-standards-fixer/</link><pubDate>Mon, 20 Aug 2012 03:52:32 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/08/php-coding-standards-fixer/</guid><description>&lt;p>底下是之前的投影片教導創業團隊制定 PHP 程式碼規範，讓工程師可以遵循此規則達到團隊合作&lt;/p>
&lt;script async class="speakerdeck-embed" data-id="500f7e81ac941a0002026499" data-ratio="1.33507170795306" src="//speakerdeck.com/assets/embed.js">&lt;/script>
&lt;p>投影片內容都是&lt;a href="http://blog.wu-boy.com/2012/07/about-php-fig-group-coding-style-guide/" target="_blank">現有 PHP FIG Group 所制定的 PSR-0, PSR-1, PSR-2 規則&lt;/a>，那如何將既有專案的 Coding Style 轉換成上述標準呢，可以透過 &lt;a href="http://cs.sensiolabs.org/" target="_blank">PHP Coding Standards Fixer tool&lt;/a> 來快速完成，此工具是由 &lt;a href="http://www.symfony-project.org/" target="_blank">Symfony Framework&lt;/a> 完成。透過此工具可以快速且無痛轉換程式碼風格，舉個簡單例子:&lt;/p></description></item><item><title>關於 PHP FIG Group 所制定的 PSR-0, PSR-1, PSR-2</title><link>https://blog.wu-boy.com/2012/07/about-php-fig-group-coding-style-guide/</link><pubDate>Mon, 23 Jul 2012 06:06:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/07/about-php-fig-group-coding-style-guide/</guid><description>&lt;p>上禮拜寫了一篇 &lt;a href="http://blog.wu-boy.com/2012/07/how-to-write-maintainable-php-source-code/" target="_blank">寫出好維護的 PHP 程式碼&lt;/a>，看到 &lt;a href="http://blog.gslin.org/" target="_blank">gslin 大神&lt;/a>回應了一篇 &lt;a href="http://blog.gslin.org/archives/2012/07/23/2928/%E9%97%9C%E6%96%BC%E5%8F%AF%E7%B6%AD%E8%AD%B7%E7%9A%84-php-%E5%B0%88%E6%A1%88%EF%BC%9Aphp-fig-%E7%9A%84-psr-0%E3%80%81psr-1%E3%80%81psr-2/" target="_blank">關於可維護的 PHP 專案：PHP-FIG 的 PSR-0、PSR-1、PSR-2&lt;/a>，其實我已經關注 &lt;a href="http://www.php-fig.org/" target="_blank">PHP FIG&lt;/a> 有一陣子了，FIG 所定義的三份文件 PSR-0 (&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md" target="_blank">Auto loading Standard&lt;/a>), PSR-1 (&lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md" target="_blank">Basic Coding Standard&lt;/a>), PSR-2 &lt;a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md" target="_blank">(Coding Style Standard&lt;/a>) 寫的非常清楚，目的就是讓 PHP Open Source 專案有共同的 Coding Standard，方便大家共同開發。所以上禮拜提到的投影片內容有大部份參考了這份文件，裏面的內容比較不同的地方就差於 Control Structures 部份，舉個簡單例子： 寫 if 條件式，網路上只有兩種寫法 &amp;lt;?php
if ($a == $b) {
&amp;hellip;&amp;hellip;
}[/code]&lt;/p>
&lt;p>另外一種寫法&lt;/p>
&lt;p>[code lang=&amp;ldquo;php&amp;rdquo;]&amp;lt;?php
if ($a == $b)
{
&amp;hellip;&amp;hellip;
}[/code]&lt;/p></description></item><item><title>寫出好維護的 PHP 程式碼</title><link>https://blog.wu-boy.com/2012/07/how-to-write-maintainable-php-source-code/</link><pubDate>Sat, 21 Jul 2012 08:30:53 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/07/how-to-write-maintainable-php-source-code/</guid><description>今天有機會到台中幫創業團隊制定 PHP Coding Style，相信程式設計師每天花最多時間的就是 maintain code 了，如何寫出大家都易於維護的程式碼，必須先制定團隊的 coding style 為首要目標，底下分享個人推薦的寫法給大家參考，希望對於未來維護，轉移程式碼或教育訓練剛起步的團隊有些幫助。</description></item><item><title>PHP 程式設計師必備 Xdebug extension 安裝 on Ubuntu</title><link>https://blog.wu-boy.com/2012/06/how-to-install-xdebub-extension-on-ubuntu/</link><pubDate>Sun, 17 Jun 2012 06:18:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/06/how-to-install-xdebub-extension-on-ubuntu/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/5806873037/" title="xdebug-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm6.static.flickr.com/5108/5806873037_823aef3cd1_o.png?resize=200%2C116&amp;#038;ssl=1" alt="xdebug-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div> 之前寫了一篇
&lt;p>&lt;a href="http://blog.wu-boy.com/2011/06/%E5%A5%BD%E7%94%A8-php-debug-extension-xdebug-on-freebsd-%E5%AE%89%E8%A3%9D/" target="_blank">在 FreeBSD 的安裝方式&lt;/a>，這次來紀錄如何在 Ubuntu 系統上安裝 &lt;a href="http://xdebug.org/" target="_blank">Xdebug PHP extension&lt;/a>，開發網頁有太多的 debug 工具，其實最重要只要找到合適的開發環境，縮短專案開發程式時間，那底下就是介紹如何安裝在 Ubuntu 12.04 系統上。&lt;/p>
&lt;h3 id="系統安裝-透過-ubuntu-內建程式-apt-安裝即可">系統安裝 透過 Ubuntu 內建程式 apt 安裝即可&lt;/h3>
&lt;pre class="brush: bash; title: ; notranslate" title=""># php xdebug
aptitude -y install php5-dev
aptitude -y install php-pear
pecl install xdebug&lt;/pre></description></item><item><title>程式設計師需要注意的 PHP 5.4 變化</title><link>https://blog.wu-boy.com/2012/06/what-has-changed-in-php-5-4-x/</link><pubDate>Tue, 12 Jun 2012 05:48:51 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/06/what-has-changed-in-php-5-4-x/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6034284842/" title="php-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" alt="php-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://www.php.net" target="_blank">PHP&lt;/a> 5.4.0 在美國時間2012年3月1號釋出，到現在已經發展到 &lt;a href="http://www.php.net/archive/2012.php#id2012-05-08-1" target="_blank">5.4.3&lt;/a>，之前寫過一篇 &lt;a href="http://blog.wu-boy.com/2012/03/php-5-4-0-released/" target="_blank">PHP 5.4.0 released!! 新功能&lt;/a>，這次我們來探討看看 PHP 5.4.x 對於程式設計師在轉換平台或者是開發新功能所需要注意的地方。&lt;/p></description></item><item><title>CodeIgniter TextMagic API Library Release (簡訊功能)</title><link>https://blog.wu-boy.com/2012/05/codeigniter-textmagic-api-library-release/</link><pubDate>Tue, 01 May 2012 08:16:05 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/05/codeigniter-textmagic-api-library-release/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div> 之前寫了
&lt;p>&lt;a href="http://blog.wu-boy.com/2011/11/codeigniter-nexmo-message-api-library-release/" target="_blank">Nexmo 簡訊 API Library for CodeIgniter Framework&lt;/a>，現在又發現國外新的一家簡訊系統，叫做 &lt;a href="http://www.textmagic.com" target="_blank">TextMagic&lt;/a>，看了一下&lt;a href="http://www.textmagic.com/app/pages/en/pricing-coverage" target="_blank">簡訊價格&lt;/a>，27 美金可以傳送 285 通簡訊，似乎比 &lt;a href="http://nexmo.com/" target="_blank">Nexmo&lt;/a> 還貴了一些，不過沒關係，TextMagic 還支援了後台系統或者是 Email 來傳送簡訊，這點倒是不錯，相較於 Nexmo，TextMagic 後台多了太多功能了，不多說了，直接來使用 &lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a> TextMagic Libray。&lt;/p></description></item><item><title>phpfog 免費提供升級 Silver 一個月</title><link>https://blog.wu-boy.com/2012/03/phpfog-get-29-account-credit-by-just-deploying-a-new-app/</link><pubDate>Sat, 10 Mar 2012 02:01:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/03/phpfog-get-29-account-credit-by-just-deploying-a-new-app/</guid><description>phpFog 最近放出一個消息 Get $29 account credit by just deploying a new App!，內文大意就是說，只要您註冊網站成功，並且新開 application，系統就會在帳戶增加 $29 美元，您隨時可以升級到 Silver Cloud，重點是免費的啦，如果大家想玩看看，就趕快去註冊吧，開放時間是 8 AM PST on 6 March 2012 and runs until 8 AM PST on 9 March 2012.，不確定時間是不是過了 XD，如果已經有帳號的，可以直接到 Live Chat 直接請他們把 Credit 加上去就好。 phpfog 搭配當紅 git 來當作下載及上傳程式碼，跟過去都是用 FTP 方式來運作有很大的不同，所以用此平台之前，請先學會基本 git version control，網站提供了很多 PHP Framework 或 Application，例如 CodeIgniter、CakePHP、FuelPHP、Laravel…等，不管選擇哪一個 Framework，都可以隨時修改，系統只是預設把 Source Code 抓下來放到 Application 裡面，所以可以任意刪除。</description></item><item><title>PHP 5.4.0 released!! 新功能</title><link>https://blog.wu-boy.com/2012/03/php-5-4-0-released/</link><pubDate>Sat, 03 Mar 2012 07:37:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/03/php-5-4-0-released/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6034284842/" title="php-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" alt="php-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://www.php.net" target="_blank">PHP 官方&lt;/a>在台灣時間3月2號終於釋出 5.4 版本，我們可以參考官網的 &lt;a href="http://php.net/releases/5_4_0.php" target="_blank">release announcement&lt;/a>，想要抓原始碼下來編譯可以參考此&lt;a href="http://php.net/downloads.php#v5.4.0" target="_blank">下載連結&lt;/a>，這次 5.4 改版，有幾個最主要的新功能可以介紹給大家知道: &lt;a href="http://tw.php.net/language.oop5.traits.php" target="_blank">traits&lt;/a>、&lt;a href="http://docs.php.net/manual/en/language.types.array.php" target="_blank">a shortened array syntax&lt;/a>、&lt;a href="http://php.net/manual/en/features.commandline.webserver.php" target="_blank">a built-in webserver for testing purposes&lt;/a>，底下來一一介紹。&lt;/p></description></item><item><title>如何善用 CodeIgniter Library 及擴充核心 extend core class</title><link>https://blog.wu-boy.com/2012/02/how-to-make-best-use-of-codeigniter-library-and-extend-core-class/</link><pubDate>Tue, 21 Feb 2012 05:00:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/02/how-to-make-best-use-of-codeigniter-library-and-extend-core-class/</guid><description> 上禮拜介紹了 CodeIgniter MVC 基礎介紹，這次來分享如何善用 CodeIgniter 內建的 Library，以及該如何擴充核心功能，投影片內容會比上禮拜深入些，不過不會很難，只要對於物件導向有一定的基礎，我相信都可以把整個 CodeIgniter 架構瞭解的很清楚。
advanced introduction to codeigniter 此投影片會介紹4個部份 如何善用使用 CodeIgniter 內建函式庫 移植及撰寫個人 Library 擴充核心程式碼 GetSparks 簡介</description></item><item><title>CodeIgniter MVC 基礎介紹</title><link>https://blog.wu-boy.com/2012/02/intrduction-to-codeigniter-model-view-controller/</link><pubDate>Thu, 16 Feb 2012 04:10:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/02/intrduction-to-codeigniter-model-view-controller/</guid><description>上禮拜六講了一場 CodeIgniter 簡介，裡面很清楚交代一般新手入門所需要的基礎，以及什麼是 MVC(Model,View,Controller)，如何將原本的網站轉移到 CodeIgniter Framework。不多說了，大家可以參考投影片資料。投影片看完，也把作業寫好，恭喜你已經學會了CodeIgniter PHP Framework。
閱讀時可以搭配 CodeIgniter 使用手冊版本 2.1.0</description></item><item><title>PHP 多國語系製作 i18n library 筆記 (二)</title><link>https://blog.wu-boy.com/2011/12/php-i18n-library-2/</link><pubDate>Sat, 17 Dec 2011 12:53:11 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/12/php-i18n-library-2/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6034284842/" title="php-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" alt="php-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div> 繼續上篇講到
&lt;p>&lt;a href="http://blog.wu-boy.com/2011/12/php-i18n-library/" target="_blank">PHP 多國語系製作 i18n library 筆記 (一)&lt;/a>，相信大家使用上沒有任何問題， 但是一定會有共同疑問，那就是可不可以做到根據偵測瀏覽器來決定預設載入語系，也就是說 load method 只需要帶入第一個參數即可。&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">$lang = new Language();
$lang->load("about");
echo $lang->line("index") . "\n";&lt;/pre></description></item><item><title>PHP 多國語系製作 i18n library 筆記 (一)</title><link>https://blog.wu-boy.com/2011/12/php-i18n-library/</link><pubDate>Fri, 16 Dec 2011 15:00:27 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/12/php-i18n-library/</guid><description>&lt;div style="margin: 0 auto;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6034284842/" title="php-logo by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6186/6034284842_351ff33711_m.jpg?resize=240%2C127&amp;#038;ssl=1" alt="php-logo" data-recalc-dims="1" />&lt;/a>
&lt;/div> 多國語系是目前網站必有的模組，至少都會支援繁體中文及英文，那大家都怎麼設計多國語系的架構呢，底下來一步一步來介紹。
&lt;h3 id="多國語系目錄架構">多國語系目錄架構&lt;/h3>
&lt;pre class="brush: bash; title: ; notranslate" title="">language/
---> englisg/
---------> about.php
---> zh-tw/
---------> about.php
---> zh-cn/
---------> about.php
&lt;/pre> 這是大部分的專案設計模式，也最容易清楚了解，接著我們就寫一個簡單的 Language Class 來動態讀取各國語系。</description></item><item><title>PHPConf Taiwan 2011 快速上手 CodeIgniter Framework</title><link>https://blog.wu-boy.com/2011/12/phpconf-taiwan-2011-codeigniter-framework/</link><pubDate>Mon, 05 Dec 2011 04:16:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/12/phpconf-taiwan-2011-codeigniter-framework/</guid><description>2011 年 PHP Conference 所講的快速上手 CodeIgniter Framework 影片檔出來了，大致上講了 38 分鐘，時間上面控制的不是很好，請大家見諒了。底下是這次的影片:
投影片</description></item><item><title>為什麼要選擇 CodeIgniter PHP Framework？</title><link>https://blog.wu-boy.com/2011/11/why-choose-codeigniter-php-framework/</link><pubDate>Mon, 21 Nov 2011 07:38:50 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/11/why-choose-codeigniter-php-framework/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div> 大家一定會有疑問，在眾多 PHP Framework 選擇下，我為什麼要推廣
&lt;p>&lt;a href="http://codeigniter.org.tw" target="_blank">CodeIgniter&lt;/a> 這套呢？寫這篇的原因就是我在&lt;a href="http://phpwrite.blogspot.com/" target="_blank">腦殘 PHP 部落格&lt;/a>看到了這篇：&lt;a href="http://phpwrite.blogspot.com/2011/11/codeigniter.html">Codeigniter是萬靈丹？&lt;/a>，底下針對此作者寫的內容做一些回應&lt;/p>
&lt;blockquote>
&lt;p>在最近幾次去面試的過程 或是和朋友聊天聊到framework 都發現了一個問題 許多完完全全不懂framework的人一直在談論它的好 也發現了有很多基本PHP程式設計基礎都不好的人都在用它 連台灣在推廣它的人都把它尊奉為神&amp;hellip;. 看完上面的內容，我實在很想知道，有哪些推廣 CI 的人，把 CI 尊奉為神？如果有的話，可以介紹認識認識。不知道此部落格作者有沒有深入想過，為什麼這些人會覺得 CI 非常好用和 CI 的好處在哪裡？至少在我聽到的大部都是覺得 &lt;strong>&lt;span style="color:green">容易上手及架構清楚&lt;/span>&lt;/strong>，光是這樣就足以讓一些基礎的人可以快速上手這套 Framework。&lt;/p>
&lt;/blockquote></description></item><item><title>2011 Taiwan php conference – CodeIgniter Framework</title><link>https://blog.wu-boy.com/2011/11/2011-taiwan-php-conference-codeigniter-framework/</link><pubDate>Sat, 12 Nov 2011 06:12:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/11/2011-taiwan-php-conference-codeigniter-framework/</guid><description> 今年第1屆舉辦 2011 PHP Conference，終於有機會去台北推廣 CodeIgniter，底下是我這一次的簡報，歡迎大家參考
Phpconf 2011 introduction_to_codeigniter &amp;lt;div style=&amp;quot;padding:5px 0 12px&amp;quot;&amp;gt; View more &amp;lt;a href=&amp;quot;http://www.slideshare.net/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;presentations&amp;lt;/a&amp;gt; from &amp;lt;a href=&amp;quot;http://www.slideshare.net/appleboy&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Wu Bo-Yi&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt;</description></item><item><title>輕量級 A Clean &amp; Classy PHP Framework Laravel 簡介安裝</title><link>https://blog.wu-boy.com/2011/10/install-a-clean-classy-php-framework-laravel/</link><pubDate>Sun, 16 Oct 2011 04:40:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/10/install-a-clean-classy-php-framework-laravel/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6248708214/" title="Laravel PHP Framework by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm7.static.flickr.com/6038/6248708214_ef1133d0e9_o.png?resize=283%2C101&amp;#038;ssl=1" alt="Laravel PHP Framework" data-recalc-dims="1" />&lt;/a>
&lt;/div> 今日作者來介紹一套輕量級 PHP Framework:
&lt;p>&lt;a href="http://laravel.com/" target="_blank">Laravel&lt;/a>，目前還尚未發現台灣有任何人使用這套，然而 PHP Framework 實在太多種了，要把每一套都弄熟實在很不容易，如果作者有玩過一定會上來寫些教學文件，Laravel 是基於 &lt;strong>&lt;span style="color:green">PHP 5.3&lt;/span>&lt;/strong> 環境的 PHP Framwork，裡面已經都是用物件及 5.3 的 &lt;a href="http://php.net/manual/en/language.namespaces.php" target="_blank">Namespace&lt;/a> 下去開發，如果您想研究 Laravel PHP Framework 可以 &lt;a href="http://twitter.com/laravelphp" target="_blank">Follow Laravel Twitter&lt;/a>，更重要的是追蹤 &lt;a href="http://github.com/laravel" target="_blank">Github Source Code&lt;/a>。也許可以看一下 &lt;a href="http://laravel.com/roadmap" target="_blank">2.0 的 Roadmap&lt;/a>。&lt;/p></description></item><item><title>CodeIgniter@TW 成立 IRC 頻道 #codeigniter.tw</title><link>https://blog.wu-boy.com/2011/09/codeignitertw-%E6%88%90%E7%AB%8B-irc-%E9%A0%BB%E9%81%93-codeigniter-tw/</link><pubDate>Fri, 02 Sep 2011 02:18:56 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/09/codeignitertw-%E6%88%90%E7%AB%8B-irc-%E9%A0%BB%E9%81%93-codeigniter-tw/</guid><description>為了方便大家可以線上討論 CodeIgniter 技術，我在 Freenode 開了一個 IRC 聊天室，頻道是 #codeigniter.tw，歡迎大家可以上來聊聊天，當然在台灣官方首頁也加入了 Web 版的 IRC 聊天室，可以透過這網址進入，如果您是在 Windows 環境可以下載 XChat 軟體來上聊天室，Linux 底下可以透過 screen + irc 指令掛網。 另外講一下 CodeIgniter 最近的消息，那就是很高興官方成功轉換到 Github 上面進行版本控制，目前在 PHP Language 也爬升到第10名，第一名還是 Symfony，CodeIgniter 其中一位作者 Phil Sturgeon 與其他作者推出一套 Fuel PHP Framework 也是大受歡迎，排在 CodeIgniter 後面，真是讚。 不多說了，大家快來聊天吧 /join #codeigniter.tw</description></item><item><title>PHP function 參數 default value</title><link>https://blog.wu-boy.com/2011/08/php-function-%E5%8F%83%E6%95%B8-default-value/</link><pubDate>Sat, 06 Aug 2011 12:58:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/08/php-function-%E5%8F%83%E6%95%B8-default-value/</guid><description>2011.08.06 Update: 感謝 jaceju 指正筆誤 自己定義 PHP Function 的時候，假設該函式有1個參數，您可以傳入該參數或者是不傳，但是函式裡面如何判斷是否有傳入該參數呢？先看看底下例子:
function test($arg_1 = NULL)
{
// 判斷 $arg_1 參數是否傳入
$arg_1 = $arg_1 || 'test';
echo $arg_1; } 你會發現上面結果會是 1，而不是 test，大家會懷疑為什麼這樣寫不行呢，那是因為 || 是 boolean operators，他只會 return true 或是 false，而不是回傳 string，如果想這這樣寫，大概可以用 javascript 或 perl 語言來寫，javascript 可以參考之前的文章 [Javascript] 在函數裡設定參數預設值，然而 PHP 的正確寫法要用 ?: 來取代
function test($arg_1 = NULL)
{
// 判斷 $arg_1 參數是否傳入
$arg_1 = (isset($arg_1)) ? $arg_1 : 'test';
// 或者是
$arg_1 = $arg_1 ?</description></item><item><title>深入探討 CodeIgniter Input Class 核心程式流程</title><link>https://blog.wu-boy.com/2011/08/%E6%B7%B1%E5%85%A5%E6%8E%A2%E8%A8%8E-codeigniter-input-class-%E6%A0%B8%E5%BF%83%E7%A8%8B%E5%BC%8F%E6%B5%81%E7%A8%8B/</link><pubDate>Wed, 03 Aug 2011 12:55:58 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/08/%E6%B7%B1%E5%85%A5%E6%8E%A2%E8%A8%8E-codeigniter-input-class-%E6%A0%B8%E5%BF%83%E7%A8%8B%E5%BC%8F%E6%B5%81%E7%A8%8B/</guid><description>&lt;div style="margin: 0 auto; width:100%;text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/4928689646/" title="codeigniter_2 by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?resize=137%2C189&amp;#038;ssl=1" alt="codeigniter_2" data-recalc-dims="1" />&lt;/a>
&lt;/div> 為什麼會寫到這篇呢？當然是有網友希望可以幫他解決困難，由於問題的解答需要比較長的文章解釋，就寫出這一篇啦。在我 2009 年開始推廣到現在，相信在台灣已經有不少人開始使用
&lt;p>&lt;a href="http://codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a>，自己覺得非常感動 XD，也非常欣慰，希望把好東西推廣給大家知道。廢話不多說，先來說說問題點，先前發表的一篇 &lt;a href="http://blog.wu-boy.com/2010/08/codeigniter-利用-jquery-簡易驗證使用者帳號email/" target="_blank">[CodeIgniter] 利用 jQuery 簡易驗證使用者帳號/Email&lt;/a> 最後有人&lt;a href="http://blog.wu-boy.com/2010/08/codeigniter-%E5%88%A9%E7%94%A8-jquery-%E7%B0%A1%E6%98%93%E9%A9%97%E8%AD%89%E4%BD%BF%E7%94%A8%E8%80%85%E5%B8%B3%E8%99%9Femail/#comment-275946631" target="_blank">留言&lt;/a>針對 input-&amp;gt;post() 在中文官網上面的 &lt;a href="http://codeigniter.org.tw/user_guide/libraries/input.html" target="_blank">Input Class 教學&lt;/a>有些疑慮，底下我先來說明網友的問題點。&lt;/p>
&lt;h3 id="input-post-如果為空則塞進去資料庫竟然是-0-該網友引用了-input-class-中文文件的內容">input-&amp;gt;post 如果為空，則塞進去資料庫竟然是 0 該網友引用了 Input Class 中文文件的內容&lt;/h3>
&lt;blockquote>
&lt;p>使用 POST, COOKIE, 或 SERVER 資料CodeIgniter 提供三個讓你取出 POST, COOKIE 或 SERVER 中項目的補助函數。使用這些函數的主要便利性在於, 它們會確認並檢視是否這些項目已被設定並且在未設定時回傳 false (boolean) , 而不是直接取出 ($_POST[&amp;lsquo;something&amp;rsquo;])，官方範例↓這讓你可以方便地使用資料而不必預先測試它們是否存在。不然, 通常你可能會像這樣做：if ( ! isset($_POST[&amp;lsquo;something&amp;rsquo;])) { $something = FALSE; } else { $something = $_POST[&amp;lsquo;something&amp;rsquo;]; } 網友敘述:&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>但是為什麼還是為設定為0呢??這應該是檢查資料有沒有被設定而已，那我如果沒有輸入，又怎麼會出現 0 呢?? 網友希望 $username = &lt;span style="color:green">$this-&amp;gt;input-post&lt;/span>(&amp;ldquo;username&amp;rdquo;); 能幫他判斷如果 username 沒有資料，就直接回傳 NULL，Insert 到資料庫時，應該是 NULL 而不是 0。&lt;/p>
&lt;/blockquote>
&lt;h3 id="程式範例-網友其實沒有錯根據文件上顯示如果-something-">程式範例 網友其實沒有錯，根據文件上顯示，如果 $something =&lt;/h3>
&lt;p>&lt;span style="color:green">$this-&amp;gt;input-&amp;gt;post&lt;/span>(&amp;ldquo;something&amp;rdquo;); 取值過後，如果系統沒有 &lt;span style="color:green">$_POST[&amp;lsquo;something&amp;rsquo;]&lt;/span>，則會回傳 &lt;span style="color:red">FALSE&lt;/span>，我猜網友在跟 model 作搭配的時候使用了底下的寫法來塞值進入資料庫:&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">$data = array(
"username" => $this->input->post('username'),
"passwd" => $this->input->post('passwd'),
"email" => $this->input->post('email'),
);
$this->load->model('members');
$this->members->register($data);
&lt;/pre> 假設如果沒有 $_POST['email'] 的話，該欄位就會被設定為 0，原因很簡單，就是出在要塞值進入資料庫的時候，程式針對資料的型態判斷啦，底下從最開始取得
&lt;p>&lt;span style="color:green">$_POST&lt;/span> 資料開始說起。&lt;/p></description></item><item><title>PHP 將長期宣導程式設計師將 ext/mysql 改用 pdo_mysql 和 mysqli</title><link>https://blog.wu-boy.com/2011/07/php-%E5%B0%87%E9%95%B7%E6%9C%9F%E5%AE%A3%E5%B0%8E%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB%E5%B0%87-extmysql-%E6%94%B9%E7%94%A8-pdo_mysql-%E5%92%8C-mysqli/</link><pubDate>Mon, 18 Jul 2011 02:50:36 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/07/php-%E5%B0%87%E9%95%B7%E6%9C%9F%E5%AE%A3%E5%B0%8E%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB%E5%B0%87-extmysql-%E6%94%B9%E7%94%A8-pdo_mysql-%E5%92%8C-mysqli/</guid><description> 今天看到一篇 PHP-Dev 公佈一篇 [PHP-DEV] deprecating ext/mysql，大意就是 PHP 官方未來將打算移除 ext/mysql 的所有相關文件及功能，作者相信很多程式開發者都是用 mysql 套件下去開發，聽到這消息會非常錯愕吧。 官方 documentation team 討論移除的原因在於安全性的考量，在 DK 大神那邊看到是使用 ext/mysql 必須自己處理 mysql_real_escape_string 和 mysql_escape_string，所以官方希望教育使用者不要再使用 ext/mysql 了，底下是官方會做的事情
增加說明指出 ext/mysql 已過時 建議和取代方案 包含取代方案的範例 官方提供了兩個解決方案 pdo_mysql 和 mysqli，官方列了幾點說明：
從現在開始教育使用者及增加說明文件 在 5.4 版本增加 E_DEPRECATED 訊息，甚至 5.5 6.0 都可以 提供 pdo_mysql 轉換的說明文件 專注於整理 pdo_mysql 跟 mysqli 的線上文件 增加 &amp;ldquo;The MySQL situation&amp;rdquo; 的文件說明現況 看完這篇，大家現在趕快轉換到 mysqli 或者是使用 PDO 來開發程式吧</description></item><item><title>簡易 CodeIgniter Layout Library for Template</title><link>https://blog.wu-boy.com/2011/07/%E7%B0%A1%E6%98%93-codeigniter-layout-library-for-template/</link><pubDate>Sun, 10 Jul 2011 09:49:40 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/07/%E7%B0%A1%E6%98%93-codeigniter-layout-library-for-template/</guid><description>在 Web 開發網站，最重要的就是切割版面 CSS 化，制定共同部份 header 跟 footer…等，如果是用在 CodeIgniter Controller 裡面，呼叫 Views 的時候，如底下程式碼:
$data = array(
"title" = "Welcome to Test"
);
$this-load-view("header");
$this-load-view("welcome", $data);
$this-load-view("footer"); 大家可以發現只要任何一個 Controller 的函式都必須寫上面的程式碼，這樣是不是重複率太高了呢？在 CodeIgniter Wiki 裡面發現一個不錯用的簡易 layout library，他的作法就是利用 $this-&amp;gt;load-&amp;gt;view 裡面的第三個參數來達成，可以參考線上文件 - Views 最後一個段落 Returning views as data，我們參考看看底下官網提供的程式碼:
obj =&amp; get_instance();
$this-layout = $layout;
}
function setLayout($layout)
{
$this-layout = $layout;
}
function view($view, $data=null, $return=false)
{
$loadedData = array();
$loadedData['content_for_layout'] = $this-obj-load-view($view,$data,true);
if($return)
{
$output = $this-obj-load-view($this-layout, $loadedData, true);
return $output;
}
else
{
$this-obj-load-view($this-layout, $loadedData, false);
}
}
}
?</description></item><item><title>好用 PHP debug extension Xdebug on FreeBSD 安裝</title><link>https://blog.wu-boy.com/2011/06/%E5%A5%BD%E7%94%A8-php-debug-extension-xdebug-on-freebsd-%E5%AE%89%E8%A3%9D/</link><pubDate>Tue, 07 Jun 2011 05:42:18 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/06/%E5%A5%BD%E7%94%A8-php-debug-extension-xdebug-on-freebsd-%E5%AE%89%E8%A3%9D/</guid><description>之前介紹 FirePHP 這套好用的 PHP Debug 工具，也寫了一篇針對 CodeIgniter 的安裝方式，請參考: [PHP] 好用 Debug PHP 工具 FirePHP for FireFox on CodeIgniter，今天要介紹一套好用的 PHP debug Extension: Xdebug 的安裝方式，作者環境是在 FreeBSD 上，Windows 安裝方式就到官方網站下載對應的 PHP Windows binaries，目前在 FreeBSD ports 上面的版本是 2.1.0，但是 Xdebug 作者已經更新到 2.1.1，自己就順手發了一個 patch 157677 給 FreeBSD 官方 ports 去 update。
FreeBSD 安裝步驟 # cd /usr/ports/devel/php-xdebug
# make install clean 設定 /usr/local/etc/php/extensions.ini 檔案後面加入
extension=xdebug.so 設定 /usr/local/etc/php/php.ini 檔案後面加入
xdebug.profiler_enable = 1
xdebug.profiler_output_dir = /tmp/profiler 重新啟動 apache /usr/local/etc/rc.</description></item><item><title>PHP curl error: SSL certificate problem, verify that the CA cert is OK</title><link>https://blog.wu-boy.com/2011/05/php-curl-error-ssl-certificate-problem-verify-that-the-ca-cert-is-ok/</link><pubDate>Mon, 16 May 2011 03:46:18 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/05/php-curl-error-ssl-certificate-problem-verify-that-the-ca-cert-is-ok/</guid><description>之前在 CodeIgniter 寫了 CodeIgniter-Google-URL-Shortener-API 縮短網址的 goo.gl API Library，也在國外 CodeIgniter 論壇發表了一篇，不過在論壇有人回覆安裝好之後不能使用，會直接噴出底下錯誤訊息:
Severity: Notice Message: Trying to get property of non-object Filename: controllers/google_url.php Line Number: 24 之後我在 Windows 利用 Appserv 架設好這環境，發現是同樣問題，但是在 FreeBSD 跟 Ubuntu 上面都不會出現這錯誤訊息，接著在程式馬上面看看 curl 吐出什麼資料:
Curl error: SSL certificate problem, verify that the CA cert is OK. Details: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed 把這錯誤訊息拿去 Google 發現到這篇解法 Curl: SSL certificate problem, verify that the CA cert is OK，只要跳過驗證憑證就可以了
curl_setopt ($ch, CURLOPT_SSL_VERIFYHOST, 0);
curl_setopt ($ch, CURLOPT_SSL_VERIFYPEER, 0); 可以參考 PHP 官方 curl_setopt 的設定說明。</description></item><item><title>在 Ubuntu 底下快速安裝 CakePHP Framework 環境</title><link>https://blog.wu-boy.com/2011/05/%E5%9C%A8-ubuntu-%E5%BA%95%E4%B8%8B%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%9D-cakephp-framework-%E7%92%B0%E5%A2%83/</link><pubDate>Wed, 11 May 2011 12:51:38 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/05/%E5%9C%A8-ubuntu-%E5%BA%95%E4%B8%8B%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%9D-cakephp-framework-%E7%92%B0%E5%A2%83/</guid><description>最近因為別的專案用到 CakePHP 這套 PHP Framwork，剛好有這機會來學習 CakePHP，目前已經 Release 到 1.3.8 &amp;amp; 1.2.10 Stable，本篇紀錄如何在 Ubuntu 10.10 安裝 1.3.8 版本，本人不推薦用 2.0， 因為踩到很多雷阿，大家可以到 CakePHP GitHub 找尋自己想要的版本，安裝環境如下:
Ubunut 10.10 32 Desktop 版本 Apache/2.2.16 (Ubuntu) PHP 5.3.3-1ubuntu9.5 with Suhosin-Patch (cli) MySQL 5.1.49 1. 先下載 1.3.8 版本 2. 解壓縮到 /var/www 底下 3. 設定 apache virtual host 複製 virtual host 設定檔
cp /etc/apache2/sites-available/default /etc/apache2/sites-available/cakephp 修改設定檔 ServerName cakephp.localhost
DocumentRoot /var/www/cakephp/app/webroot
Options All
AllowOverride All
Order allow,deny
allow from all
4.</description></item><item><title>你不可不知的 JSON 基本介紹</title><link>https://blog.wu-boy.com/2011/04/%E4%BD%A0%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84-json-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</link><pubDate>Sun, 17 Apr 2011 06:56:53 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/04/%E4%BD%A0%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84-json-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</guid><description>&lt;p>還不知道 &lt;a href="http://www.json.org/">JSON&lt;/a> 是什麼嘛？本篇教學會帶您瞭解 JSON 在網站上的應用，以及運作流程跟使用 &lt;a href="http://www.php.net">PHP&lt;/a> 和 &lt;a href="http://zh.wikipedia.org/zh-hant/JavaScript">JavaScript&lt;/a> 來處理 JSON。假如您現在的工作就是網站設計師，相信一定聽過 JSON，但是什麼是 JSON，它能夠做什麼，及您能透過它在網站上做到哪些事情呢？&lt;/p>
&lt;p>透過本篇介紹您可以瞭解基本的 JSON，底下會列出本篇會提到的重點：&lt;/p>
&lt;ul>
&lt;li>什麼是 JSON&lt;/li>
&lt;li>JSON 應用在哪些地方&lt;/li>
&lt;li>如何建立 JSON 字串&lt;/li>
&lt;li>一個簡單的 JSON 範例&lt;/li>
&lt;li>JSON vs XML&lt;/li>
&lt;li>如何透過 PHP 及 JavaScript 使用 JSON&lt;/li>
&lt;/ul>
&lt;h2 id="什麼是-json">什麼是 JSON&lt;/h2>
&lt;p>JSON 是個以純文字為基底去儲存和傳送簡單結構資料，你可以透過特定的格式去儲存任何資料(字串,數字,陣列,物件)，也可以透過物件或陣列來傳送較複雜的資料。一旦建立了您的 JSON 資料，就可以非常簡單的跟其他程式溝通或交換資料，因為 JSON 就只是個純文字格式。&lt;/p>
&lt;p>JSON 的優點如下:&lt;/p>
&lt;ul>
&lt;li>相容性高&lt;/li>
&lt;li>格式容易瞭解，閱讀及修改方便&lt;/li>
&lt;li>支援許多資料格式 (number,string,booleans,nulls,array,associative array)&lt;/li>
&lt;li>許多程式都支援函式庫讀取或修改 JSON 資料&lt;/li>
&lt;/ul></description></item><item><title>CodeIgniter 2.0.X MVC 架構介紹</title><link>https://blog.wu-boy.com/2011/04/codeigniter-2-0-x-mvc-%E6%9E%B6%E6%A7%8B%E4%BB%8B%E7%B4%B9/</link><pubDate>Sat, 16 Apr 2011 10:22:15 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/04/codeigniter-2-0-x-mvc-%E6%9E%B6%E6%A7%8B%E4%BB%8B%E7%B4%B9/</guid><description> 這次受到 OSSF::自由軟體鑄造場(Open Source Software Foundry) 邀請在高雄講 CodeIgniter 2.0.X 系列講座，一整天的課程，可以參考 KaLUG 社群技術分享工作坊 - 快速學習 PHP Framework - CodeIgniter 2.0，2009 年我也是講了一場介紹 CodeIgniter 1.7.X 講座，這次針對於 CodeIgniter 2.0.X 做了詳細介紹，及我們該如何轉換原本網站程式到 CI 上面，學員雖然來的不多，但是我相信大家都有學到這次講課的精華，就是 CodeIgniter MVC 架構，跟如何應用 Controller Model Views 基礎用法，看到大家都很認真學習，還有學員從雲科大到高雄，真的太令我感動了，希望這次議程沒有讓學員們失望，底下附上我的簡報:
簡報檔 CodeIgniter 2.0.X from Bo-Yi Wu</description></item><item><title>CodeIgniter 2.0.1 Release 發佈了</title><link>https://blog.wu-boy.com/2011/03/codeigniter-2-0-1-release-%E7%99%BC%E4%BD%88%E4%BA%86/</link><pubDate>Sun, 20 Mar 2011 04:44:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/03/codeigniter-2-0-1-release-%E7%99%BC%E4%BD%88%E4%BA%86/</guid><description>很高興可以聽到這消息，那就是 CodeIgniter Release 2.0.1 版本了，原本大家都很擔心為什麼 CodeIgniter 每發佈 Release 版本都要等個好幾個月甚至到半年以上，現在不用這麼久了，因為自從官方新增了 CodeIgniter Reactor 加速版本開發及修正，所以更多人貢獻了自己的程式碼及回報問題，我相信 CodeIgniter 會越來越好，希望有更多台灣的朋友來使用。 2.0.1 版本新增了 ENVIRONMENT 這環境變數，讓程式開發者可以任意調整環境狀況，最主要是改變 PHP error reporting 狀態:
/*
* production = error_reporting(0)
* development = error_reporting(E_ALL)
*/
define('ENVIRONMENT', 'production'); 當您設定為 production，表示網站不需要任意輸出錯誤訊息，如果調整成 development，系統就會打開全部錯誤訊息，這對開發者相當重要。如果想瞭解更多，請參考 Handling Multiple Environments。 歡迎大家下載最新版本: http://www.codeigniter.org.tw/downloads 如果想加入翻譯團隊，可以參考這裡: https://github.com/appleboy/PHP-CodeIgniter-Framework-Taiwan</description></item><item><title>Ubuntu (Debian) 架設 apache mpm worker mod_fcgid 筆記</title><link>https://blog.wu-boy.com/2011/03/ubuntu-debian-%E6%9E%B6%E8%A8%AD-apache-mpm-worker-mod_fcgid-%E7%AD%86%E8%A8%98/</link><pubDate>Thu, 17 Mar 2011 03:55:54 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/03/ubuntu-debian-%E6%9E%B6%E8%A8%AD-apache-mpm-worker-mod_fcgid-%E7%AD%86%E8%A8%98/</guid><description>&lt;p>最近想架設 &lt;a href="http://www.redmine.org/">Redmine&lt;/a> 在 &lt;a href="http://www.ubuntu.com/">Ubuntu&lt;/a> 伺服器上面，架設之前要先搞定 apache 搭配 mpm worker 及 mod_fcgi module，安裝步驟其實不難，就搭配懶人指令 &lt;a href="http://en.wikipedia.org/wiki/Advanced_Packaging_Tool">apt&lt;/a> 就可以了。&lt;/p>
&lt;h3 id="安裝-apache-mpm-worker-由於怕安裝過程會叫你把-apache2-mpm-worker-移除改裝-apache2-mpm-prefork所以安裝順序上面有些變化請參考底下">安裝 apache mpm worker 由於怕安裝過程會叫你把 apache2-mpm-worker 移除，改裝 apache2-mpm-prefork，所以安裝順序上面有些變化，請參考底下:&lt;/h3>
&lt;pre class="brush: bash; title: ; notranslate" title=""># 先安裝
$ apt-get install apache2.2-bin apache2.2-common apache2-mpm-worker libapache2-mod-fcgid php5-cli php5-cgi php5-common
#後安裝
$ apt-get install apache2 php5 php5-gd php5-curl&lt;/pre> 至於 PHP 5 套件就看你需要什麼就裝什麼吧，搜尋一下 php5-* 看看，apache 裝好預設看不到 PHP 網頁，也就是認不得 php type，請在 apache config 檔案加入底下</description></item><item><title>用 js 或 php 判斷 Android 手機上網</title><link>https://blog.wu-boy.com/2011/03/%E7%94%A8-js-%E6%88%96-php-%E5%88%A4%E6%96%B7-android-%E6%89%8B%E6%A9%9F%E4%B8%8A%E7%B6%B2/</link><pubDate>Sat, 05 Mar 2011 09:18:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/03/%E7%94%A8-js-%E6%88%96-php-%E5%88%A4%E6%96%B7-android-%E6%89%8B%E6%A9%9F%E4%B8%8A%E7%B6%B2/</guid><description>之前寫了一篇 jQuery 偵測瀏覽器版本, 作業系統(OS detection)，這次可以來加上 Android 手機版本，其實就是分析瀏覽器 User Agent 來達到目的，底下分享 PHP 跟 Javascript 作法
PHP 方法 if(stripos($_SERVER['HTTP_USER_AGENT'],'Android') !== false) {
header('Location: http://android.xxx.com');
exit();
} Javascript 方法 if(navigator.userAgent.match(/Android/i))
{
window.location = 'http://android.xxx.com';
} Apache .htaccess 方法 用 Apache mod rewrite 方法
RewriteCond %{HTTP_USER_AGENT} ^.*Android.*$
RewriteRule ^(.*)$ http://android.xxx.com [R=301]</description></item><item><title>利用 mb_strwidth 取代 mb_strlen 計算 Multi-byte 字數</title><link>https://blog.wu-boy.com/2011/02/%E5%88%A9%E7%94%A8-mb_strwidth-%E5%8F%96%E4%BB%A3-mb_strlen-%E8%A8%88%E7%AE%97-multi-byte-%E5%AD%97%E6%95%B8/</link><pubDate>Sat, 26 Feb 2011 14:18:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/02/%E5%88%A9%E7%94%A8-mb_strwidth-%E5%8F%96%E4%BB%A3-mb_strlen-%E8%A8%88%E7%AE%97-multi-byte-%E5%AD%97%E6%95%B8/</guid><description>之前寫了一篇如何切割中文標題，裡面計算中文字數，這樣才不會直接切到中文字，但是 PHP 有很多函式可以算出字串有多少字元，我們看看底下例子，使用了 strlen、mb_strlen、mb_strwidth 分別下去測試，看看會把中文字算成幾個字元:
看到這結果並不意外，大家可以看到 strlen 把中文字元算成3個字元，mb\_strlen 不管是中文還是英文就都算成單一字元，mb\_strwidth 則是把中文算成 2 字元，mb_strwidth 算出來正是我想要的，如果是想要在 Web 上面切割中文，建議大家用 mb_substr 即可。因為作者本人在弄跟 BBS 相關技術，所以必須江中文字算成2字元，底下節錄 mb_strwidth 如何算字元長度:
Chars = Width
U+0000 - U+0019 = 0
U+0020 - U+1FFF = 1
U+2000 - U+FF60 = 2
U+FF61 - U+FF9F = 1
U+FFA0 - = 2 PS: 測試環境 PHP 5.2.6</description></item><item><title>WordPress plugin 加強網址 SEO</title><link>https://blog.wu-boy.com/2011/02/wordpress-plugin-seo/</link><pubDate>Mon, 21 Feb 2011 04:42:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/02/wordpress-plugin-seo/</guid><description>&lt;p>由於網站 &lt;a href="http://en.wikipedia.org/wiki/Search_engine_optimization">SEO&lt;/a> 在大家心中都是非常重要，現在製作網站也都考慮了很多 SEO 的問題，其中一個功能就是可不可以自訂網址，Wordpress 很早之前就支援了此功能，站長我呢，在創站的時候使用 &lt;span style="color:green">&lt;strong>blog.wu-boy.com/2011/02/17/2542&lt;/strong>&lt;/span>，為了使搜尋引擎更可以快速找到本站，所以打算將網址改成 &lt;strong>&lt;span style="color:green">blog.wu-boy.com/2011/02/php-codeigniter-google-url-shortener-api-library/&lt;/span>&lt;/strong>，在後台 Permalink Settings 可以自訂部落格網址，將網址格式改成 &lt;span style="color:red">&lt;strong>/%year%/%monthnum%/%postname%/&lt;/strong>&lt;/span>，可是改了之後，之前搜尋引擎及別人引用的網址就會變成 &lt;strong>&lt;span style="color:red">404 NOT Found&lt;/span>&lt;/strong>，為瞭解決此問題，必須寫一支 Mapping Url 程式，讓之前的舊網址轉到新網址，剛好在 &lt;a href="http://blog.roga.tw">Roga Blog&lt;/a> 找到一篇 &lt;a href="http://blog.roga.tw/2011/02/%E5%8A%A0%E5%BC%B7%E9%83%A8%E8%90%BD%E6%A0%BC%E7%9A%84-seo/">加強部落格的 SEO&lt;/a>，提供了轉換的 plugin，底下是該程式碼:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47">47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48">48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49">49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50">50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51">51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52">52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53">53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54">54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55">55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56">56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57">57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58">58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59">59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60">60&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="background-color:#eed;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-php" data-lang="php">&amp;lt;?php
&lt;span style="color:#228b22">/*
&lt;/span>&lt;span style="color:#228b22">Plugin Name: roga&amp;#39;s url hotfix
&lt;/span>&lt;span style="color:#228b22">Plugin URI: http://blog.roga.tw/2011/02/%E5%8A%A0%E5%BC%B7%E9%83%A8%E8%90%BD%E6%A0%BC%E7%9A%84-seo/
&lt;/span>&lt;span style="color:#228b22">Description: redirect http requests.
&lt;/span>&lt;span style="color:#228b22">Version: 0.1
&lt;/span>&lt;span style="color:#228b22">Author: roga
&lt;/span>&lt;span style="color:#228b22">Author URI: http://blog.roga.tw
&lt;/span>&lt;span style="color:#228b22">License: GPL v2
&lt;/span>&lt;span style="color:#228b22">*/&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> &lt;span style="color:#008b45">roga_wrap&lt;/span>()
{
&lt;span style="color:#8b008b;font-weight:bold">GLOBAL&lt;/span> &lt;span style="color:#00688b">$wpdb&lt;/span>;
&lt;span style="color:#00688b">$request_uri&lt;/span> = getenv(&lt;span style="color:#cd5555">&amp;#39;REQUEST_URI&amp;#39;&lt;/span>);
&lt;span style="color:#00688b">$array&lt;/span> = explode(&lt;span style="color:#cd5555">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#00688b">$request_uri&lt;/span>);
&lt;span style="color:#00688b">$status&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">TRUE&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">foreach&lt;/span>(&lt;span style="color:#00688b">$array&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> &lt;span style="color:#00688b">$row&lt;/span>)
{
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span>( ! is_numeric(&lt;span style="color:#00688b">$row&lt;/span>) &amp;amp;&amp;amp; ! &lt;span style="color:#8b008b;font-weight:bold">empty&lt;/span>(&lt;span style="color:#00688b">$row&lt;/span>)) &lt;span style="color:#00688b">$status&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">FALSE&lt;/span>;
}
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span>(count(&lt;span style="color:#00688b">$array&lt;/span>) != &lt;span style="color:#b452cd">5&lt;/span> || &lt;span style="color:#00688b">$status&lt;/span> != &lt;span style="color:#8b008b;font-weight:bold">TRUE&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">NULL&lt;/span>;
&lt;span style="color:#00688b">$post_id&lt;/span> = (int) &lt;span style="color:#00688b">$array&lt;/span>[&lt;span style="color:#b452cd">4&lt;/span>]; &lt;span style="color:#228b22">// http://blog.roga.tw/2011/02/16/2484
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
&lt;span style="color:#00688b">$wp_result&lt;/span> = &lt;span style="color:#00688b">$wpdb&lt;/span>-&amp;gt;&lt;span style="color:#658b00">get_row&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;SELECT `post_type`, `post_name`, `post_date` FROM `&lt;/span>&lt;span style="color:#cd5555">$wpdb-&amp;gt;posts&lt;/span>&lt;span style="color:#cd5555">` WHERE `ID` = &lt;/span>&lt;span style="color:#cd5555">$post_id&lt;/span>&lt;span style="color:#cd5555"> &amp;#34;&lt;/span>);
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span>( ! isset(&lt;span style="color:#00688b">$wp_result&lt;/span>))
&lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">NULL&lt;/span>;
&lt;span style="color:#00688b">$post_type&lt;/span> = &lt;span style="color:#00688b">$wp_result&lt;/span>-&amp;gt;&lt;span style="color:#658b00">post_type&lt;/span>;
&lt;span style="color:#00688b">$post_name&lt;/span> = &lt;span style="color:#00688b">$wp_result&lt;/span>-&amp;gt;&lt;span style="color:#658b00">post_name&lt;/span>;
&lt;span style="color:#00688b">$post_date&lt;/span> = &lt;span style="color:#00688b">$wp_result&lt;/span>-&amp;gt;&lt;span style="color:#658b00">post_date&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span>(&lt;span style="color:#00688b">$post_type&lt;/span> == &lt;span style="color:#cd5555">&amp;#39;revision&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">NULL&lt;/span>;
&lt;span style="color:#00688b">$time&lt;/span> = strtotime(&lt;span style="color:#00688b">$post_date&lt;/span>);
&lt;span style="color:#00688b">$year&lt;/span> = date(&lt;span style="color:#cd5555">&amp;#39;Y&amp;#39;&lt;/span>, &lt;span style="color:#00688b">$time&lt;/span>);
&lt;span style="color:#00688b">$month&lt;/span> = date(&lt;span style="color:#cd5555">&amp;#39;m&amp;#39;&lt;/span>, &lt;span style="color:#00688b">$time&lt;/span>);
&lt;span style="color:#228b22">// old: /%year%/%monthnum%/%day%/%post_id%
&lt;/span>&lt;span style="color:#228b22">&lt;/span> &lt;span style="color:#228b22">// new: /%year%/%monthnum%/%postname%/
&lt;/span>&lt;span style="color:#228b22">&lt;/span> &lt;span style="color:#00688b">$new_request_uri&lt;/span> = &lt;span style="color:#cd5555">&amp;#34;/&lt;/span>&lt;span style="color:#cd5555">$year&lt;/span>&lt;span style="color:#cd5555">/&lt;/span>&lt;span style="color:#cd5555">$month&lt;/span>&lt;span style="color:#cd5555">/&lt;/span>&lt;span style="color:#cd5555">$post_name&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>;
&lt;span style="color:#00688b">$http_host&lt;/span> = getenv(&lt;span style="color:#cd5555">&amp;#39;HTTP_HOST&amp;#39;&lt;/span>);
&lt;span style="color:#00688b">$logfile&lt;/span> = WP_CONTENT_DIR . &lt;span style="color:#cd5555">&amp;#34;/cache/wp-roga-redirect.log&amp;#34;&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span>(file_exists(&lt;span style="color:#00688b">$logfile&lt;/span>))
file_put_contents(&lt;span style="color:#00688b">$logfile&lt;/span>, sprintf(&lt;span style="color:#cd5555">&amp;#34;[%s] %s -&amp;gt; %s / %s &amp;#34;&lt;/span> . PHP_EOL, date_i18n(&lt;span style="color:#cd5555">&amp;#34;Y-m-d H:i:s&amp;#34;&lt;/span>), &lt;span style="color:#00688b">$request_uri&lt;/span>, urldecode(&lt;span style="color:#00688b">$new_request_uri&lt;/span>), getenv(&lt;span style="color:#cd5555">&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span>)), FILE_APPEND);
header(&lt;span style="color:#cd5555">&amp;#34;Status: 301 Moved Permanently&amp;#34;&lt;/span>);
header(&lt;span style="color:#cd5555">&amp;#34;Location: http:/&lt;/span>&lt;span style="color:#cd5555">$http_host$new_request_uri&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>);
&lt;span style="color:#8b008b;font-weight:bold">exit&lt;/span>();
}
add_action(&lt;span style="color:#cd5555">&amp;#39;init&amp;#39;&lt;/span>, &lt;span style="color:#cd5555">&amp;#39;roga_wrap&amp;#39;&lt;/span>);
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>PHP CodeIgniter Google URL Shortener API Library</title><link>https://blog.wu-boy.com/2011/02/php-codeigniter-google-url-shortener-api-library/</link><pubDate>Thu, 17 Feb 2011 05:38:24 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/02/php-codeigniter-google-url-shortener-api-library/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div>
&lt;h3 id="原由-由於-bbs-的盛行從最早的">&lt;strong>原由&lt;/strong> 由於 bbs 的盛行，從最早的&lt;/h3>
&lt;p>&lt;a href="http://0rz.tw/">0rz.tw&lt;/a> 短網址出現，陸陸續續出來很多更好用的網址: &lt;a href="http://tinyurl.com/">tinyurl.com&lt;/a>, &lt;a href="http://bit.ly/">bit.ly&lt;/a>，後來 Google 也推出 &lt;a href="http://goo.gl/">goo.gl&lt;/a> 服務，讓大家可以使用，提供了 &lt;a href="http://code.google.com/intl/zh-TW/apis/urlshortener/">Google URL Shortener API&lt;/a> 讓程式開發者可以順利使用此 API，當然在使用 API 之前一定要跟 Google 申請一組 API Key，先到 &lt;a href="https://code.google.com/apis/console/">Google API Console&lt;/a> 申請，Shortener API 的規定每天可以存取 1,000,000 次(100萬)，我想這樣也足夠個人或者是公司使用了，除非真的比這個大量，可以跟 Google 再提出額外申請。&lt;/p>
&lt;h3 id="系統需求">&lt;strong>系統需求&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://bitbucket.org/ellislab/codeigniter-reactor">CodeIgniter Reactor 版本&lt;/a>&lt;/li>
&lt;li>PHP 5.2 版本支援 Curl&lt;/li>
&lt;/ul>
&lt;h3 id="下載檔案-我已經將檔案都放在">&lt;strong>下載檔案&lt;/strong> 我已經將檔案都放在&lt;/h3>
&lt;p>&lt;a href="https://github.com/appleboy/">github&lt;/a> 上面，為了保持程式最新版本，請大家到底下連結進行下載&lt;/p>
&lt;h2 id="codeigniter-google-url-shortener-api9">&lt;a href="https://github.com/appleboy/CodeIgniter-Google-URL-Shortener-API">CodeIgniter-Google-URL-Shortener-API&lt;/a>&lt;/h2>
&lt;h3 id="系統文件">&lt;strong>系統文件&lt;/strong>&lt;/h3>
&lt;h5 id="安裝-此安裝檔案共有三個">安裝 此安裝檔案共有三個:&lt;/h5>
&lt;ul>
&lt;li>application/config/google_url_api.php&lt;/li>
&lt;li>application/controllers/google_url.php&lt;/li>
&lt;li>application/libraries/Google_url_api.php 請將檔案放入到相對應的 application 目錄即可&lt;/li>
&lt;/ul>
&lt;h5 id="設定-打開">設定 打開&lt;/h5>
&lt;p>&lt;span style="color:green">application/config/google_url_api.php&lt;/span> 檔案，將申請好的 API Key 填入即可&lt;/p>
&lt;h5 id="第一次執行-請在網址列打入">第一次執行 請在網址列打入&lt;/h5>
&lt;p>&lt;span style="color:green">http://your_host/index.php/google_url/&lt;/span> 即可，如果有任何問題，可以在 Controller 部份將 debug mode 打開&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">$this->google_url_api->enable_debug(TRUE);&lt;/pre></description></item><item><title>[新聞] CodeIgniter 發佈 2.0.0 版 Release</title><link>https://blog.wu-boy.com/2011/02/%E6%96%B0%E8%81%9E-codeigniter-%E7%99%BC%E4%BD%88-2-0-0-%E7%89%88-release/</link><pubDate>Tue, 01 Feb 2011 05:49:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2011/02/%E6%96%B0%E8%81%9E-codeigniter-%E7%99%BC%E4%BD%88-2-0-0-%E7%89%88-release/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div> 繼上次
&lt;p>&lt;a href="http://blog.wu-boy.com/2010/12/07/2488/">[新聞] PHP Framework Codeigniter 1.7.3 釋出 Release&lt;/a> 之後，&lt;a href="http://codeigniter.com">官方&lt;/a>終於釋出 2.0 的版本，消息來源: &lt;a href="http://codeigniter.com/news/codeigniter_2.0.0_released/">http://codeigniter.com/news/codeigniter_2.0.0_released/&lt;/a>。 &lt;a href="http://codeigniter.com/">CodeIgniter&lt;/a> 發展其實還蠻慢的，所以很多工程師都跳去其他 PHP Framework 了，然而我始終認為 CI 是一套非常好學習的初階 Framework，希望更多人來使用，底下是 2.0 發佈相關新聞，大家可以參考看看到底做了哪些改變以及 Fix Bug list:&lt;/p></description></item><item><title>Upgrading to CodeIgniter 2.0 (升級 CI 到 2.0 版本)</title><link>https://blog.wu-boy.com/2010/10/upgrading-to-codeigniter-2-0-%E5%8D%87%E7%B4%9A-ci-%E5%88%B0-2-0-%E7%89%88%E6%9C%AC/</link><pubDate>Sat, 30 Oct 2010 06:10:49 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/10/upgrading-to-codeigniter-2-0-%E5%8D%87%E7%B4%9A-ci-%E5%88%B0-2-0-%E7%89%88%E6%9C%AC/</guid><description>&lt;p>&lt;strong>2011.02.09 Update: 由於官方推出 2.0.0 的升級方式，請參考&lt;a href="http://www.codeigniter.org.tw/user_guide/installation/upgrade_200.html">升級版本 1.7.3 到 2.0.0&lt;/a>&lt;/strong>&lt;/p>
&lt;div style="margin: 0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm5.static.flickr.com/4139/4928689646_4309e16e13_o.png?w=840&amp;#038;ssl=1" alt="CodeIgniter" data-recalc-dims="1" />
&lt;/div> 在國外文章看到
&lt;p>&lt;a href="http://philsturgeon.co.uk">Phil Sturgeon&lt;/a> 已在今年三月發佈了一篇如何將目前 &lt;a href="http://CodeIgniter.com">CodeIgniter&lt;/a> 版本升級到 2.0 開發版本，轉移的經驗會在底下做介紹，&lt;a href="http://pyrocms.com/">PyroCMS&lt;/a> 是該作者產品之一，也升級到 2.0 了，大家可以參考看看。&lt;/p></description></item><item><title>[CodeIgniter] 簡單擷取 html 原始碼(PHP Simple HTML DOM Parser)</title><link>https://blog.wu-boy.com/2010/09/codeigniter-%E7%B0%A1%E5%96%AE%E6%93%B7%E5%8F%96-html-%E5%8E%9F%E5%A7%8B%E7%A2%BCphp-simple-html-dom-parser/</link><pubDate>Wed, 29 Sep 2010 06:15:28 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/09/codeigniter-%E7%B0%A1%E5%96%AE%E6%93%B7%E5%8F%96-html-%E5%8E%9F%E5%A7%8B%E7%A2%BCphp-simple-html-dom-parser/</guid><description>&lt;p>來介紹一套解析 html 原始碼的 open source: &lt;a href="http://simplehtmldom.sourceforge.net/">PHP Simple HTML DOM Parser&lt;/a>，這套程式可以讓您任意對原始碼進行擷取操作，抓取一些您需要的資訊，在搭配 preg_match 跟 preg_match_all 函數來使用，使用方法可以參考線上 &lt;a href="http://simplehtmldom.sourceforge.net/manual.htm">Document&lt;/a>，簡單的範例如下(參考官方網站):&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">// Create a DOM object from a string
$html = str_get_html('Hello!');
// Create a DOM object from a URL
$html = file_get_html('http://www.google.com/');
// Create a DOM object from a HTML file
$html = file_get_html('test.htm');&lt;/pre> 程式提供了三種讓您讀取原始碼，您可以直接丟 $string 或者是網址列，或者是檔案都可以，如果使用過 jQuery 您會發現在擷取 dom 的寫法很像，參考使用說明都寫得很清楚，由於
&lt;p>&lt;a href="http://codeigniter.com">CodeIgniter&lt;/a> 沒有此功能，所以我把程式改了一下 porting 到 CI 的 libraries 資料夾裡面，Patch 檔案&lt;/p></description></item><item><title>ICOS 2010 Introduction to CodeIgniter PHP MVC Framework</title><link>https://blog.wu-boy.com/2010/09/icos-2010-introduction-to-codeigniter-php-mvc-framework/</link><pubDate>Sat, 18 Sep 2010 14:26:05 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/09/icos-2010-introduction-to-codeigniter-php-mvc-framework/</guid><description> 今年 ICOS 2010 我有講一場『Introduction to CodeIgniter PHP MVC Framework』的介紹，本來想藉此機會來宣導 CodeIgniter 這套比較少人知道的 Framework，可惜天公不作美，來了一場颱風，以至於2010年9月19號的議程全部取消，不過還是希望自己可以分享跟推廣這套 Framework，將來有機會也想在台北開一場台北的教學課程，就跟去年在高雄跟 OSSF 合作的『Open Source PHP Web Framework 系列講座』類似，底下是原本預計在19號(星期日)的簡報，希望大家會喜歡
Benefit of CodeIgniter php framework View more presentations from Wu Bo-Yi</description></item><item><title>[網站] 好站連結 (七) Android, javascript, Css, PHP, Perl, FreeBSD, Linux</title><link>https://blog.wu-boy.com/2010/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%83-android-javascript-css-php-perl-freebsd-linux/</link><pubDate>Fri, 30 Jul 2010 14:53:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%83-android-javascript-css-php-perl-freebsd-linux/</guid><description>Windows C#
C# 比較字串 MSDN 比較字串 Request.Form Collection Request Query String / Form Parametrs ASP.NET QueryString Usage Using include files with ASP.NET html
[將所有 的內容包到一個
中][7] apache
Fixing mod_rewrite and .htaccess on GoDaddy Hosting javascript
jQuery Week Calendar Javascript: reference the parent window from a popup How to get and set form element values with jQuery How to check and uncheck a checkbox with jQuery Loop through parameters passed to a Javascript function perl-completion.</description></item><item><title>[phpBB3] BBCode [url] Tag 支援中文網址</title><link>https://blog.wu-boy.com/2010/06/phpbb3-bbcode-url-tag-%E8%BD%89%E6%8F%9B%E4%B8%AD%E6%96%87%E7%B6%B2%E5%9D%80%E9%A9%97%E8%AD%89/</link><pubDate>Wed, 30 Jun 2010 12:05:07 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/06/phpbb3-bbcode-url-tag-%E8%BD%89%E6%8F%9B%E4%B8%AD%E6%96%87%E7%B6%B2%E5%9D%80%E9%A9%97%E8%AD%89/</guid><description>在 phpBB2 的時候就有發現這問題了，當時並沒有想去解決這問題，然而至今到了 phpBB3，依然出現這問題，不過我想這是因為中文網址的盛行，以及像 Wiki 之類都會有中文標籤，例如：一分鐘教室-userChrome.css，解決方法可以透過 urlencode 函式來處理掉網址編碼問題，在 phpBB 處理文章儲存，會先經過 bbcode 的處理，將 **** 標籤，會經過 get_preg_expression(&amp;lsquo;url&amp;rsquo;) 這函式的驗證，看 url 是否合法，當然如果網址列有中文就不可能通過，所以必須在網址驗證之前，把網址編碼過，通過驗證之後再把網址解碼，這樣就沒問題了，底下為安裝步驟 打開 includes/message_parser.php 找尋
function validate_url($var1, $var2) 前面加入 /**
* url encode
*
* @param string $string http url
*/
function encode_url($string)
{
$entities = array('%21', '%2A', '%27', '%28', '%29', '%3B', '%3A', '%40', '%26', '%3D', '%2B', '%24', '%2C', '%2F', '%3F', '%25', '%23', '%5B', '%5D');
$replacements = array('!', '*', "'", "(", ")", ";", ":", "</description></item><item><title>[FreeBSD] update apache -> 2.2.15, PHP -> 5.3.2, and MySQL downgrade to 5.1.9</title><link>https://blog.wu-boy.com/2010/06/freebsd-update-apache-2-2-15-php-5-3-2-and-mysql-downgrade-to-5-1-9/</link><pubDate>Wed, 23 Jun 2010 05:46:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/06/freebsd-update-apache-2-2-15-php-5-3-2-and-mysql-downgrade-to-5-1-9/</guid><description>昨天升級了 FreeBSD 的 Apache, PHP, and MySQL，遇到很多地雷阿，最多的就是 PHP 的部份，因為本來自己使用 5.2.11 版本，但是在 commit port 的時候發生去裝 5.3.2 版本，所以就直接砍掉全部重練，先是遇到 MySQL 問題，原先在 database/mysql60-server 已經被 FreeBSD 移除，任何關於 mysql60 的相關 port 都被 remove 掉了，只好 downgrade 到 mysql 5.1.48 版本，移除同時順手把 apache PHP 相關都拿掉了。
移除 apache mysql php 相關 ports -rf 依序找尋相關 Mysql ports 移除 pkg_deinstall -rf mysql60-server 接下來安裝 MySQL 5.1.48 Server and Client，可以找到在 databases/mysql51-server and databases/mysql51-client，直接安裝即可
cd /usr/ports/databases/mysql51-server &amp;&amp; make install 安裝 Apache 2.2.15 cd /usr/ports/www/apache22 &amp;&amp; make WITH_MPM=worker install 安裝 PHP 5.</description></item><item><title>[phpBB3 外掛] 根據使用者文章數目限制簽名檔顯示</title><link>https://blog.wu-boy.com/2010/06/phpbb3-%E5%A4%96%E6%8E%9B-%E6%A0%B9%E6%93%9A%E4%BD%BF%E7%94%A8%E8%80%85%E6%96%87%E7%AB%A0%E6%95%B8%E7%9B%AE%E9%99%90%E5%88%B6%E7%B0%BD%E5%90%8D%E6%AA%94%E9%A1%AF%E7%A4%BA/</link><pubDate>Sun, 13 Jun 2010 07:00:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/06/phpbb3-%E5%A4%96%E6%8E%9B-%E6%A0%B9%E6%93%9A%E4%BD%BF%E7%94%A8%E8%80%85%E6%96%87%E7%AB%A0%E6%95%B8%E7%9B%AE%E9%99%90%E5%88%B6%E7%B0%BD%E5%90%8D%E6%AA%94%E9%A1%AF%E7%A4%BA/</guid><description>前一篇提到：『[教學] phpBB3 使用者簽名檔 url 連結加上 rel=”nofollow”』，本篇會將其做成後台，方便管理者可以從後台管理，這次加上一個新功能：『限制使用者顯示簽名檔』，根據使用者文章數量來決定是否顯示簽名檔，可以避免想要來打廣告的新註冊使用者，限制文章數量是一種方式，但是也不是最好的方式，phpBB3 本身可以在後台限制是否顯示使用者簽名檔，不過我想各大站長都會開放此功能，好讓使用者可以放個人網站或者是部落格，底下是外掛安裝方式：
安裝 打開 includes/acp/acp_board.php 找尋
#
# Find
#
'max_sig_img_height' = array('lang' = 'MAX_SIG_IMG_HEIGHT', 'validate' = 'int:0', 'type' = 'text:5:4', 'explain' = true, 'append' = ' ' . $user-lang['PIXEL']), 後面加上 #
# after add
#
'max_sig_post_count_limit' = array('lang' = 'MAX_SIG_POSTS_LIMIT', 'validate' = 'int:0', 'type' = 'text:5:4', 'explain' = true),
打開 viewtopic.php 找尋
#
# Find
#
if ($row['user_sig'] &amp;&amp; $config['allow_sig'] &amp;&amp; $user-optionget('viewsigs')) 取代 #
# Replace
#
if (($row['user_sig'] &amp;&amp; $config['allow_sig'] &amp;&amp; $user-optionget('viewsigs') &amp;&amp; $row['user_posts'] = $config['max_sig_post_count_limit']) || (isset($user-data['session_admin']) &amp;&amp; $user-data['session_admin'])) 中文化 打開 language/zh_cmn_hant/acp/board.</description></item><item><title>[教學] phpBB3 使用者簽名檔 url 連結加上 rel=”nofollow”</title><link>https://blog.wu-boy.com/2010/06/%E6%95%99%E5%AD%B8-phpbb3-%E4%BD%BF%E7%94%A8%E8%80%85%E7%B0%BD%E5%90%8D%E6%AA%94-url-%E9%80%A3%E7%B5%90%E5%8A%A0%E4%B8%8A-relnofollow/</link><pubDate>Thu, 10 Jun 2010 13:29:02 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/06/%E6%95%99%E5%AD%B8-phpbb3-%E4%BD%BF%E7%94%A8%E8%80%85%E7%B0%BD%E5%90%8D%E6%AA%94-url-%E9%80%A3%E7%B5%90%E5%8A%A0%E4%B8%8A-relnofollow/</guid><description>基於 Moztw 討論區 有大陸使用者註冊之後，在簽名檔加入一些廣告連結，為了降低 Google Page Rank，所以我們必須指示搜尋引擎「不要前往此網頁上的連結」或是「不要前往此連結」，可以參考 關於 rel=&amp;ldquo;nofollow&amp;rdquo;，phpBB3 編輯三個檔案就可以了，此修改不影響文章內容，只有針對簽名檔作用，底下是 patch 程式碼，可以參考看看 includes/bbcode.php
--- phpBB3/includes/bbcode.php 2010-03-06 04:37:23.000000000 +0800
+++ www/includes/bbcode.php 2010-06-10 20:58:02.000000000 +0800
@@ -2,7 +2,8 @@
/**
*
* @package phpBB3
-* @version $Id$
+* @version $Id: bbcode.php 9461 2009-04-17 15:23:17Z acydburn $
+* @log 2010-06-10 appleboy $
* @copyright (c) 2005 phpBB Group
* @license http://opensource.org/licenses/gpl-license.php GNU Public License
*
@@ -48,7 +49,7 @@
/**
* Second pass bbcodes
*/
- function bbcode_second_pass(&amp;$message, $bbcode_uid = '', $bbcode_bitfield = false)
+ function bbcode_second_pass(&amp;$message, $bbcode_uid = '', $bbcode_bitfield = false, $bbcode_is_sig = false)
{
if ($bbcode_uid)
{
@@ -110,6 +111,13 @@
}
$message = preg_replace($preg['search'], $preg['replace'], $message);
+
+ /*
+ * 2010.</description></item><item><title>[PHP] 好用 Debug PHP 工具 FirePHP for FireFox on CodeIgniter</title><link>https://blog.wu-boy.com/2010/06/php-%E5%A5%BD%E7%94%A8-debug-php-%E5%B7%A5%E5%85%B7-firephp-for-firefox-on-codeigniter/</link><pubDate>Mon, 07 Jun 2010 11:30:56 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/06/php-%E5%A5%BD%E7%94%A8-debug-php-%E5%B7%A5%E5%85%B7-firephp-for-firefox-on-codeigniter/</guid><description>之前介紹過 javascript FireFox Debug 工具 FireBug (Using firebug for firefox 除錯 javascript)，今天來介紹 PHP 除錯工具 FirePHP，它可以輸出 PHP 資料到 FireBug console 介面，方便解決 PHP 相關問題，而不會去影響線上網站的畫面，安裝方式非常簡單，請先安裝 FireFox addon for FirePHP，重新啟動 FireFox 這樣就安裝成功了，接下來就是 include FirePHP Library 檔案，就可以正常使用了。另外還會介紹如何安裝到 CodeIgniter PHP Framework Firebug: https://addons.mozilla.org/en-US/firefox/addon/1843 FirePHP: https://addons.mozilla.org/en-US/firefox/addon/6149 底下先看畫面：
$array = array("a" = "1", "b" = "2");
$firephp-info($array, "info");
$firephp-warn($array, "warn");
$firephp-error($array, "error");
Install FirePHP 安裝 Ref : http://www.firephp.org/HQ/Install.htm 在 Zend Framework 已經有開發完成，可以參考：FirePHP and Zend Framework 1.6 下載檔案：Download FirePHPCore library version 0.</description></item><item><title>[FreeBSD]high performance caching reverse proxy: Varnish (安裝架設篇)</title><link>https://blog.wu-boy.com/2010/03/freebsdhigh-performance-caching-reverse-proxy-varnish-and-how-to-install-it/</link><pubDate>Sat, 20 Mar 2010 16:12:44 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2010/03/freebsdhigh-performance-caching-reverse-proxy-varnish-and-how-to-install-it/</guid><description>在上禮拜跟 DarkHero 兄聊到 How To Build a Scalable Web Site (3/6) 的上課講義，互相討論了 MySQL Load balance 以及 http reverse proxy 的方式，以前自己有用 HAProxy 當作 Web 平衡負載，順便紀錄了 HAProxy FreeBSD 安裝方式，這次要來介紹今天重點：Varnish Cache Server，在近幾年流行的 Caching 機制，大家會想到 Squid，只要您設定良好的 Squid 參數，它一定運作的非常穩定，然而它的核心依然是 forward proxy，要架設成 Reverse Proxy 還必需要設定一些參數才可以達到，是有一定的困難性，然而 Varnish Cache Server 底層就是高效能 caching reverse proxy，也因為 Squid 是 1980 年發展出來的，程式架構過於老舊，可以參考 ArchitectNotes 瞭解這部份詳情。也許您會問到 Varnish 可以架設成 forward proxy 嗎？答案是可以的，但是您也許不會這麼做，因為它需要 DNS 技術，以及需要一個非常大且複雜的 Varnish VCL(Varnish Configuration Language) file。 1. 今天要介紹如何在 FreeBSD 系統安裝，在介紹之前，系統必須先安裝好 apache，這樣才可以正確啟動，利用 ports 安裝：</description></item><item><title>[PHP Framework] How to implement Plurk API in CodeIgniter</title><link>https://blog.wu-boy.com/2009/12/php-framework-how-to-implement-plurk-api-in-codeigniter/</link><pubDate>Wed, 30 Dec 2009 12:58:33 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/12/php-framework-how-to-implement-plurk-api-in-codeigniter/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/4228352638/" title="ci_logo2 (by appleboy46)">&lt;img src="https://i2.wp.com/farm3.static.flickr.com/2519/4228352638_19b13306d3_o.gif?resize=170%2C73&amp;#038;ssl=1" title="ci_logo2 (by appleboy46)" alt="ci_logo2 (by appleboy46)" data-recalc-dims="1" />&lt;/a> 很開心在12月看到 &lt;a href="http://www.plurk.com/API">Plurk Release API&lt;/a> 出來，而自己也跟網路上一些朋友合作開發 &lt;a href="http://code.google.com/p/php-plurk-api/">PHP implementation of Plurk API&lt;/a>，Plurk (簡稱噗浪)在台灣這一兩年紅了起來，網路高手分別針對噗浪研究產生非官方的 API，現在官網 Release 出來，提供了 &lt;a href="http://en.wikipedia.org/wiki/Java_(programming_language)">Java&lt;/a> 跟 &lt;a href="http://www.python.org/">Python&lt;/a> 的 Example，我想因為 Plurk 是用 Python 寫出來的，所以提供了範例，但是 API 出來沒多久，&lt;a href="http://blog.roga.tw/">roga&lt;/a> 就集合了網路一些強者，一起開發了 PHP Plurk API，我也拿了此 API 在實作到 &lt;a href="http://codeigniter.com">CodeIgniter Framework&lt;/a>，讓在使用此套 open source 的使用者可以享用 Plurk API。不過從2009.12.29日之後，Plurk 官網有限制每天只能 call 50.000 次，已經蠻多了，不要操掛 Plurk 的機器阿。&lt;/p></description></item><item><title>[PHP] Release 噗浪 php-plurk-api 1.2 Beta.</title><link>https://blog.wu-boy.com/2009/12/php-release-%E5%99%97%E6%B5%AA-php-plurk-api-1-2-beta/</link><pubDate>Thu, 24 Dec 2009 14:32:15 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/12/php-release-%E5%99%97%E6%B5%AA-php-plurk-api-1-2-beta/</guid><description>Plurk 官網在2009年12月4日提供了 API platform，這是大家所期待很久的，裡面只有提供 Python 跟 Java 的 example 範例，所以強者我朋友 roga 發起了 php-plurk-api 架構，來造福 PHP 使用者，當初在 roga 在 plurk 上面徵求是否有人想要一起開發程式，我就當場報名了，後來也陸續多了很多強者好友：Whatup、ChrisLiu、Limit…等加入進行模組撰寫，很快的就產出了 php-plurk-api 1.2 Beta，也利用官方網站 API 來撰寫註解，然後搭配 phpDocumentor 產出文件，這一切都集結了很多人的努力，也讓官方網站放上了大家共同結晶。 如果大家想使用，可以從 php-plurk-api source code. 下載。^^ 其他延伸： Release: php-plurk-api 1.2 Beta. php-plurk-api website.</description></item><item><title>PHP+MySQL 環境下 SQL Injection 攻防戰</title><link>https://blog.wu-boy.com/2009/12/phpmysql-%E7%92%B0%E5%A2%83%E4%B8%8B-sql-injection-%E6%94%BB%E9%98%B2%E6%88%B0/</link><pubDate>Sun, 06 Dec 2009 05:11:25 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/12/phpmysql-%E7%92%B0%E5%A2%83%E4%B8%8B-sql-injection-%E6%94%BB%E9%98%B2%E6%88%B0/</guid><description>&lt;p>在 &lt;a href="http://www.ourmysql.com/">OurMySQL Blog&lt;/a> 看到這篇：『&lt;a href="http://www.ourmysql.com/archives/791">PHP+MySQL环境下SQL Injection攻防总结&lt;/a>』寫的相當不錯，裡面有一些觀念，可以讓初學 PHP &amp;amp; MySQL 的使用者知道如何防護 &lt;a href="http://en.wikipedia.org/wiki/SQL_injection">SQL Injection (資料隱碼)&lt;/a>，內容提到 &lt;a href="http://tw2.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc&lt;/a> 在 on 跟 off 的狀況如何防護，但是可以清楚看到 &lt;a href="http://tw2.php.net/">PHP&lt;/a> 官方文件提到在 PHP 5.3.0 magic_quotes_gpc 預設已經是關閉，在 PHP 6.0 之後正式移除，所以內容寫的 magic_quotes_gpc 狀況，可以大致上瞭解就好，真正防護 SQL Injection 是需要寫程式或者是考慮很多方式去防護。 一般在做文章查詢，都會使用 &lt;span style="color: #008000;">/articles.php?id=123&lt;/span> 網址傳送方式，以 $_GET[&amp;lsquo;id&amp;rsquo;] 送到 PHP 頁面去做處理，如果駭客想要測試是否可以利用 SQL Injection 做攻擊，可以在網址列加上 &lt;span style="color: #008000;">/articles.php?id=123&lt;/span>&lt;span style="color: #ff0000;">'&lt;/span>，請注意網址後面多出 &lt;span style="font-size:11pt;color: #ff0000;">'&lt;/span>，如果沒有把 $_GET[&amp;lsquo;id&amp;rsquo;] 做處理的話，就會出現底下錯誤訊息：&lt;/p>
&lt;blockquote>
&lt;p>&lt;span style="color: #ff0000;">supplied argument is not a valid MySQL result resource in&lt;/span> 這是因為平常在寫 SQL 語法，會是底下這種寫法：&lt;/p>
&lt;/blockquote>
&lt;pre class="brush: php; title: ; notranslate" title="">$sql = "SELECT id, title, content FROM articles WHERE id = '".$_GET['id']."'";
$result = mysq_query($sql);&lt;/pre> 因為沒有處理跳脫字元 '，所以造成 SQL 語法錯誤，才會出現該錯誤訊息，但是如果又針對跳脫字元做防護得時候，還有另一種攻擊方式：
&lt;blockquote>
&lt;p>&lt;span style="color: #008000;">/articles.php?id=0 union select 1,2,load_file(char(47,101,116,99,47,112,97,115,115,119,100))&lt;/span> 其中的數字就是/etc/passwd 字符串的ASCII，除此之外，還可以使用字串 16 進位方式：&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;span style="color: #008000;">/articles.php?id=0 union select 1,2,load_file(0×2f6574632f706173737764)&lt;/span> 可以參考一下 &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/string-functions.html#function_load-file">MySQL LOAD_FILE(file_name)&lt;/a>，底下文章提到了很多方式解決。&lt;/p>
&lt;/blockquote></description></item><item><title>[Perl&amp;PHP] time() and Class::Date 日期轉換運算</title><link>https://blog.wu-boy.com/2009/11/perlphp-time-and-classdate-%E6%97%A5%E6%9C%9F%E8%BD%89%E6%8F%9B%E9%81%8B%E7%AE%97/</link><pubDate>Tue, 03 Nov 2009 15:28:56 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/11/perlphp-time-and-classdate-%E6%97%A5%E6%9C%9F%E8%BD%89%E6%8F%9B%E9%81%8B%E7%AE%97/</guid><description>&lt;p>為了看個 &lt;a href="http://mlb.mlb.com/index.jsp">MLB&lt;/a> 美國職棒，寫了一個網站：&lt;a href="http://mimi.twgg.org/">美國職棒影片收集站&lt;/a>，裡面的內容影片連結，以及連結說明，都是利用 &lt;a href="http://www.perl.org/">Perl&lt;/a> 搭配 &lt;a href="http://www.mysql.com/">MySQL&lt;/a> 資料庫，以及 &lt;a href="http://codeigniter.com/">CodeIgniter PHP Framework&lt;/a> 寫出來的，美國 MLB 開打時間，會比台灣晚一天的時差，所以在 &lt;a href="http://www.php.net">PHP&lt;/a> 跟 Perl 都要針對時間作修改以及轉換運算，那底下會寫 PHP 跟 Perl 如何控制時間，還有資料庫如何設計，會比較適當。&lt;/p>
&lt;h2 id="span-stylecolor-008000php-日期轉換span-mysql-在資料庫時間格式方面最主要常見的兩種儲存方式一種就是-mysql-預設-datetime顯示的格式就會像是">&lt;span style="color: #008000;">PHP 日期轉換&lt;/span> MySQL 在資料庫時間格式方面，最主要常見的兩種儲存方式，一種就是 MySQL 預設 datetime，顯示的格式就會像是&lt;/h2>
&lt;p>&lt;span style="color: #ff0000;">2009-11-03 20:10:43&lt;/span>，另一種就是存成 &lt;a href="http://en.wikipedia.org/wiki/Unix_time">UNIX time&lt;/a> 格式，可以設定為 int(11)，這兩種其實都可以使用，在 &lt;a href="http://www.phpbb.com/">phpBB2&lt;/a> 是採用後者的方式，因為 open source 要支援多種資料庫，但是又要統一程式碼，所以乾脆用 UNIX 的時間標記，這樣比較好轉換時區，如果使用 UNIX 格式，可以利用 &lt;a href="http://php.net/manual/en/function.time.php">time()&lt;/a> 函式來取的。&lt;/p></description></item><item><title>[CodeIgniter] 解決 CI 下載函數 force_download 在 IE 底下檔案標題亂碼</title><link>https://blog.wu-boy.com/2009/10/codeigniter-%E8%A7%A3%E6%B1%BA-ci-%E4%B8%8B%E8%BC%89%E5%87%BD%E6%95%B8-force_download-%E5%9C%A8-ie-%E5%BA%95%E4%B8%8B%E6%AA%94%E6%A1%88%E6%A8%99%E9%A1%8C%E4%BA%82%E7%A2%BC/</link><pubDate>Mon, 26 Oct 2009 06:21:43 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/10/codeigniter-%E8%A7%A3%E6%B1%BA-ci-%E4%B8%8B%E8%BC%89%E5%87%BD%E6%95%B8-force_download-%E5%9C%A8-ie-%E5%BA%95%E4%B8%8B%E6%AA%94%E6%A1%88%E6%A8%99%E9%A1%8C%E4%BA%82%E7%A2%BC/</guid><description>CodeIgniter 底下提供了 force_download 函數，讓使用者可以直接下載檔案，但是會遇到中文的問題，IE 底下開起來檔名會是亂碼，force_download(&amp;lsquo;filename&amp;rsquo;, &amp;lsquo;data&amp;rsquo;) 如果 filename 使用中文，測試 FireFox 跟 Chrome 都是沒問題的，唯獨 IE 開起來就是有問題，所以麻煩請修改 helpers/download_helper.php 這隻程式。
if ( ! function_exists('force_download'))
{
function force_download($filename = '', $data = '')
{
if ($filename == '' OR $data == '')
{
return FALSE;
}
// Try to determine if the filename includes a file extension.
// We need it in order to set the MIME type
if (FALSE === strpos($filename, '.'))
{
return FALSE;
}
// Grab the file extension
$x = explode('.</description></item><item><title>WordPress 2.8.5 Hardening Release</title><link>https://blog.wu-boy.com/2009/10/wordpress-2-8-5-hardening-release/</link><pubDate>Thu, 22 Oct 2009 12:37:16 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/10/wordpress-2-8-5-hardening-release/</guid><description>WordPress 在10月20號發出安全性的更新，大家快把 2.8.4 升級到 2.8.5，可以參考 WordPress 2.8.5: Hardening Release，這次更新最主要是在安全性的議題，Wordpress 團隊在過去幾個月已經開始針對 2.9 進行新功能上的開發，但是在 2.8 branch 的版本如果有安全性的漏洞，官方網站還是會提出修正的，以增加網站的安全。 底下是一些 Release 的安全性改良：
A fix for the Trackback Denial-of-Service attack that is currently being seen. Removal of areas within the code where php code in variables was evaluated. Switched the file upload functionality to be whitelisted for all users including Admins. Retiring of the two importers of Tag data from old plugins 假如您的網站最近有受到攻擊，那可以利用官網提供的弱點掃描工具 WordPress Exploit Scanner 來針對網站檔案以及資料庫內容文章，還有 comment 的資料表，以及所裝的 plugin 檔案進行漏洞檢查。 升級方式很容易，可以參考之前寫的 [wordpress] 快速升級 Upgrade 2.</description></item><item><title>[講義]屏科大 PHP &amp; MySQL 基礎教學投影片</title><link>https://blog.wu-boy.com/2009/10/%E8%AC%9B%E7%BE%A9%E5%B1%8F%E7%A7%91%E5%A4%A7-php-mysql-%E5%9F%BA%E7%A4%8E%E6%95%99%E5%AD%B8%E6%8A%95%E5%BD%B1%E7%89%87/</link><pubDate>Sat, 17 Oct 2009 17:10:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/10/%E8%AC%9B%E7%BE%A9%E5%B1%8F%E7%A7%91%E5%A4%A7-php-mysql-%E5%9F%BA%E7%A4%8E%E6%95%99%E5%AD%B8%E6%8A%95%E5%BD%B1%E7%89%87/</guid><description>這次非常開心受到國立屏東科技大學資管系邀請講課，主題是 PHP &amp;amp; MySQL 基礎介紹，來聽課的學生，就是資管系大三跟碩一的新生，第一次到屏科大，沒想到學校大到很誇張阿，在校園裡面都是騎機車上課，不像在東華大學，只能騎外環道，剩下的只能騎腳踏車，屏科大其實蠻偏僻的，離屏東市有一段距離，大概騎摩托車要 20 分鐘，至少今天回家是被用摩托車送到屏東火車站，感覺屏東還蠻熱鬧的。
這些資管的學生還蠻認真的，基礎實力還不錯，不過還是要在加強一下，看屏科大資管都在學 ASP.net，對於 html 有些基礎，大家好像都蠻喜歡拉物件，說這樣寫程式還蠻快的，不過 PHP 好像沒有類似工具，今天上課蠻順利的，至少大家都聽的懂，課堂作業都有寫出來，還蠻開心的，想聽聽大家對我上課的意見，看來只好等下次上課在問問看他們。</description></item><item><title>利用 PHP MySQL Quota-Tool 來限制 MySQL 存取空間大小</title><link>https://blog.wu-boy.com/2009/10/%E5%88%A9%E7%94%A8-php-mysql-quota-tool-%E4%BE%86%E9%99%90%E5%88%B6-mysql-%E5%AD%98%E5%8F%96%E7%A9%BA%E9%96%93%E5%A4%A7%E5%B0%8F/</link><pubDate>Fri, 09 Oct 2009 04:17:37 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/10/%E5%88%A9%E7%94%A8-php-mysql-quota-tool-%E4%BE%86%E9%99%90%E5%88%B6-mysql-%E5%AD%98%E5%8F%96%E7%A9%BA%E9%96%93%E5%A4%A7%E5%B0%8F/</guid><description>&lt;p>在&lt;a href="http://phorum.study-area.org">酷！學園&lt;/a>發現&lt;a href="http://phorum.study-area.org/index.php/topic,58445.0.html">這篇&lt;/a>，有人問到如何限制 MySQL 的使用空間大小，我第一個想到的就是 &lt;a href="http://linux.vbird.org/linux_basic/0420quota.php">Linux quota&lt;/a> 指令限制大小，看回文有一篇利用 MySQL 來解決此問題：&lt;a href="http://projects.marsching.org/mysql_quota/">MySQL Quota-Tool&lt;/a>，它利用了 MySQL INSERT 跟 CREATE 的權限控管，來達成限制，當資料庫大小超過您所設定的限制，系統就會拔除您的 INSERT 跟 CREATE 權限，如果沒有超過，就會將權限設定回去，基本上非常簡單，首先要先建立一個專屬控管每個資料庫的 database&lt;/p>
&lt;pre class="brush: sql; title: ; notranslate" title="">CREATE TABLE `Quota` (`Db` CHAR(64) NOT NULL,
`Limit` BIGINT NOT NULL,
`Exceeded` ENUM('Y','N') DEFAULT 'N' NOT NULL,
PRIMARY KEY (`Db`), UNIQUE (`Db`));&lt;/pre></description></item><item><title>[新聞] CodeIgniter v1.7.2 Released</title><link>https://blog.wu-boy.com/2009/09/%E6%96%B0%E8%81%9E-codeigniter-v172-released/</link><pubDate>Wed, 16 Sep 2009 14:10:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/09/%E6%96%B0%E8%81%9E-codeigniter-v172-released/</guid><description>CodeIgniter 終於 Release V1.7.2 版本了，官方網站也公佈了此消息，那這次跟 v1.7.2 版本有哪些不一樣呢，我想最主要應該是支援 PHP 5.3.0 了
相容於 PHP 5.3.0 新增 Cart Class 類別 改善 Form helper 函數 新增 is_php() 到 Common functions 來更有善的比較 PHP 版本 無數個 bug 修正 修改 show_error() 函數功能 更多的 bug 修正，可以觀看 change log，我也順便了 send-pr 給 FreeBSD ports maintainer 請他 update 到 1.7.2：ports/138848，台灣的官網也需要來修正了，已經更新了 v1.7.2 上去，至於繁體中文文件方面還沒更新，有時間會把它更新，如果有任何問題，可以先到論壇留言找我。</description></item><item><title>[RHEL]Installing PHP 5.1.x 5.2.x or 5.3.x on RedHat ES5, CentOS 5</title><link>https://blog.wu-boy.com/2009/09/rhelinstalling-php-52x-or-53x-on-redhat-es5-centos-5/</link><pubDate>Tue, 08 Sep 2009 02:34:10 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/09/rhelinstalling-php-52x-or-53x-on-redhat-es5-centos-5/</guid><description>最近幫公司處理一台 RHEL 機器，把原本的 PHP 版本 5.1.6 升級到 5.3.0，不過因為 5.3.0 把很多支援的函數都拿掉了，造成很 open source 套件都沒辦法支援，phpMyAdmin 也要換成 3 版以上才可以運作，PHP 5.3.0 已經不支援很多函數，可以參考 Deprecated features in PHP 5.3.x，有用到 ereg() 或者是 eregi() 都必須統統換成 preg_match()，最後終究因為 json 的關係，把 PHP 升級到 5.2 以上才有支援，參考了一篇 Installing PHP 5.2.x or 5.3.x on RedHat ES5, CentOS 5, etc，作法其實很容易，不用幾個指令就可以完成了
wget http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-3.noarch.rpm
wget http://rpms.famillecollet.com/enterprise/remi-release-5.rpm
rpm -Uvh remi-release-5*.rpm epel-release-5*.rpm 如果是 X86_64 的，請自行更換網址，這裡有些注意的是，你要升級 PHP 請利用下面： yum --enablerepo=remi update php 不過升級的時候，必須把 MySQL 也一併升級，不然會出現錯誤，原本的 MySQL 套件用 yum remove 移除掉，在利用 yum --enablerepo=remi 方式升級 MySQL 跟 PHP 套件，就可以了。 在 RHEL 裡面，PHP 5.</description></item><item><title>[FreeBSD] 取得 FreeBSD CVSUP 的更新狀態</title><link>https://blog.wu-boy.com/2009/08/freebsd-%E5%8F%96%E5%BE%97-freebsd-cvsup-%E7%9A%84%E6%9B%B4%E6%96%B0%E7%8B%80%E6%85%8B/</link><pubDate>Mon, 31 Aug 2009 06:30:01 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/08/freebsd-%E5%8F%96%E5%BE%97-freebsd-cvsup-%E7%9A%84%E6%9B%B4%E6%96%B0%E7%8B%80%E6%85%8B/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/3873839724/" title="FreeBSD CVS Site_1251699923593 (by appleboy46)">&lt;img src="https://i1.wp.com/farm3.static.flickr.com/2548/3873839724_f8dbe78179.jpg?resize=500%2C306&amp;#038;ssl=1" title="FreeBSD CVS Site_1251699923593 (by appleboy46)" alt="FreeBSD CVS Site_1251699923593 (by appleboy46)" data-recalc-dims="1" />&lt;/a> 在 Sayya Joehorn 個人版看到有人實做出偵測台灣 CVSUP Server 更新狀態，以及更新的時間，也有程式碼的釋出，參考這篇：&lt;a href="http://blog.urdada.net/2007/12/24/69/">Script: 取得 FreeBSD CVSUP 的更新狀態&lt;/a>，這篇寫的蠻清楚的，只需要 perl 跟 php 就可以完成，不過在使用過程有些事項必須要注意，在 FreeBSD 6.2 R 之後，已經內建了 &lt;a href="http://www.freshports.org/net/csup/">csup&lt;/a> 指令來更新 ports 或者是核心，所以要在另外安裝上 &lt;a href="http://www.freshports.org/net/cvsup/">cvsup&lt;/a> ports 套件，在 Perl 方面，也先裝 &lt;a href="http://www.freshports.org/net/p5-Net-Rendezvous/">net/p5-Net-Rendezvous&lt;/a> 才可以正確使用。&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title=""># 安裝必備軟體
cd /usr/ports/net/p5-Net-Rendezvous/ &amp;&amp; make install clean
cd /usr/ports/net/cvsup-without-gui &amp;&amp; make install clean&lt;/pre></description></item><item><title>[CodeIgniter] 分享中文官方網站範例程式碼</title><link>https://blog.wu-boy.com/2009/08/codeigniter-%E5%88%86%E4%BA%AB%E4%B8%AD%E6%96%87%E5%AE%98%E6%96%B9%E7%B6%B2%E7%AB%99%E7%AF%84%E4%BE%8B%E7%A8%8B%E5%BC%8F%E7%A2%BC/</link><pubDate>Tue, 18 Aug 2009 16:04:18 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/08/codeigniter-%E5%88%86%E4%BA%AB%E4%B8%AD%E6%96%87%E5%AE%98%E6%96%B9%E7%B6%B2%E7%AB%99%E7%AF%84%E4%BE%8B%E7%A8%8B%E5%BC%8F%E7%A2%BC/</guid><description>之前在高雄開了一堂：[CodeIgniter] Open Source PHP Web Framework 系列講座，在上課過程，我很強調大家可以多多參考網路上的範例來學習，所以找了官方網站的程式碼想分享給大家，希望大家看完程式碼，可以針對 CodeIgniter 的 Model Views Controller 有比較深入的瞭解，如果有不懂的地方，可以來論壇這邊提出問題，我會儘快回答大家，底下是程式碼的下載網址，包含論壇程式 PHPBB3，以及所有影片程式碼，大家可以參考看看： 檔案下載 裡面有需要注意的，就是 .htaccess 檔案：
RewriteEngine on
RewriteBase /
RewriteCond $1 !^(videos|download_files|user_guide|forum|index\.php|admin|css|flash|images|img|includes|js|language|captcha|robots\.txt)
RewriteRule ^(.*)$ index.php/$1 [L,QSA] 裡面會附上 db.sql 檔案，這是資料庫檔案，請麻煩匯入到您的資料庫，然後修改 system/application/config/database.php 內容的資料庫相關資訊，這樣就可以了。</description></item><item><title>[網站] 好站連結 (四)</title><link>https://blog.wu-boy.com/2009/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E5%9B%9B/</link><pubDate>Tue, 28 Jul 2009 07:00:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/07/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E5%9B%9B/</guid><description>PHP
How to create Microsoft Office Documents with PHP
IP 判斷方式
Get a list of all available constants with PHP
Get a list of all available classes with PHP
Get a list of all available functions with PHP
The Google Analytics API and PHP: A series
Google Analytics API PHP Class data method parameters
Dynamically Create Menu With PHP DOM</description></item><item><title>[CodeIgniter] Open Source PHP Web Framework 系列講座</title><link>https://blog.wu-boy.com/2009/07/codeigniter-open-source-php-web-framework-%E7%B3%BB%E5%88%97%E8%AC%9B%E5%BA%A7/</link><pubDate>Mon, 20 Jul 2009 07:28:14 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/07/codeigniter-open-source-php-web-framework-%E7%B3%BB%E5%88%97%E8%AC%9B%E5%BA%A7/</guid><description>update 2009.07.23: 有影音檔可以看了，請點選這裡 7月18日受到 OSSF::自由軟體鑄造場(Open Source Software Foundry)的邀請，在高雄講一場 Open Source PHP Web Framework系列講座 - CodeIgniter (高雄場次) ，我準備了 87 張投影片，包含介紹了 CodeIgniter 目前台灣官方網站的狀況，以及流行 PHP MVC Framework 的比較，大部分時間花在 Controller, Views 身上，還有 helper function, Library Class 教學使用，沒有把 Model 精華部份教完有點可惜，內容可能有點多，一整天六小時的課程把教學消化，好像有點困難了，這也是給我一點警惕，下次教學這部份內容要在改變一下，這樣對於來上課的學員，才不會感到排斥，最後非常感謝酷學園的阿民來幫忙錄影，以及飛亨現場支援，以及讓我有這次機會可以上台分享這幾個月在 CI 上面的使用心得，底下是我這次的上課投影片，如果大家有問題可以到論壇討論，或者是看看繁體中文教學文件，如果對於翻譯教學文件有興趣，可以再跟我聯絡喔。</description></item><item><title>[SQL] MySQL ROW_NUMBER Simulation</title><link>https://blog.wu-boy.com/2009/07/sql-mysql-row_number-simulation/</link><pubDate>Wed, 15 Jul 2009 02:48:34 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/07/sql-mysql-row_number-simulation/</guid><description>&lt;p>在台大 &lt;a href="http://www.ptt.cc/bbs/Database/index.html">PTT Database&lt;/a> 版看到有人問一個問題，我覺得還不錯，問題如下：&lt;a href="http://www.ptt.cc/bbs/Database/M.1247394036.A.A50.html">網頁版&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>小弟在練習做一個系統遇到以下問題 志願 | 系所 | 功能 1 | a | 退選 2 | b | 退選 3 | c | 退選 4 | d | 退選 5 | e | 退選 網頁介面如上(用for迴圈+mysql_fetch_object抓出資料) 報名序號 | 姓名 | 志願1 | 志願2 | 志願3 | 志願4 | 志願5 1001 小王 a b c d e 資料庫欄位內容如上 想請問~若使用者想退選志願3~~照理說用update把志願3欄位清掉 網頁再一次抓資料會變成志願3的系所變空的~(如下表) 志願 | 系所 | 功能 1 | a | 退選 2 | b | 退選 3 | | 退選 4 | d | 退選 5 | e | 退選 有沒有辦法在select的時候排除空的那欄 也就是說抓資料的時候，以上述為例，只抓出4筆，變成下表 志願 | 系所 | 功能 1 | a | 退選 2 | b | 退選 3 | d | 退選 4 | e | 退選&lt;/p>
&lt;/blockquote></description></item><item><title>[CodeIgniter] lighttpd rewrite rule &amp;&amp; apache mod_rewrite</title><link>https://blog.wu-boy.com/2009/07/codeigniter-lighttpd-rewrite-rule-apache-mod_rewrite/</link><pubDate>Thu, 09 Jul 2009 04:05:43 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/07/codeigniter-lighttpd-rewrite-rule-apache-mod_rewrite/</guid><description>&lt;p>&lt;a href="http://codeigniter.com">CodeIgniter&lt;/a> 要移除網址列存在的 index.php，&lt;a href="http://www.apache.org/">apache&lt;/a> 必須使用 &lt;a href="http://httpd.apache.org/docs/2.0/mod/mod_rewrite.html">mod_rewrite&lt;/a> 寫入 .htaccess 的方式來達成，&lt;a href="http://www.lighttpd.net/">lighttpd&lt;/a> 也是有支援 rewrite，可以參考官方文件：&lt;a href="http://redmine.lighttpd.net/wiki/lighttpd/Docs:ModRewrite">Module: mod_rewrite&lt;/a>，設定方法很容易。&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">$HTTP["host"] == "mimi.twgg.org" {
server.document-root = "/var/www/html/MLB/"
url.rewrite = (
"^/images/.*$" => "$0",
"^/includes/.*$" => "$0",
"^/(.*)$" => "index.php/$1"
)
accesslog.filename = "/var/log/lighttpd/mimi.twgg.org-access_log"
}&lt;/pre></description></item><item><title>[PHP] Gallery 3.0 Beta 1 使用 Kohana MVC Framework</title><link>https://blog.wu-boy.com/2009/06/php-gallery-30-beta-1-%E4%BD%BF%E7%94%A8-kohana-mvc-framework/</link><pubDate>Fri, 26 Jun 2009 02:35:43 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/06/php-gallery-30-beta-1-%E4%BD%BF%E7%94%A8-kohana-mvc-framework/</guid><description>Gallery 3.0 Beta 1 出來了，在 roga’s blog，看到這篇訊息，gallery 3 捨去 php smaty template engine，而改用 Kohana MVC Framework 這套 base on CodeIgniter 的 Framework，在 Gallery3:FAQ 裡面有提到為什麼會使用 Kohana 這套 MVC，gallery 團隊找尋了許多 MVC 的架構來幫助開發整個相簿系統，包含了 CakePHP、Zend Framework、Prado、Symfony、CodeIgniter，最後經過許多人的討論，選用了 Kohana 這套 MVC，原本打算考慮 CI 的，雖然 CI 支援 PHP4 跟 PHP5，以及它非常的小，對於效能方面也非常的好，但是並不支援 PHP5 的 exception，畢且有些少數的 Structure 只有支援 PHP4，所以就不被他們採納了，再來 Zend Framework 因為包含了 1705 個檔案，相當龐大，效能比 CI 少了 200-300%，雖然 ZF 文件相當豐富，不過沒有良好的 example 範例，所以導致 gallery 團隊遇到很多挫折，XDD。 最後選擇了 Kohana，雖然 Kohana 效能輸給 CI，不過這之間的差異極小，Kohana 也有 support PHP5 的 exception，Kohana 文件比 CI 還要少了些，不過對 gallery 團隊已經相當足夠了。底下有一篇各大 Framework 的效能比較：PHP framework comparison benchmarks，還有另一篇：Kohana vs CodeIgniter: Speed and Memory Usage Performance Benchmark</description></item><item><title>[PHP] FreeBSD Sphinx 繁體中文全文檢索 on PHP</title><link>https://blog.wu-boy.com/2009/06/php-freebsd-sphinx-%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87%E5%85%A8%E6%96%87%E6%AA%A2%E7%B4%A2-on-php/</link><pubDate>Sat, 20 Jun 2009 05:10:32 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/06/php-freebsd-sphinx-%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87%E5%85%A8%E6%96%87%E6%AA%A2%E7%B4%A2-on-php/</guid><description>&lt;p>&lt;a href="http://sphinxsearch.com/">&lt;img class="alignleft size-full wp-image-1467" title="sphinx" src="https://i0.wp.com/blog.wu-boy.com/wp-content/uploads/2009/06/sphinx.jpg?resize=200%2C51" alt="sphinx" data-recalc-dims="1" />&lt;/a> 最近想說幫之前替代役單位來把全文檢索的中文部份搞定，所以找了一些全文檢索的 open source，挑了這套網路上評價還不錯的 &lt;a href="http://sphinxsearch.com/">Sphinx&lt;/a>，目前 Sphinx 支援的作業系統如下：&lt;/p>
&lt;ul>
&lt;li>Linux 2.4.x, 2.6.x (various distributions)&lt;/li>
&lt;li>Windows 2000, XP&lt;/li>
&lt;li>FreeBSD 4.x, 5.x, 6.x&lt;/li>
&lt;li>NetBSD 1.6, 3.0&lt;/li>
&lt;li>Solaris 9, 11&lt;/li>
&lt;li>Mac OS X 雖然上面寫 FreeBSD 只支援到 6.X，但是我測試是在 FreeBSD 7.1-RELEASE-p6 的環境，所以相當 ok 的，底下是我安裝在 FreeBSD 的心得筆記，PHP 官網上面有支援&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="http://tw.php.net/manual/en/refs.search.php">Search Engine Extensions&lt;/a> 的介紹，包含了 &lt;a href="http://tw.php.net/manual/en/book.mnogosearch.php">mnoGoSearch&lt;/a>、&lt;a href="http://tw.php.net/manual/en/book.sphinx.php">Sphinx&lt;/a> — Sphinx Client、&lt;a href="http://tw.php.net/manual/en/book.swish.php">Swish&lt;/a> — Swish Indexing，可以利用 pecl 來安裝 Sphinx，目前版本：0.9.9-rc1。&lt;/p></description></item><item><title>[網站] 好站連結 (三)</title><link>https://blog.wu-boy.com/2009/06/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%89/</link><pubDate>Thu, 11 Jun 2009 03:01:12 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/06/%E7%B6%B2%E7%AB%99-%E5%A5%BD%E7%AB%99%E9%80%A3%E7%B5%90-%E4%B8%89/</guid><description/></item><item><title>[CodeIgniter] 使用者註冊 auth code 亂數認證碼圖片</title><link>https://blog.wu-boy.com/2009/06/codeigniter-%E4%BD%BF%E7%94%A8%E8%80%85%E8%A8%BB%E5%86%8A-auth-code-%E8%AA%8D%E8%AD%89%E7%A2%BC/</link><pubDate>Tue, 09 Jun 2009 14:38:39 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/06/codeigniter-%E4%BD%BF%E7%94%A8%E8%80%85%E8%A8%BB%E5%86%8A-auth-code-%E8%AA%8D%E8%AD%89%E7%A2%BC/</guid><description>&lt;p>我想這已經是網站最基本的技術，防止機器人大量註冊，或者是灌爆留言板，之前寫了兩篇製作認證碼的教學：&lt;a href="http://blog.wu-boy.com/2009/01/05/701/">[PHP]製作類似 google 網頁認證碼&lt;/a>，&lt;a href="http://blog.wu-boy.com/2008/10/28/572/">[PHP] 好用的留言板 驗證碼 功能&lt;/a>，這篇是要寫如何實做把&lt;a href="http://blog.wu-boy.com/2009/01/05/701/">第一篇教學&lt;/a>整合到 &lt;a href="http://www.codeigniter.com.tw/">CodeIgniter&lt;/a> 系統裡面，來筆記一下，以後用到就相當方便了，CodeIgniter 在 path 路徑上面有小 bug，查了國外討論區發現了這篇 &lt;a href="http://codeigniter.com/forums/viewthread/63915/">Path to CSS doesn’t work a second time&lt;/a>，不過這並沒有解決我的問題，主機的網址是 &lt;span style="color: #0000ff;">&lt;a href="http://xxxxx.xxx/path/">http://xxxxx.xxx/path/&lt;/a>&lt;/span>，所有的 CI 檔案都是放在 path 目錄底下，包含圖片是 &lt;span style="color: #0000ff;">&lt;a href="http://xxxxx.xxx/path/images/">http://xxxxx.xxx/path/images/&lt;/a>&lt;/span>，在 View 裡面基本上只要寫 &lt;span style="color: #008000;">&lt;img src='https://blog.wu-boy.com/images/xx.gif'>&lt;/span> 這樣就可以顯示圖片了，但是要改成 &lt;span style="color: #008000;">&lt;img src='https://blog.wu-boy.com/path/images/xx.gif'>&lt;/span> 才能，但是我的 index.php 是放在 /path/ 裡面，以絕對路徑跟相對路徑來想，都是不太合理的，所以後來用 &lt;span style="color: #ff0000;">&lt;img src="&lt;?=base_url();?>public/images/find.png" alt="" />&lt;/span> 來解決，不過這是暫時的問題，我比較龜毛，喜歡寫短一點的 code。 如何裝上類似 google 的認證碼呢，首先打開 index.php 檔案&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">/* 算出 index.php 根目錄 */
define('Document_root',dirname(__FILE__));
&lt;/pre></description></item><item><title>[CodeIgniter] Text 補助函數 character_limiter 不適用於中文字</title><link>https://blog.wu-boy.com/2009/05/codeigniter-text-%E8%A3%9C%E5%8A%A9%E5%87%BD%E6%95%B8-character_limiter-%E4%B8%8D%E9%81%A9%E7%94%A8%E6%96%BC%E4%B8%AD%E6%96%87%E5%AD%97/</link><pubDate>Fri, 29 May 2009 07:43:11 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/05/codeigniter-text-%E8%A3%9C%E5%8A%A9%E5%87%BD%E6%95%B8-character_limiter-%E4%B8%8D%E9%81%A9%E7%94%A8%E6%96%BC%E4%B8%AD%E6%96%87%E5%AD%97/</guid><description>&lt;p>在 &lt;a href="http://www.codeigniter.com.tw/">CodeIgniter&lt;/a> 裡面的 &lt;a href="http://www.codeigniter.com.tw/user_guide/helpers/text_helper.html">Text 補助函數&lt;/a>，目前只適用於英文字體，不支援 utf-8 或者是簡體字體，bite 數超過2的都會出問題，當然是因為這是國外的 mvc 所以也沒有考慮到這麼週到就是了，也不是沒有辦法解決，之前就用了PHP官方網站所提供的一個函式來正確切割中文字串，就是要利用 &lt;a href="http://tw.php.net/ord">ord&lt;/a> 判斷 ASCII 編碼範圍，或者是可以使用 &lt;a href="http://tw.php.net/mb_substr">mb_substr&lt;/a> 函式正確切割，之前寫一篇可以參考看看：&lt;a href="http://blog.wu-boy.com/2007/05/18/104/">[PHP] 如何切割中文標題&lt;/a>。 底下是原本 CodeIgniter 所提供的 Text 函數&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">if ( ! function_exists('character_limiter'))
{
function character_limiter($str, $n = 500, $end_char = '&amp;#8230;')
{
if (strlen($str) &lt; $n)
{
return $str;
}
$str = preg_replace("/\s+/", ' ', str_replace(array("\r\n", "\r", "\n"), ' ', $str));
if (strlen($str) &lt;= $n)
{
return $str;
}
$out = "";
foreach (explode(' ', trim($str)) as $val)
{
$out .= $val.' ';
if (strlen($out) >= $n)
{
$out = trim($out);
return (strlen($out) == strlen($str)) ? $out : $out.$end_char;
}
}
}
}&lt;/pre></description></item><item><title>[CodeIgniter] 多國語言網站製作，重複 load 相同 language?</title><link>https://blog.wu-boy.com/2009/05/codeigniter-%E5%A4%9A%E5%9C%8B%E8%AA%9E%E8%A8%80%E7%B6%B2%E7%AB%99%E8%A3%BD%E4%BD%9C%EF%BC%8C%E9%87%8D%E8%A4%87-load-%E7%9B%B8%E5%90%8C-language/</link><pubDate>Sat, 23 May 2009 13:43:32 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/05/codeigniter-%E5%A4%9A%E5%9C%8B%E8%AA%9E%E8%A8%80%E7%B6%B2%E7%AB%99%E8%A3%BD%E4%BD%9C%EF%BC%8C%E9%87%8D%E8%A4%87-load-%E7%9B%B8%E5%90%8C-language/</guid><description>&lt;p>目前正在研究網站的多國語系寫法，研究了 &lt;a href="http://www.codeigniter.com.tw">CodeIgniter&lt;/a> 的 Language class 用法，可以看線上中文文件：&lt;a href="http://www.codeigniter.com.tw/user_guide/libraries/language.html">Language 類別&lt;/a>，目前遇到一個疑問，在單一 PHP 檔案讀取，不可以同時讀取相同的 Language file 檔案，這樣是完全沒有作用的，以底下的例子來說，我在 &lt;span style="color: #008000;">application/language&lt;/span> 目錄底下放了三個語系資料夾，English、zh-TW、zh-CN 這三個資料夾，裡面分別放路 &lt;span style="color: #ff0000;">vbs_lang.php&lt;/span> 檔案，為了要區別各國的語系檔案，要分別開資料夾放入，在 CI 文件裡面都寫的很清楚，架構如下&lt;/p>
&lt;ul>
&lt;li>application/language/English&lt;/li>
&lt;li>application/language/zh-TW&lt;/li>
&lt;li>application/language/zh-CN&lt;/li>
&lt;/ul></description></item><item><title>[PHP] Class: RSS Generator 產生器</title><link>https://blog.wu-boy.com/2009/05/php-class-rss-generator-%E7%94%A2%E7%94%9F%E5%99%A8/</link><pubDate>Fri, 08 May 2009 03:48:42 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/05/php-class-rss-generator-%E7%94%A2%E7%94%9F%E5%99%A8/</guid><description>最近在寫新聞系統，需要 RSS 線上訂閱的功能，所以在 PHP Classes 找到了 RSS Generator 產生器，這產生器使用起來也相當方便，在測試的時候剛好遇到一個問題，就是要對內容做 escape 的動作，避免 RSS 爛掉，看到 gslin 大的發表一篇 WordPress 的 exporter 裡面寫到 WordPress 的產生 xml 格式沒有經過 escape 造成程式亂掉『Exporter does not escape url』，當然解決方法也很容易，那就是用 htmlspecialchars，避免 url 裡面帶有 &amp;amp; 符號。 解決方法很容易，如下就可以了
link = htmlentities($url, ENT_QUOTES);
?</description></item><item><title>[CodeIgniter] Web Framework 非官方繁體中文討論區成立</title><link>https://blog.wu-boy.com/2009/04/codeigniter-web-framework-%E9%9D%9E%E5%AE%98%E6%96%B9%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87%E8%A8%8E%E8%AB%96%E5%8D%80%E6%88%90%E7%AB%8B/</link><pubDate>Thu, 30 Apr 2009 01:41:46 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/04/codeigniter-web-framework-%E9%9D%9E%E5%AE%98%E6%96%B9%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87%E8%A8%8E%E8%AB%96%E5%8D%80%E6%88%90%E7%AB%8B/</guid><description>&lt;p>&lt;a href="http://www.codeigniter.org.tw/" target="_blank">&lt;img src="https://i1.wp.com/www.codeigniter.org.tw/images/design/ci_logo2.gif?w=840" alt="" data-recalc-dims="1" />&lt;/a> &lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a> 是我最近正在研究的一套 Web &lt;a href="http://en.wikipedia.org/wiki/Model_View_Controller">MVC&lt;/a> Framework，為什麼會選擇這一套來推廣呢，目前在網路上大家所推的 MVC Framework，無非是 &lt;a href="http://en.wikipedia.org/wiki/Zend_Framework" title="Zend Framework">Zend Framework&lt;/a>、&lt;a href="http://en.wikipedia.org/wiki/CakePHP" title="CakePHP">CakePHP&lt;/a>、&lt;a href="http://en.wikipedia.org/wiki/Kohana_%28web_framework%29" title="Kohana (web framework)">Kohana&lt;/a>、&lt;a href="http://en.wikipedia.org/w/index.php?title=Yii_PHP_Framework&amp;amp;action=edit&amp;amp;redlink=1" title="Yii PHP Framework (page does not exist)">Yii PHP Framework&lt;/a>{.new}…等，這些都算是國內常用的 MVC 架構，那效能方面可以參考：&lt;a href="http://avnetlabs.com/php/php-framework-comparison-benchmarks" target="_blank">PHP framework comparison benchmarks&lt;/a>，這篇寫到利用 &lt;a href="http://www.hpl.hp.com/research/linux/httperf/">httperf&lt;/a> 測試 Web Performance，跑了很多效能方面的數據出來，這些數據也看看就好，大家還是都會選擇自己上手的 Framework 來使用，那今天我就是來推廣 &lt;a href="http://www.codeigniter.org.tw/" target="_blank">CodeIgniter&lt;/a> 這套 Web Framwork。&lt;/p></description></item><item><title>[PHP] Web Framework : CodeIgniter MySQL Database 使用教學</title><link>https://blog.wu-boy.com/2009/04/php-web-framework-codeigniter-mysql-database-%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%B8/</link><pubDate>Mon, 20 Apr 2009 06:26:32 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/04/php-web-framework-codeigniter-mysql-database-%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%B8/</guid><description>&lt;p>繼上一篇 &lt;a href="http://blog.wu-boy.com/2009/04/17/1173/">[PHP] 好用 Web Framework : CodeIgniter 安裝教學&lt;/a> 之後，這次來紀錄一下 &lt;a href="http://codeigniter.com/user_guide/database/index.html">Database Class&lt;/a> 的用法，我想官方網站都已經寫的很詳細了，就大概快速講一下我的一些用法跟心得，其實最主要講的是內建的 &lt;a href="http://codeigniter.com/user_guide/database/active_record.html">Active Record Class&lt;/a>，它可以快速撰寫 SQL 語法，不必打 where 或者是 From 這些字眼，insert update select 都可以利用 &lt;a href="http://codeigniter.com/user_guide/database/active_record.html">Active Record Class&lt;/a> 很簡單的撰寫出來喔，它也幫忙簡單的檢查 escape SQL Injection，舉的簡單例子大概就知道了： 假設底下這個簡單的 join 一個表格的 select 語法&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">$query = $this->db->query("SELECT a.news_id, a.news_name, a.add_time FROM project_news a
left join project_news_categories b on a.categories_id = b.categories_id
where news_id = '".$id."' order by news_top DESC, a.add_time DESC
");&lt;/pre> 利用
&lt;p>&lt;a href="http://codeigniter.com/user_guide/database/active_record.html">Active Record Class&lt;/a> 可以改寫成：&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">$this->db->select('a.news_id, a.news_name, a.add_time');
$this->db->from('project_news a');
$this->db->join('project_news_categories b', 'a.categories_id = b.categories_id', 'left');
$this->db->order_by("news_top DESC, a.add_time DESC");
$this->db->where('news_id', $id); &lt;/pre></description></item><item><title>[PHP] 好用 Web Framework : CodeIgniter 安裝教學</title><link>https://blog.wu-boy.com/2009/04/php-%E5%A5%BD%E7%94%A8-web-framework-codeigniter-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/</link><pubDate>Fri, 17 Apr 2009 14:53:20 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/04/php-%E5%A5%BD%E7%94%A8-web-framework-codeigniter-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/</guid><description>&lt;p>最近都在 survey 一堆 PHP Web Framework，自己想學一套可以馬上上手的，其實因為目前在 PHP 的開發上面講求速度，以及程式的可維護性，雖然我自己有一套自己的開發方法，包含包好的 SQL Class 以及上傳模組，不過還是覺得熟悉一套 MVC 架構的寫法，將來維護或者是團隊合作方面會比較好分工，在小專案上面還可以自己來，但是大型專案就必須靠 MVC Framework 了，畢竟一個人寫程式，永遠比不上團隊合作，紀錄一下最近找到的一些網路比較多人用的 FrameWork：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.symfony-project.org/" target="_blank">Symfony&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cakephp.org/" target="_blank">CakePHP&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://codeigniter.com/" target="_blank">CodeIgniter&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://framework.zend.com/" target="_blank">Zend Framework&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://docs.kohanaphp.com/" target="_blank">Kohana&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>MySQL count(“欄位”) vs mysql_num_rows 速度？</title><link>https://blog.wu-boy.com/2009/03/mysql-count%E6%AC%84%E4%BD%8D-vs-mysql_num_rows-%E9%80%9F%E5%BA%A6%EF%BC%9F/</link><pubDate>Mon, 30 Mar 2009 11:28:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/mysql-count%E6%AC%84%E4%BD%8D-vs-mysql_num_rows-%E9%80%9F%E5%BA%A6%EF%BC%9F/</guid><description>&lt;p>在 FreeBSD ports 裡面還沒看到 chinese/phpbb3 的 ports，目前只有 &lt;a href="http://chinsan2.twbbs.org/wp/">chinsan&lt;/a> 維護的 &lt;a href="http://www.freshports.org/chinese/phpbb-tw/">chinese/phpbb-tw ports&lt;/a>，之前版本是 2.0.22 版本，後來我 commit 到 2.0.23 版本，不過 PHPBB 官網已經不再維護或者是開發 2.0.X 版本了，現在以 PHPBB3 為版本開發，也針對了 PHP6 跟 PHP 5 的相容性做了很大的改變，所以基本上如果在 2.0.X 版本加了很多外掛，那就沒辦法升級到 phpBB3 版本了，畢竟 code 實在改變太多了，找個時間把 chinese/phpbb3-tw commit 進去，不然也可以到 &lt;a href="http://www.freshports.org/www/phpbb3/">www/phpbb3&lt;/a> 做安裝。 為什麼會提到 &lt;a href="http://www.phpbb.com/">phpBB&lt;/a> 呢，今天在 trace &lt;a href="http://www.phpbb.com/">phpBB3&lt;/a> 的 code，發現原本在 phpBB2 裡面有支援 &lt;a href="http://tw2.php.net/mysql-num-rows">mysql_num_rows&lt;/a> function，用來讓程式可以取出 sql 的個數，不過在 &lt;a href="http://www.phpbb.com/">phpBB3&lt;/a> 竟然就把這個 function 拿掉了。 phpBB2 mysql4.php 程式：&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">function sql_numrows($query_id = 0)
{
if( !$query_id )
{
$query_id = $this->query_result;
}
return ( $query_id ) ? mysql_num_rows($query_id) : false;
}&lt;/pre></description></item><item><title>[PHP] Zend 使用 Google Calendar API – 新增、刪除事件 – END</title><link>https://blog.wu-boy.com/2009/03/php-zend-%E4%BD%BF%E7%94%A8-google-calendar-api-%E6%96%B0%E5%A2%9E%E3%80%81%E5%88%AA%E9%99%A4%E4%BA%8B%E4%BB%B6-end/</link><pubDate>Sun, 29 Mar 2009 01:00:09 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/php-zend-%E4%BD%BF%E7%94%A8-google-calendar-api-%E6%96%B0%E5%A2%9E%E3%80%81%E5%88%AA%E9%99%A4%E4%BA%8B%E4%BB%B6-end/</guid><description>&lt;p>這篇算是 &lt;a href="http://code.google.com/apis/calendar/">Google Calendar API&lt;/a> 的結尾文章了，只剩下新增、刪除兩個功能尚未說明，那這兩個功能野蠻簡單的，底下就來介紹如何新增單一事件功能，看看是否要增另外新檔案放 form 的表單，我是把表單放入 index.php 再把資料傳送到 news.php 此檔案，先介紹 form 表單：&lt;/p>
&lt;pre class="brush: xml; title: ; notranslate" title="">&lt;/pre></description></item><item><title>[PHP] Zend 使用 Google Calendar API – 編輯事件</title><link>https://blog.wu-boy.com/2009/03/php-zend-%E4%BD%BF%E7%94%A8-google-calendar-api-%E7%B7%A8%E8%BC%AF%E4%BA%8B%E4%BB%B6/</link><pubDate>Sat, 28 Mar 2009 01:41:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/php-zend-%E4%BD%BF%E7%94%A8-google-calendar-api-%E7%B7%A8%E8%BC%AF%E4%BA%8B%E4%BB%B6/</guid><description>&lt;p>上一篇介紹了瀏覽 Google Calendar API 範圍內所有的事件，有沒有發現在 index.php 就有瀏覽單一事件的連結，我們透過 API 可以取得單一事件的 evenID，取得的方式就是透過 &lt;a href="http://tw2.php.net/basename">basename&lt;/a> 函式：&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">basename($event->id->text)&lt;/pre> 我們可以利用 $_GET 方式讀取到 evenID 值，傳送到 event.php 來接收
&lt;pre class="brush: php; title: ; notranslate" title="">$eventId = ( isset($_POST['id']) ) ? $_POST['id'] : $_GET['id'];&lt;/pre> 1. 新增 event.php 檔案，寫入開頭：
&lt;pre class="brush: php; title: ; notranslate" title="">&lt;?php
include('config.inc.php');
/*
* 首頁傳來的 event id 值
*/
$eventId = ( isset($_POST['id']) ) ? $_POST['id'] : $_GET['id'];
$service = Zend_Gdata_Calendar::AUTH_SERVICE_NAME;
$client = Zend_Gdata_ClientLogin::getHttpClient($googleAccount, $googlePassword, $service);
/*
* 讀取單一事件資料
*/
$eventEntry = getEvent($client, $eventId);
/*
* 讀取單一事件地點
*/
foreach ($eventEntry->where as $where) {
$whereValue = $where->valueString;//地點
}
?>&lt;/pre></description></item><item><title>[PHP] Zend 使用 Google Calendar API – 瀏覽事件</title><link>https://blog.wu-boy.com/2009/03/php-zend-%E4%BD%BF%E7%94%A8-google-calendar-api-%E7%80%8F%E8%A6%BD%E4%BA%8B%E4%BB%B6/</link><pubDate>Fri, 27 Mar 2009 04:09:30 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/php-zend-%E4%BD%BF%E7%94%A8-google-calendar-api-%E7%80%8F%E8%A6%BD%E4%BA%8B%E4%BB%B6/</guid><description>&lt;p>昨天寫了一篇 &lt;a href="http://blog.wu-boy.com/2009/03/26/1075/">[PHP] Zend 使用 Google Calendar API - 環境建立架設&lt;/a>，相信應該是非常簡單才對，那今天來介紹一下實做 Google Calendar API 的瀏覽、新增、刪除、修改事件的功能，在官方網站都有詳細的 API 功能介紹，我只不過把功能整合完整一點，詳細請看 &lt;a href="http://code.google.com/apis/calendar/docs/1.0/developers_guide_php.html">Google Calendar API With PHP&lt;/a>。 1. 瀏覽功能：建立 index.php&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">/*
* include 昨天新增的config.inc.php 檔案
*/
include('config.inc.php');
/*
* 提供Calendar 的服務名稱
*/
$service = Zend_Gdata_Calendar::AUTH_SERVICE_NAME;
/*
* 登入帳號密碼
*/
$client = Zend_Gdata_ClientLogin::getHttpClient($googleAccount, $googlePassword, $service);&lt;/pre></description></item><item><title>[PHP] Zend Framework 安裝筆記教學 Appserv + Zend Framework (一)</title><link>https://blog.wu-boy.com/2009/03/php-zend-framework-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98%E6%95%99%E5%AD%B8-appserv-zend-framework-%E4%B8%80/</link><pubDate>Tue, 24 Mar 2009 02:33:33 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/php-zend-framework-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98%E6%95%99%E5%AD%B8-appserv-zend-framework-%E4%B8%80/</guid><description>&lt;p>今天在公司上班需要用到 &lt;a href="http://framework.zend.com">Zend Framework&lt;/a> 這一套 MVC 的軟體，用來開發 &lt;a href="http://code.google.com/intl/zh-TW/apis/calendar/">Google Calendar APIs&lt;/a>，這 API 是用 Zend Framework 下去寫得，在 &lt;a href="http://code.google.com/intl/zh-TW/apis/calendar/docs/1.0/developers_guide_php.html">Google 文件&lt;/a> 說的很清楚，那底下來介紹一下安裝過程吧，首先環境要先有 Apache + PHP + MySQL，我本身用 &lt;a href="http://www.appservnetwork.com/">Appserv&lt;/a> 懶人套件，我是用 AppServ 2.5.10 裡面包含底下：&lt;/p>
&lt;ul>
&lt;li>Apache 2.2.8&lt;/li>
&lt;li>PHP 5.2.6&lt;/li>
&lt;li>MySQL 5.0.51b&lt;/li>
&lt;li>phpMyAdmin-2.10.3 1. 先修改 apache 設定 httpd.conf&lt;/li>
&lt;/ul>
&lt;pre class="brush: bash; title: ; notranslate" title="">#LoadModule rewrite_module modules/mod_rewrite.so&lt;/pre> 改成 unmark 掉
&lt;pre class="brush: bash; title: ; notranslate" title="">LoadModule rewrite_module modules/mod_rewrite.so&lt;/pre> 修改 include_path 在 php.ini 裡面，或者是利用
&lt;p>&lt;a href="http://tw2.php.net/set_include_path">set_include_path&lt;/a> 來修改 2. 開始安裝 Zend Framework，首先去 &lt;a href="http://framework.zend.com/download/latest">官方網站下載&lt;/a>，目前版本：&lt;a href="http://framework.zend.com">Zend Framework&lt;/a> 1.7.7，了解 &lt;a href="http://zh.wikipedia.org/wiki/MVC">MVC&lt;/a> 架構。可以參考：&lt;a href="http://www.jaceju.net/resources/webmvc/">透視 WebMVC&lt;/a> 這篇。&lt;/p></description></item><item><title>[Windows] Appserv 安裝 pear 套件</title><link>https://blog.wu-boy.com/2009/03/windows-appserv-%E5%AE%89%E8%A3%9D-pear-%E5%A5%97%E4%BB%B6/</link><pubDate>Sat, 14 Mar 2009 10:49:33 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/windows-appserv-%E5%AE%89%E8%A3%9D-pear-%E5%A5%97%E4%BB%B6/</guid><description>&lt;p>最近要在 Windows 上面安裝 &lt;a href="http://www.apache.org/">Apache&lt;/a> + &lt;a href="http://www.mysql.com/">MySQL&lt;/a> + &lt;a href="http://www.php.net">PHP&lt;/a>，我選擇利用懶人包安裝方法：&lt;a href="http://www.appservnetwork.com/">Appserv&lt;/a>，目前版本為 AppServ 2.5.10 跟 AppServ 2.6.0，如果您要寫 PHP5 的話，就選擇安裝 AppServ 2.5.10，目前支援到 PHP 5.2.6，不過我上次已經看到 &lt;a href="http://blog.wu-boy.com/2009/03/01/842/">PHP 5.2.9 Released&lt;/a> 了，如果想要支援 PHP6，那就選擇 AppServ 2.6.0 這個版本，不過我建議新手可以安裝 AppServ 2.5.10，這個版本比較穩定，安裝好之後，也有支援 phpMyAdmin，底下是 2.5.10 支援的套件：&lt;/p>
&lt;blockquote>
&lt;p>* Apache 2.2.8 * PHP 5.2.6 * MySQL 5.0.51b * phpMyAdmin-2.10.3 今天要安裝 pear 的套件在 Windows 上面，不過不用緊張，因為 Appserv 已經把 &lt;a href="http://pear.php.net">Pear&lt;/a> 的模組包進來裡面了，只要執行 .bat 檔，按照視窗，就可以完成安裝了，自己平常有用 Pear 的 &lt;a href="http://blog.wu-boy.com/2009/01/03/677/">HTTP_Upload 多重檔案上傳 Multiple files upload&lt;/a>，跟 &lt;a href="http://blog.wu-boy.com/2007/12/18/129/">PEAR - PHP Mail and Mail_Mime 模組&lt;/a>，底下就是 Windows 的安裝方法：&lt;/p>
&lt;/blockquote></description></item><item><title>PHP 5.2.9 Released!</title><link>https://blog.wu-boy.com/2009/03/php-529-released/</link><pubDate>Sun, 01 Mar 2009 05:41:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/03/php-529-released/</guid><description>PHP 在官網時間 26-Feb-2009 發佈 PHP 5.2.9 Released，這次的 Release 主要是在改善安全性跟修正超過 50 bug list，最主要的安全性修正如下： Security Enhancements and Fixes in PHP 5.2.9:
* Fixed security issue in imagerotate(), background colour isn’t validated correctly with a non truecolour image. Reported by Hamid Ebadi, APA Laboratory (Fixes CVE-2008-5498). (Scott) * Fixed a crash on extract in zip when files or directories entry names contain a relative path. (Pierre) * Fixed explode() behavior with empty string to respect negative limit.</description></item><item><title>[FreeBSD] 利用 portmaster 升級 PHP 5.26 -> 5.28</title><link>https://blog.wu-boy.com/2009/02/freebsd-%E5%88%A9%E7%94%A8-portmaster-%E5%8D%87%E7%B4%9A-php-526-528/</link><pubDate>Mon, 23 Feb 2009 12:14:48 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/02/freebsd-%E5%88%A9%E7%94%A8-portmaster-%E5%8D%87%E7%B4%9A-php-526-528/</guid><description>&lt;p>之前在 &lt;a href="http://blog.gslin.org">大神&lt;/a> 那邊看到一篇 升級 &lt;a href="http://blog.gslin.org/archives/2008/12/10/1879/">PHP 5.2.8 的一些小細節&lt;/a>，就來把我的機器升級一下，發現 php 5.2.7 之後已經把 pcre extension 納入在裡面，參考 /usr/ports/UPDATING 裡面的  20081211 這個項目，可以利用 &lt;a href="http://www.freshports.org/ports-mgmt/portupgrade/">portupgrade&lt;/a> 或者是 &lt;a href="http://www.freshports.org/ports-mgmt/portmaster/">portmaster&lt;/a> 來升級，之前都是利用 ruby 寫的 portupgrade 來升級系統或者是更新安全性，現在利用 portmaster 這一套也是不錯用，portmaster 是用 sh 寫出來的，在 gslin 大神這一篇：&lt;a href="http://blog.gslin.org/archives/2007/03/05/1113/">portupgrade、portmaster、portconf&lt;/a> 說到速度方面比 portupgrade 還要好，這我沒有實際測試過，自己在實際用了一下，還蠻方便的。 安裝 &lt;a href="http://www.freshports.org/ports-mgmt/portmaster/">portmaster&lt;/a> 跟 &lt;a href="http://www.freshports.org/ports-mgmt/portconf">portconf&lt;/a> 搭配：&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">cd /usr/ports/ports-mgmt/portconf
make install clean
cd /usr/ports/ports-mgmt/portmaster
make install clean&lt;/pre></description></item><item><title>[jQuery] Confirm Plugin 動態新增表單欄位</title><link>https://blog.wu-boy.com/2009/02/jquery-confirm-plugin%EF%BC%8C%E5%8B%95%E6%85%8B%E6%96%B0%E5%A2%9E%E8%A1%A8%E5%96%AE%E6%AC%84%E4%BD%8D/</link><pubDate>Wed, 18 Feb 2009 03:04:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/02/jquery-confirm-plugin%EF%BC%8C%E5%8B%95%E6%85%8B%E6%96%B0%E5%A2%9E%E8%A1%A8%E5%96%AE%E6%AC%84%E4%BD%8D/</guid><description>&lt;p>最近在實做多重檔案上傳，寫過一篇 &lt;a href="http://blog.wu-boy.com/2009/01/03/677/" target="_blank">[PHP] pear 模組 HTTP_Upload 多重檔案上傳 Multiple files upload&lt;/a>，那一開始我先設定只能上傳5個檔案，後來想想動態的話比較方便，畢竟現在網站都講求 web2.0，所以就利用 &lt;a href="http://jquery.com/">jQuery&lt;/a> 來動態新增 input file 欄位，作法其實很簡單，不難的喔。其實還有 &lt;a href="http://nadiana.com/jquery-confirm-plugin">jQuery Confirm Plugin&lt;/a> 可以利用它來確定使用者是否刪除檔案。 之前介紹的上傳檔案 html 部份：&lt;/p>
&lt;pre class="brush: xml; title: ; notranslate" title="">
&lt;/pre></description></item><item><title>[PHP] 取得圖片大小長寬資訊</title><link>https://blog.wu-boy.com/2009/02/php-%E5%8F%96%E5%BE%97%E5%9C%96%E7%89%87%E5%A4%A7%E5%B0%8F%E9%95%B7%E5%AF%AC%E8%B3%87%E8%A8%8A/</link><pubDate>Mon, 16 Feb 2009 11:34:52 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/02/php-%E5%8F%96%E5%BE%97%E5%9C%96%E7%89%87%E5%A4%A7%E5%B0%8F%E9%95%B7%E5%AF%AC%E8%B3%87%E8%A8%8A/</guid><description>今天在 批踢踢實業坊 裡面的 PHP 版，看到有人問到如何取得圖片的資訊，例如：大小，長寬…等，那推文的幾乎都是推利用 PHP function GetImageSize，但是 buganini 版友推 imagemagick 裡面的 identify command line 這個功能，我覺得相當不錯， imagemagic convert 支援強大的轉圖功能，不只能壓縮圖片大小，也可以觀看圖片資訊，推薦給大家使用。
#
# 利用 identify 取得圖片大小及長寬
identify books.gif
books.gif GIF 54x54 54x54+0+0 PseudoClass 256c 8-bit 1.66211kb</description></item><item><title>[PHP]製作類似 google 網頁認證碼</title><link>https://blog.wu-boy.com/2009/01/php%E8%A3%BD%E4%BD%9C%E9%A1%9E%E4%BC%BC-google-%E7%B6%B2%E9%A0%81%E8%AA%8D%E8%AD%89%E7%A2%BC/</link><pubDate>Mon, 05 Jan 2009 15:36:25 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/01/php%E8%A3%BD%E4%BD%9C%E9%A1%9E%E4%BC%BC-google-%E7%B6%B2%E9%A0%81%E8%AA%8D%E8%AD%89%E7%A2%BC/</guid><description>&lt;p>我在 &lt;a href="http://blog.roodo.com/jaceju/">網站製作學習誌&lt;/a> 發現一篇 &lt;a href="http://blog.roodo.com/jaceju/archives/8015459.html">[Web] 連結分享&lt;/a> 裡面有一篇：&lt;a href="http://samsharehome.blogspot.com/2008/12/phpgoogle.html">用php做出類似Google的字詞驗證圖片&lt;/a>，這一篇寫的不錯，跟我之前寫的一篇：&lt;a href="http://blog.wu-boy.com/2008/10/28/572/">[PHP] 好用的留言板 驗證碼 功能&lt;/a>，驗證碼的強度還要更好，畢竟這樣比較不會被破解，然而這篇加上許多干擾的驗證，也選用了比較複雜的字型來提供給網站驗證部份，在 google 的登入系統部份，剛開始都是給使用者方便，不會跑出驗證碼的部份，可是只要輸入幾次錯誤的帳號密碼之後，google 的驗證碼就會跑出來了，而這個很類似 google 的驗證碼提供給大家使用，當然也感謝原作者，因為在Google字詞驗證與 &lt;a href="http://caca.zoy.org/wiki/PWNtcha">CAPTCHA&lt;/a> 都已經相繼被破解，這消息我不知道從哪裡來的，在 &lt;a href="http://samsharehome.blogspot.com/2008/12/phpgoogle.html">這裡&lt;/a> 有提到，詳細情祥可能要網路查查了 那在這個 php class 說明以及 code 如下，相信都寫的很清楚： html 認證部份：&lt;/p>
&lt;pre class="brush: xml; title: ; notranslate" title="">
Type the characters you see in the picture below. &lt;br />
&lt;img src="verify_image.php" alt="點此刷新驗證碼" name="verify_code" width="150" height="60" border="0" id="verify_code"
onclick="document.getElementById('verify_code').src='verify_image.php?' + Math.random();" style="FILTER: wave(add=0,freq=3,lightstrength=50,phase=0,strength=3);cursor:pointer;" />&lt;br />
&lt;/pre></description></item><item><title>[PHP] pear 模組 HTTP_Upload 多重檔案上傳 Multiple files upload</title><link>https://blog.wu-boy.com/2009/01/php-pear-%E6%A8%A1%E7%B5%84-http_upload-%E5%A4%9A%E9%87%8D%E6%AA%94%E6%A1%88%E4%B8%8A%E5%82%B3-multiple-files-upload/</link><pubDate>Sat, 03 Jan 2009 10:10:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2009/01/php-pear-%E6%A8%A1%E7%B5%84-http_upload-%E5%A4%9A%E9%87%8D%E6%AA%94%E6%A1%88%E4%B8%8A%E5%82%B3-multiple-files-upload/</guid><description>&lt;p>自從上次介紹了 &lt;a href="http://blog.wu-boy.com/2008/10/24/563/">[PHP]好用的上傳 pear 模組 HTTP_Upload&lt;/a>，最近又要使用到多重的檔案上傳，就又去看了一下官網的 &lt;a href="http://pear.php.net/manual/en/package.http.http-upload.php#package.http.http-upload.examples.multiple">document&lt;/a> 寫的還蠻詳細的，大家去看看大概就知道我的作法了，底下是我的寫法： html 部份&lt;/p>
&lt;pre class="brush: xml; title: ; notranslate" title="">
&lt;/pre></description></item><item><title>[PHP] 設定 session 的過期時間 &amp; 暫存檔過多</title><link>https://blog.wu-boy.com/2008/11/php-%E8%A8%AD%E5%AE%9A-session-%E7%9A%84%E9%81%8E%E6%9C%9F%E6%99%82%E9%96%93-%E6%9A%AB%E5%AD%98%E6%AA%94%E9%81%8E%E5%A4%9A/</link><pubDate>Tue, 18 Nov 2008 11:40:31 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/11/php-%E8%A8%AD%E5%AE%9A-session-%E7%9A%84%E9%81%8E%E6%9C%9F%E6%99%82%E9%96%93-%E6%9A%AB%E5%AD%98%E6%AA%94%E9%81%8E%E5%A4%9A/</guid><description>&lt;p>目前在 PHP 網站裡面，大部分的網站都是利用 session 的技術來達到驗證使用者帳號密碼，那 PHP 預設 SESSION 是把他寫入檔案，那 Linux 底下會放在 /tmp 裡面，你會發現網站越多人，裡面檔案就會越多，一串亂碼的檔案 sess_*，那底下是可以寫在程式裡面設定多久可以刪除這些過期的 Session 檔案 底下轉貼自：&lt;a href="http://www.finalwebsites.com/snippets.php?id=42">Cross-Browser Session Starter&lt;/a>&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">&lt;?php
function start_session($expire = 0)
{
if ($expire == 0) {
$expire = ini_get('session.gc_maxlifetime');
} else {
ini_set('session.gc_maxlifetime', $expire);
}
if (empty($_COOKIE['PHPSESSID'])) {
session_set_cookie_params($expire);
session_start();
} else {
session_start();
setcookie('PHPSESSID', session_id(), time() + $expire);
}
}
?> &lt;/pre></description></item><item><title>[PHP] 好用的留言板 驗證碼 功能</title><link>https://blog.wu-boy.com/2008/10/php-%E5%A5%BD%E7%94%A8%E7%9A%84%E7%95%99%E8%A8%80%E6%9D%BF-%E9%A9%97%E8%AD%89%E7%A2%BC-%E5%8A%9F%E8%83%BD/</link><pubDate>Tue, 28 Oct 2008 07:59:40 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/10/php-%E5%A5%BD%E7%94%A8%E7%9A%84%E7%95%99%E8%A8%80%E6%9D%BF-%E9%A9%97%E8%AD%89%E7%A2%BC-%E5%8A%9F%E8%83%BD/</guid><description>&lt;p>這算是大家都知道的技術了吧，因為說實在的，留言板惡意灌水實在是太容易了，就算是檔檔 referer 也是沒用，因為表頭可以自己偽造，那最好的方法就是用 PHP 驗證碼的機制，這個機制利用 GD 縮圖的部份，然後再把驗證數字存放在 SESSION 裡面，不過 PHPBB 的作法是存在 database 資料庫裡面進行比對，然後在 delete 該比資料，畢竟每個連線都有自己的 ssid 的值，所以這樣進行比對，我想是不錯的方法，也可以用在很多地方，那底下是我去 &lt;a href="http://jax-work-archive.blogspot.com">Jax 的工作紀錄&lt;/a> 看到的一篇：&lt;a href="http://jax-work-archive.blogspot.com/2007/11/php.html">PHP 驗證碼&lt;/a>，拿過來筆記一下。 首先先去 Windows 底下的 Fonts 資料夾，選一個字型吧，因為裡面會用到喔，不然底下這一段 code 會用到&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">imagettftext($im, 20, 0, 25, 35, $Color,"arial.ttf",$verification__session);
/*
imagettftext (int im, int size, int angle,
int x, int y, int col,
string fontfile, string text)
im 圖片物件
size 文字大小
angle 0度將會由左到右讀取文字，而更高的值表示逆時鐘旋轉
x y 文字起始座標
col 顏色物件
fontfile 字形路徑，為主機實體目錄的絕對路徑，
可自行設定想要的字型
text 寫入的文字字串
*/&lt;/pre></description></item><item><title>[PHP]好用的上傳 pear 模組 HTTP_Upload</title><link>https://blog.wu-boy.com/2008/10/php%E5%A5%BD%E7%94%A8%E7%9A%84%E4%B8%8A%E5%82%B3-pear-%E6%A8%A1%E7%B5%84-http_upload/</link><pubDate>Fri, 24 Oct 2008 06:08:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/10/php%E5%A5%BD%E7%94%A8%E7%9A%84%E4%B8%8A%E5%82%B3-pear-%E6%A8%A1%E7%B5%84-http_upload/</guid><description>在台大 ptt BBS 上面看到有人推文上傳功能可以交給 pear HTTP_Upload 來跟 PHP 搭配使用，自己去看了一下官方線上文件，教學還蠻容易的，大概看過範例就可以瞭解了，上傳之後的檔案，在搭配之前我寫的 [PHP] header下載檔案 搭配資料庫
* Can handle from one file to multiple files. * Safe file copying from tmp dir. * Easy detecting mechanism of valid upload, missing upload or error. * Gives extensive information about the uploaded file. * Rename uploaded files in different ways: as it is, safe or unique * Validate allowed file extensions * Multiple languages error messages support (es, en, de, fr, it, nl, pt_BR) 1.</description></item><item><title>[PHP]好用的FCKeditor</title><link>https://blog.wu-boy.com/2008/10/php%E5%A5%BD%E7%94%A8%E7%9A%84fckeditor/</link><pubDate>Fri, 17 Oct 2008 05:09:51 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/10/php%E5%A5%BD%E7%94%A8%E7%9A%84fckeditor/</guid><description>最近在玩這一套 FCKeditor 線上 HTML 編輯系統，這目前很多 opensource 都有利用這一套編輯系統來搭配，我覺得還蠻方便的，所以很多後台或者是前台都會使用，我想這已經是現在的趨勢了，然而要安裝這個也相當容易，官方網站都寫的很清楚，可以先使用他們線上的 demo，如果要加入到自己的系統，他們也有提供一些文件讓大家參考：線上文件，其實他們支援各大語法：asp，php，Python… 一堆，安裝方法也很容易，底下寫一下安裝方法： 1. 首先先下載 FCKeditor 這一套軟體： 點我下載 目前是這個版本：FCKeditor_2.6.3.zip 2. 裡面有一些 sample 可以使用 fckeditor/_samples/default.html 3. 如果你要使用在自己的系統裡面起加入底下語法：
$root_path = './';
include($root_path . "fckeditor/fckeditor.php");
$sBasePath = "fckeditor/";
//實體化 FCKeditor 並指定欄位名稱
$oFCKeditor = new FCKeditor('file_data');
$oFCKeditor-BasePath = $sBasePath;
//預設的語言，zh表繁體中文
$oFCKeditor-Config['DefaultLanguage'] = 'zh';
//預設填入的內容
$oFCKeditor-Value = ' This is some sample text. You are using FCKeditor. ' ;
//直接輸出FCKeditor表單
$oFCKeditor-Create(); 基本上這樣大致上就完成了喔。很容易吧</description></item><item><title>[AJAX] google map 的應用～</title><link>https://blog.wu-boy.com/2008/10/ajax-google-map-%E7%9A%84%E6%87%89%E7%94%A8%EF%BD%9E/</link><pubDate>Sat, 04 Oct 2008 14:44:02 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/10/ajax-google-map-%E7%9A%84%E6%87%89%E7%94%A8%EF%BD%9E/</guid><description>&lt;p>嗯嗯，我自己的 blog 有在寫美食，就會有美食地點，當然我覺得把 &lt;a href="http://code.google.com/apis/maps/">google map api&lt;/a> 整合進來，是不錯的方法，其實 google map 也提供了只要輸入地址，就可以直接幫妳對應經度跟緯度的值，這樣就可以利用 ajax 的技術把資料庫裡面的地址都加上 google map 了，至少之前 &lt;a href="http://www.kaoh.com.tw/">高雄線上&lt;/a> 是這樣加上所有店家資訊的地址 google map，其實要使用 google map 相當容易，其實妳只要按照下面步驟就可以了：&lt;/p>
&lt;ol class="doublespace">
&lt;li>
&lt;a href="http://code.google.com/apis/maps/signup.html">Sign up for a Google Maps API key.&lt;/a>
&lt;/li>
&lt;li>
Read the &lt;a href="http://code.google.com/apis/maps/documentation/index.html">Maps API Concepts&lt;/a>.
&lt;/li>
&lt;li>
Check out some &lt;a href="http://code.google.com/apis/maps/documentation/examples/">Maps API Examples&lt;/a>.
&lt;/li>
&lt;li>
Read the &lt;a href="http://code.google.com/apis/maps/documentation/reference.html">Maps API Reference&lt;/a>.
&lt;/li>
&lt;/ol></description></item><item><title>[PHP]解決 PEAR::Mail_Mime 標題 UTF-8 亂碼問題(不能顯示)</title><link>https://blog.wu-boy.com/2008/10/php%E8%A7%A3%E6%B1%BA-pearmail_mime-%E6%A8%99%E9%A1%8C-utf-8-%E4%BA%82%E7%A2%BC%E5%95%8F%E9%A1%8C%E4%B8%8D%E8%83%BD%E9%A1%AF%E7%A4%BA/</link><pubDate>Wed, 01 Oct 2008 02:17:30 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/10/php%E8%A7%A3%E6%B1%BA-pearmail_mime-%E6%A8%99%E9%A1%8C-utf-8-%E4%BA%82%E7%A2%BC%E5%95%8F%E9%A1%8C%E4%B8%8D%E8%83%BD%E9%A1%AF%E7%A4%BA/</guid><description>&lt;p>話說大家在寫 PHP 的時候，一定會很常用到 mail 這個函式，畢竟一個網站一定會有很多需要用到寄信的地方，我先給大家推薦一下 &lt;a href="http://pear.php.net/package/Mail_Mime">PEAR::Mail_Mime&lt;/a> 跟 &lt;a href="http://pear.php.net/package/Mail">PEAR::Mail&lt;/a> 這兩個 Pear 的套件，用起來相當不錯，支援 html 跟 UTF-8 或者是 Big5 編碼，我之前寫過一篇 &lt;a title="Permanent Link to [PHP] 好用的 PEAR - PHP Mail and Mail_Mime" rel="bookmark" href="http://blog.wu-boy.com/2007/12/18/129/">[PHP] 好用的 PEAR – PHP Mail and Mail_Mime&lt;/a>，裡面寫的還蠻詳細的，不過上次有一個問題還沒解決，就是如果用 UTF-8 編碼的標題，會顯示不出來，&lt;a href="http://mail.google.com">Gmail&lt;/a> 收到的話就會是 no subject，然後昨天用了一個非常笨的解決方法，改成把標題使用 Big5 就可以了，解決方法如下： &lt;strong>Update：感謝 darkhero 提供解決方法：&lt;/strong> 如果要用 UTF-8 的標題：&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">$param['head_charset'] = 'utf-8';
$hdrs = array(
'From' => 'appleboy.tw@gmail.com',
'Subject' => '=?utf8?B?' . base64_encode($subj) . '?=',
'Content-type' => 'text/html; charset=utf-8'
); &lt;/pre> 先讓主機支援 PEAR：
&lt;pre class="brush: bash; title: ; notranslate" title="">#
# FreeBSD ports 安裝
cd /usr/ports/devel/pear
make install clean&lt;/pre></description></item><item><title>[PHP]如何把 Yahoo! BBAuth 加入網站入口認證</title><link>https://blog.wu-boy.com/2008/09/php%E5%A6%82%E4%BD%95%E6%8A%8A-yahoo-bbath-%E5%8A%A0%E5%85%A5%E7%B6%B2%E7%AB%99%E5%85%A5%E5%8F%A3%E8%AA%8D%E8%AD%89/</link><pubDate>Thu, 25 Sep 2008 16:33:49 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/09/php%E5%A6%82%E4%BD%95%E6%8A%8A-yahoo-bbath-%E5%8A%A0%E5%85%A5%E7%B6%B2%E7%AB%99%E5%85%A5%E5%8F%A3%E8%AA%8D%E8%AD%89/</guid><description>&lt;p>最近很紅的一個 &lt;a href="http://tw.developer.yahoo.com/home.html">Yahoo API&lt;/a>：&lt;a href="http://developer.yahoo.com/auth/">Browser-Based Authentication&lt;/a>，這是目前蠻多網站開始支援的認證之一，在 &lt;a href="http://blog.xdite.net/">XDite&lt;/a> 網站看到他們去參加 &lt;a href="http://hackday.ithome.com.tw/yahoo/">Yahoo Open Hack Day&lt;/a> 的參賽作品：「&lt;a href="http://bingo.handlino.com/">和多繽紛樂&lt;/a>」&lt;a href="http://blog.xdite.net/?p=709">XDite 網站說明&lt;/a>，裡面就有提供 &lt;a href="http://openid.net/">OpenID&lt;/a> 以及 &lt;a href="http://developer.yahoo.com/auth/">Yahoo BBAuth 登入方式&lt;/a>，等於是說目前你有 Yahoo 帳號或者是 OpenID 的帳號都可以直接進去 &lt;a href="http://bingo.handlino.com/">和多繽紛樂&lt;/a> 做登入動作，這對於有使用者不使用註冊這麼多網站，也記太多帳號密碼而煩惱，而 &lt;a href="http://developer.yahoo.com/auth/">Browser-Based Authentication&lt;/a> 也提供了 Single Sign-On (SSO) 給大家使用，底下是大概講解一下 &lt;a href="http://developer.yahoo.com/auth/">Yahoo BBAuth&lt;/a> 是如何運作： &lt;a href="https://www.flickr.com/photos/10526457@N00/2887916878/" title="bbauth">&lt;img src="https://i2.wp.com/farm4.static.flickr.com/3119/2887916878_330ea569bb.jpg?w=840&amp;#038;ssl=1" border="0" alt="bbauth" data-recalc-dims="1" />&lt;/a>&lt;/p></description></item><item><title>[FreeBSD]安裝 apache2 (worker) + PHP5.2.6 + mod_fastcgi + php5-fcgi</title><link>https://blog.wu-boy.com/2008/09/freebsd%E5%AE%89%E8%A3%9D-apache2-worker-php526-mod_fastcgi-php5-fcgi/</link><pubDate>Sat, 13 Sep 2008 12:24:26 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/09/freebsd%E5%AE%89%E8%A3%9D-apache2-worker-php526-mod_fastcgi-php5-fcgi/</guid><description>&lt;p>今天把 &lt;a href="http://www.freebsd.org">FreeBSD&lt;/a> web 改成了 &lt;a href="http://www.apache.org/">apache&lt;/a> &lt;a href="http://httpd.apache.org/docs/2.0/mod/worker.html">worker&lt;/a> 其實之前就已經這麼做了，只是今天加上 mod_fastcgi 我是參考 &lt;a href="http://blog.gslin.org/archives/2008/08/17/1624/">DarkKiller 大神 apache22 (worker) + mod_fastcgi + php5-fcgi&lt;/a>，之前就把 Server 換成了 php5-fcgi，只不過我是搭配 &lt;a href="http://www.lighttpd.net/">Lighttpd&lt;/a>，效能方面還不錯，可以參考這篇：&lt;a href="http://blog.wu-boy.com/2008/07/10/291/">[FreeBSD] Lighttpd + PHP + mod_proxy + FastCGI&lt;/a>，那因為用 &lt;a href="http://www.lighttpd.net/">lighttpd&lt;/a> 的外掛模組真的太少，不像 apache 支援這麼多 module，重點是還缺少了 .htaccess 這個功能，所以大大降低大家使用 &lt;a href="http://www.lighttpd.net/">lighttpd&lt;/a>，近期內會把全部 server 換成 apache2 搭配 &lt;a href="http://www.fastcgi.com/">mod_fastcgi&lt;/a>，那底下寫一下作法了：&lt;/p></description></item><item><title>[心得]2008八月份 SA@Tainan PHP 程式設計 – 初階資訊安全(8/30)</title><link>https://blog.wu-boy.com/2008/08/%E5%BF%83%E5%BE%972008%E5%85%AB%E6%9C%88%E4%BB%BD-satainan-php-%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88-%E5%88%9D%E9%9A%8E%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8830/</link><pubDate>Sat, 30 Aug 2008 16:07:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/08/%E5%BF%83%E5%BE%972008%E5%85%AB%E6%9C%88%E4%BB%BD-satainan-php-%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88-%E5%88%9D%E9%9A%8E%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8830/</guid><description>&lt;p>今天從嘉義跑到台南聽 &lt;a href="http://phorum.study-area.org">酷！學園&lt;/a> 舉辦的 &lt;a href="http://phorum.study-area.org/index.php/topic,53191.0.html">2008八月份 SA@Tainan PHP 程式設計 – 初階資訊安全(8/30)&lt;/a> ，今天一大早就起床了，差點沒趕上火車，到了台南地點在社區大學，其實蠻近的，大概騎車5分鐘就到了喔，其實不會很趕，到了現場，第一次看到梁楓大大阿，感覺很有威勢，我看現場年齡層分佈好像很廣，有很多都是長輩了，不過大部分還是學生為主，然後我想大概有很多是工作人員，其實我都不太認識，我大概只知道梁楓大大，因為在酷！學園也一段時間了，哈哈，今天講的主題，我非常的有興趣，我看投影片還蠻多的，可是都是跳著講，然後一些實做的部份，然後最後一小時是在解如何拿到 Linux 的主機 /etc/passwd 的資訊。&lt;/p></description></item><item><title>[轉載]MySQL 的 “SET NAMES xxx” 字元編碼問題分析</title><link>https://blog.wu-boy.com/2008/08/%E8%BD%89%E8%BC%89mysql-%E7%9A%84-set-names-xxx-%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC%E5%95%8F%E9%A1%8C%E5%88%86%E6%9E%90/</link><pubDate>Mon, 25 Aug 2008 10:02:35 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/08/%E8%BD%89%E8%BC%89mysql-%E7%9A%84-set-names-xxx-%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC%E5%95%8F%E9%A1%8C%E5%88%86%E6%9E%90/</guid><description>&lt;p>轉載自: &lt;a href="http://www.phpchina.com/bbs/viewthread.php?tid=13861">PHPChina&lt;/a> 近來接受 BBT 的培訓，做一個投票系統。系統程式碼倒不是很難，但是我的時間主要花費在了研究字符集和編碼上面。MySQL 和 Apache 兩個系統的編碼（字符集）問題讓我費勁腦筋，吃盡苦頭。網上對這些問題的解決比較零散，比較片面，大部分是提供解決方法，卻不說為什麼。於是我將這幾天收穫總結一下，避免後來者再走彎路。這篇文章對 PHP 編寫有一點幫助（看完你就知道，怎樣讓你的 PHP 程式在大部分空間提供商的伺服器裡顯示正常），但是更多幫助在於網路伺服器的架設和設置。 先說 MySQL 的字符集問題。Windows 下可透過修改 my.ini 內的&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title=""># CLIENT SECTION
[mysql]
default-character-set=utf8
# SERVER SECTION
[mysqld]
default-character-set=utf8&lt;/pre></description></item><item><title>[無名小站]利用unix指令 wget 抓取 wretch 圖檔</title><link>https://blog.wu-boy.com/2008/08/%E7%84%A1%E5%90%8D%E5%B0%8F%E7%AB%99%E5%88%A9%E7%94%A8unix%E6%8C%87%E4%BB%A4-wget-%E6%8A%93%E5%8F%96-wretch-%E5%9C%96%E6%AA%94/</link><pubDate>Sat, 23 Aug 2008 04:43:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/08/%E7%84%A1%E5%90%8D%E5%B0%8F%E7%AB%99%E5%88%A9%E7%94%A8unix%E6%8C%87%E4%BB%A4-wget-%E6%8A%93%E5%8F%96-wretch-%E5%9C%96%E6%AA%94/</guid><description>&lt;p>囧～其實用 wget 就可以迅速抓到 &lt;a href="http://www.wretch.cc/">無名小站&lt;/a> 的圖放到自己的伺服器上面，當然之前 &lt;a href="http://www.ptt.cc">ptt&lt;/a> 的 php 版也有提供利用 curl 的方式來抓取圖，但是還要另寫另一隻讀圖程式，程式碼如下： 感謝 tsangbor＠ptt.cc 提供 DEMO: &lt;a href="http://download.easygame.com.tw/get">http://download.easygame.com.tw/get&lt;/a>_wretch_img.php 輸入框請輸入 無名網友的相本 如： &lt;a href="http://www.wretch.cc/album/album.php?id=qsplmiki&amp;amp;book=130">http://www.wretch.cc/album/album.php?id=qsplmiki&amp;amp;book=130&lt;/a> 程式碼：&lt;/p></description></item><item><title>[教學]網頁簡體繁體轉換程式(Google AJAX Language API)</title><link>https://blog.wu-boy.com/2008/08/%E6%95%99%E5%AD%B8%E7%B6%B2%E9%A0%81%E7%B0%A1%E9%AB%94%E7%B9%81%E9%AB%94%E8%BD%89%E6%8F%9B%E7%A8%8B%E5%BC%8Fgoogle-ajax-language-api/</link><pubDate>Thu, 14 Aug 2008 09:14:42 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/08/%E6%95%99%E5%AD%B8%E7%B6%B2%E9%A0%81%E7%B0%A1%E9%AB%94%E7%B9%81%E9%AB%94%E8%BD%89%E6%8F%9B%E7%A8%8B%E5%BC%8Fgoogle-ajax-language-api/</guid><description>&lt;p>在 &lt;a href="http://www.ptt.cc">PTT&lt;/a> PHP 版看到一篇：&lt;a href="http://www.ptt.cc/bbs/PHP/M.1218595508.A.8C4.html">[請益]簡體字轉繁體字的方法&lt;/a>，然後裡面其實有推文說可以用看看 &lt;a href="http://code.google.com/apis/ajaxlanguage/documentation/">Google AJAX Language API&lt;/a>，然後我自己去測試，發現只要文字一多，&lt;a href="http://www.google.com">google&lt;/a> 就轉換不出來了，就會出現無效果，我自己也回一篇 &lt;a href="http://www.ptt.cc/bbs/PHP/M.1218697288.A.440.html">Re: [請益]簡體字轉繁體字的方法&lt;/a>，其實問題出在哪裡，我也不確定，這可能要問 &lt;a href="http://www.google.com">google&lt;/a> 了，不然 google 提供的這個還蠻方便的，可以即時整合到網站裡面。 &lt;strong>update：google API 不能用的原因，就是轉換的字數超過限制&lt;/strong> 嗯嗯，後來改用&lt;a href="http://www.twvbb.com/vbb/thread/24/572/2/">【原創】深藍UTF-8正體簡體轉換函數 1.0&lt;/a> 裡面這套 VBB 系統提供的簡體繁體轉換，大概看一下原始碼，就可以使用了，不會很難，只要在網頁 header 端加上：&lt;/p></description></item><item><title>[PHP]如何使用 flush() 跟 ob_flush()</title><link>https://blog.wu-boy.com/2008/07/php%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-flush-%E8%B7%9F-ob_flush/</link><pubDate>Mon, 28 Jul 2008 06:02:17 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/07/php%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-flush-%E8%B7%9F-ob_flush/</guid><description>比如說我們想要緩衝網頁資料，如利用 sleep() 這個函式，那我們不想要等整個 php 執行完畢才輸出畫面，那就是需要緩衝輸出，在 酷學園 的這篇 http://phorum.study-area.org/index.php/topic,52757.0.html 有討論到，所以我實際去測試一下，大概如下：
0; $i--)
{
echo $i . " ";
ob_flush();
flush();
sleep(1);
}
ob_end_flush();
? 我覺得相當不錯用，大家可以參考看看。酷學園那篇，我測試好像沒有這種效果，Orz，不知道我測試錯誤，還是啥的地方搞錯 http://blog.goalercn.com/blogview.asp?logID=348</description></item><item><title>[Linux] CentOS 5.1 安裝 Lighttpd + PHP5 + FastCgi + eaccelerator</title><link>https://blog.wu-boy.com/2008/07/linux-centos-51-%E5%AE%89%E8%A3%9D-lighttpd-php5-fastcgi-eaccelerator/</link><pubDate>Tue, 22 Jul 2008 07:56:09 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/07/linux-centos-51-%E5%AE%89%E8%A3%9D-lighttpd-php5-fastcgi-eaccelerator/</guid><description>&lt;p>昨天網站無緣無故被擋掉，原因是我的流量網站太大，囧，因為是架設 web site，測試一下效能，我發現 &lt;a href="http://httpd.apache.org">=http://httpd.apache.org&lt;/a>apache[/url] 沒辦法撐住流量跟線上人數，所以只好換成 &lt;a href="http://www.lighttpd.net">=http://www.lighttpd.net&lt;/a>Lighttpd[/url] 發現效果不錯，所以又去安裝了 CentOS 版本，我是去參考底下這篇：&lt;a href="http://www.howtoforge.com/lighttpd_php5_mysql_centos5.0">Installing Lighttpd With PHP5 And MySQL Support On CentOS 5.0&lt;/a>，這一篇我覺得寫的還ok，但是因為 Centos 如果你想用 yum 安裝 &lt;a href="http://www.lighttpd.net">=http://www.lighttpd.net&lt;/a>Lighttpd[/url] 就要先裝 rpmforge-release package 這個東西，這樣才可以找到。 首先先看你的版本再來抓：&lt;/p>
&lt;blockquote>
&lt;p>RHEL5 / CentOS-5 i386: &lt;a href="http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm">http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm&lt;/a> x86_64: &lt;a href="http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.x86">http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.x86&lt;/a>_64.rpm RHEL4 / CentOS-4 i386: &lt;a href="http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el4.rf.i386.rpm">http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el4.rf.i386.rpm&lt;/a> x86_64: &lt;a href="http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el4.rf.x86">http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el4.rf.x86&lt;/a>_64.rpm RHEL3 / CentOS-3 i386: &lt;a href="http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el3.rf.i386.rpm">http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el3.rf.i386.rpm&lt;/a> x86_64: &lt;a href="http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el3.rf.x86">http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el3.rf.x86&lt;/a>_64.rpm RHEL2.1 / CentOS-2 i386: &lt;a href="http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el2.rf.i386.rpm">http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el2.rf.i386.rpm&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>[FreeBSD]Lighttpd + php5 + 解決 wordpress Permalinks mod_write</title><link>https://blog.wu-boy.com/2008/07/freebsdlighttpd-php5-%E8%A7%A3%E6%B1%BA-wordpress-permalinks-mod_write/</link><pubDate>Thu, 03 Jul 2008 08:55:50 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/07/freebsdlighttpd-php5-%E8%A7%A3%E6%B1%BA-wordpress-permalinks-mod_write/</guid><description>&lt;p>今天轉換跑道了，最近玩 Apache 玩的很不順，因為只要線上人數一多，就會吃很多記憶體，導致必須重新開 Apache，所以今天來玩看看 &lt;a href="http://www.lighttpd.net/">lighttpd&lt;/a>試試看，看看結果如何，其實轉換到 &lt;a href="http://www.lighttpd.net/">lighttpd&lt;/a> 需要注意很多事情，那就是 Lighttpd 並不支援 .htaccess 檔案，所以 mode_rewrite 功能要設定到 Lighttpd.conf 裡面，然後也去找看看 Lighttpd 的 virtual host 的寫法，然後還有一點就是 wordpress 的 Permalinks 的問題，算是今天都解決了，底下來寫一下作法：&lt;/p></description></item><item><title>[FreeBSD]Apache 噴出 signal Segmentation fault (11)</title><link>https://blog.wu-boy.com/2008/07/freebsdapache-%E5%99%B4%E5%87%BA-signal-segmentation-fault-11/</link><pubDate>Tue, 01 Jul 2008 06:39:04 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/07/freebsdapache-%E5%99%B4%E5%87%BA-signal-segmentation-fault-11/</guid><description>&lt;p>最近在玩 FreeBSD 伺服器的加強效能，其實我自己試了很多套：&lt;a href="http://eaccelerator.net/">eAccelerator&lt;/a>，&lt;a href="http://pecl.php.net/package/APC">Pear APC&lt;/a>，跟 &lt;a href="http://www.zend.com/en/products/guard/optimizer/">Zend Optimizer&lt;/a>，這三套都是可以加速php的速度，當你的 apache 效能遇到瓶頸，就可以選用這三個來改善網頁瀏覽速度，不過應該沒有人三個都用吧，畢竟三個東西，感覺都是cache幫助，所以達成我們所想要的要求，有時候並不是全部安裝就是代表你的伺服器一定會超快，因為我的經驗是三個不能同時裝，只要裝了兩個都會出問題，這是我這幾天測試的結果，只要裝了Pear APC，就不能裝Zend Optimizer跟eAccelerator了，因為我的 httpd 的 log 會噴出底下訊息：&lt;/p>
&lt;blockquote>
&lt;p>signal Segmentation fault (11) 跟 pid 15879 (httpd), uid 80: exited on signal 11&lt;/p>
&lt;/blockquote></description></item><item><title>[PHP]解決網站被 SQL injection 攻擊</title><link>https://blog.wu-boy.com/2008/06/php%E8%A7%A3%E6%B1%BA%E7%B6%B2%E7%AB%99%E8%A2%AB-sql-injection-%E6%94%BB%E6%93%8A/</link><pubDate>Thu, 26 Jun 2008 08:26:51 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/06/php%E8%A7%A3%E6%B1%BA%E7%B6%B2%E7%AB%99%E8%A2%AB-sql-injection-%E6%94%BB%E6%93%8A/</guid><description>&lt;p>其實這個安全性的問題，在目前台灣網站都存在這樣的問題，大家平常用 $_POST，$_GET 用得很順利，但是沒有想過帳號密碼被 SQL injection 破解，當網站被破解了，基本上你損失就是相當嚴重，網路上也有很多攻擊方式，不過這方法是最常被拿出來講的，我自己有一套解決方式，除了比較重要的地方，就是輸入帳號密碼的地方要加強防護之外，加上數字驗證碼，還要 check 帳號的特性，我底下是我驗證帳號密碼機制&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">if($user_name == '' || $user_passwd == ''){
ErrMsg("帳號或密碼不得空白");
}
if (!preg_match('/^\w+$/', $user_name)){
ErrMsg("請勿攻擊本站台");
}&lt;/pre></description></item><item><title>基本優化 tuning apache 跟 tuning mysql 跟 php 效能</title><link>https://blog.wu-boy.com/2008/06/%E5%9F%BA%E6%9C%AC%E5%84%AA%E5%8C%96-tuning-apache-%E8%B7%9F-tuning-mysql-%E6%95%88%E8%83%BD/</link><pubDate>Wed, 18 Jun 2008 13:42:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/06/%E5%9F%BA%E6%9C%AC%E5%84%AA%E5%8C%96-tuning-apache-%E8%B7%9F-tuning-mysql-%E6%95%88%E8%83%BD/</guid><description>&lt;p>最近在玩優化 Apache 跟 MySQL 部份，然後就在 google 上面找一些資料，當然對我自己的網站當然改變不少，速度有增快許多，所以來紀錄一下，其實都是還蠻基本的改 config 檔案就可以了 1. apache 部份 for FreeBSD&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">#
# 利用 ports 安裝
# 在安裝 Apache 時，加入此參數 WITH_MPM=XXXX 即可。
#
cd /usr/ports/www/apache22 ; make WITH_MPM=worker install clean&lt;/pre> 如果是要裝在 Linux 機器的話，可能要自己編譯，在 Apache 2.0 有很多效能上得改變，所以原本預設是 prefork
&lt;pre class="brush: bash; title: ; notranslate" title="">#
# 編譯加上
#
./configure --with-mpm=worker&lt;/pre> 在 Ubuntu 底下作法很奇怪，利用 apt-get 方式不能安裝 mpm worker，因為你安裝 php 的時候他會幫你移除，然後裝上 prefork，所以很奇怪，這部份我還不知道怎麼解決。</description></item><item><title>[FreeBSD] 安裝 PHP APC 加速網頁速度</title><link>https://blog.wu-boy.com/2008/06/freebsd-%E5%AE%89%E8%A3%9D-php-apc-%E5%8A%A0%E9%80%9F%E7%B6%B2%E9%A0%81%E9%80%9F%E5%BA%A6/</link><pubDate>Thu, 05 Jun 2008 01:00:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2008/06/freebsd-%E5%AE%89%E8%A3%9D-php-apc-%E5%8A%A0%E9%80%9F%E7%B6%B2%E9%A0%81%E9%80%9F%E5%BA%A6/</guid><description>&lt;p>最近在維護自己的機器，發現網站每秒 request 只要10幾次就會感覺吃很多資源，然後莫名 CPU 飆高到100%，後來只好去找怎麼去 tuning Apache，MySQL，PHP，至於改善 apache 跟 MySQL 我先不講了，我之後會在寫，我先處理了加速 PHP 的部份，我是安裝了 &lt;a href="http://pecl.php.net/package/APC">APC&lt;/a>（Alternative PHP Cache），來改善執行 PHP 的速度，這個程式必須先安裝好 &lt;a href="http://pecl.php.net/">PECL&lt;/a>(PHP Extension Community Library)，再來安裝 APC 就沒問題了。 1. 首先安裝 APC&lt;/p>
&lt;pre class="brush: bash; title: ; notranslate" title="">#
# 先切換到該軟體下面
#
cd /usr/ports/www/pecl-APC/; make install clean
&lt;/pre></description></item><item><title>[PHP] 好用的 PEAR – PHP Mail and Mail_Mime</title><link>https://blog.wu-boy.com/2007/12/php-%E5%A5%BD%E7%94%A8%E7%9A%84-pear-php-mail-and-mail_mime/</link><pubDate>Tue, 18 Dec 2007 12:24:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2007/12/php-%E5%A5%BD%E7%94%A8%E7%9A%84-pear-php-mail-and-mail_mime/</guid><description>&lt;p>今天在寫期末的 Project，我的專題是寫無線 802.1X 認證，搭配 FreeBADIUS Server，然後我在搭配網頁整合認證機制，然後我在做使用者帳號申請部份，需要靠 Email 認證，但是我去看官網，介紹好像也沒什麼，在寄信的時候常常會遇到亂碼，不然就是寄信 html 部份會有問題，或者是不能附加檔案之類的，然後網路上找不到一個好用的 class ，所以就用了 &lt;a href="http://pear.php.net/package/Mail_Mime">PEAR::Mail_Mime&lt;/a> 跟 &lt;a href="http://pear.php.net/package/Mail">PEAR::Mail&lt;/a>，這兩個套件還不錯用，如果想寄單純的信件，就用 PEAR::Mail 這個就可以了，如果要搭配 html 網頁，就要搭上 PEAR::Mail_Mime&lt;/p></description></item><item><title>[FreeBSD] 安裝 memcache for php 多重伺服器共享 Session</title><link>https://blog.wu-boy.com/2007/09/freebsd-%E5%AE%89%E8%A3%9D-memcache-for-php/</link><pubDate>Sat, 22 Sep 2007 13:16:04 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2007/09/freebsd-%E5%AE%89%E8%A3%9D-memcache-for-php/</guid><description>&lt;p>今天來玩看看 memcache 看看，話說 memcache 是個非常好用的東西，可以參考官網作法 &lt;a href="http://tw.php.net/memcache">連結&lt;/a>，其實我在前一個工作，就有老闆問我說，像公司作這麼多網站，有沒有辦法統整成一個，然後底下各種服務，只需要登入過一次就好，而不必重複登入，畢竟會讓使用者覺得很煩，所以就有了 memcache 這東西出來，底下就來介紹 FreeBSD 的安裝方式&lt;/p>
&lt;ul>
&lt;li>安裝方法： 安裝 ports 的套件 memcache 跟 pecl-memcache&lt;/li>
&lt;/ul>
&lt;pre class="brush: bash; title: ; notranslate" title="">cd /usr/ports/databases/memcached; make install clean
cd /usr/ports/databases/pecl-memcache; make install clean
&lt;/pre> 然後他會把 extension=memcache.so 寫到 /usr/local/etc/php/extensions.ini 然後你只需要重新啟動 apache 即可，還有把 memcached 服務打開 所以請下底下指令
&lt;pre class="brush: bash; title: ; notranslate" title="">echo "memcached_enable=\"YES\"" >> /etc/rc.conf
/usr/local/etc/rc.d/memcached start
/usr/local/etc/rc.d/apache22 restart
&lt;/pre></description></item><item><title>[PHP] 善用 ignore_user_abort() 函式</title><link>https://blog.wu-boy.com/2007/06/php-%E5%96%84%E7%94%A8-ignore_user_abort-%E5%87%BD%E5%BC%8F/</link><pubDate>Fri, 22 Jun 2007 10:35:16 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2007/06/php-%E5%96%84%E7%94%A8-ignore_user_abort-%E5%87%BD%E5%BC%8F/</guid><description>話說最近在為了上傳圖片經過縮圖的時間來煩惱，只不過我在想，為甚麼我上傳圖片還要等待縮圖時間才可以，然而無名小站，只需要上傳時間，縮圖是在它機器背景執行，後來發現一個函式非常好用，那就是
ignore_user_abort(true);
http://tw2.php.net/manual/tw/function.ignore-user-abort.php 無名在上傳圖片的php檔案，肯定有加上這個函式，他的好處是使用者如果關掉瀏覽器，但是php還是會繼續執行，也就是無名可以把檔案上傳之後，重新導向到使用者的相簿，程式可以如下
ignore_user_abort(true);
set_time_limit(0);
for($i = 1; $i 其實 ignore\_user\_abort(true); 根本就是變相的 unix 底下的 crontab ，還蠻好用的，好處很多，不過用的地方要注意就是了，並不是每個php檔案都需要用這個函式。�</description></item><item><title>[PHP] header下載檔案 搭配資料庫</title><link>https://blog.wu-boy.com/2007/05/php-header%E4%B8%8B%E8%BC%89%E6%AA%94%E6%A1%88-%E6%90%AD%E9%85%8D%E8%B3%87%E6%96%99%E5%BA%AB/</link><pubDate>Sat, 26 May 2007 04:28:11 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2007/05/php-header%E4%B8%8B%E8%BC%89%E6%AA%94%E6%A1%88-%E6%90%AD%E9%85%8D%E8%B3%87%E6%96%99%E5%BA%AB/</guid><description>剛剛在 ECstart 看到有人詢問 header檔案下載錯誤 發現網站義工有回答到這個function，所以就紀錄下來了
function dl_file($file){
//First, see if the file exists
if (!is_file($file)) { die("404 File not found!"); }
//Gather relevent info about file
$len = filesize($file);
$filename = basename($file);
$file_extension = strtolower(substr(strrchr($filename,"."),1));
//This will set the Content-Type to the appropriate setting for the file
switch( $file_extension ) {
case "pdf": $ctype="application/pdf"; break;
case "exe": $ctype="application/octet-stream"; break;
case "zip": $ctype="application/zip"; break;
case "doc": $ctype="application/msword"; break;
case "xls": $ctype="application/vnd.ms-excel"; break;
case "</description></item><item><title>[PHP] 如何切割中文標題</title><link>https://blog.wu-boy.com/2007/05/php-%E5%A6%82%E4%BD%95%E5%88%87%E5%89%B2%E4%B8%AD%E6%96%87%E6%A8%99%E9%A1%8C/</link><pubDate>Sat, 19 May 2007 02:47:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2007/05/php-%E5%A6%82%E4%BD%95%E5%88%87%E5%89%B2%E4%B8%AD%E6%96%87%E6%A8%99%E9%A1%8C/</guid><description>&lt;p>今天看到酷！學園討論區，php版有人問說要如何切割中文字，結果我自己以前弄的一個function就貼了上去，如下&lt;/p>
&lt;pre class="brush: php; title: ; notranslate" title="">function cut_word($text, $num){
if(strlen($text) > $num) {
for($i=0;$i&lt;$num;$i++) {
$ch=substr($text,$i,1);
if(ord($ch)>127) $i++;
}
$text= substr($text,0,$i).".";
}
return $text;
}
&lt;/pre></description></item><item><title>FreeBSD + Lighttpd + php + mysql 安裝過程</title><link>https://blog.wu-boy.com/2006/09/freebsd-lighttpd-php-mysql-%E5%AE%89%E8%A3%9D%E9%81%8E%E7%A8%8B/</link><pubDate>Wed, 20 Sep 2006 01:57:13 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2006/09/freebsd-lighttpd-php-mysql-%E5%AE%89%E8%A3%9D%E9%81%8E%E7%A8%8B/</guid><description>系統環境 ：FreeBSD 6.0-RELEASE 安裝過程如下：
mysql-server-5.0.24a php5-5.1.6 lighttpd-1.4.11_1 先安裝 lighttpd
cd /usr/ports/www/lighttpd/ make config [X] OPENSSL Enable SSL support [ ] OPENLDAP Enable LDAP support [X] MYSQL Enable MYSQL support [X] IPV6 Enable IPV6 support [X] CML Enable Cache Meta Language support make install clean 安裝 mysql cd /usr/ports/databases/mysql50-server make install clean WITH_CHARSET=utf8 WITH_LINUXTHREADS=yes 安裝 php cd /usr/ports/lang/php5 cd /usr/ports/lang/php5-extensions/ make config 選擇你想要的 extensions 灌好之後 就可以用了 然後打開 家目錄設定 userdir.</description></item></channel></rss>