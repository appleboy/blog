<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jenkins on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/jenkins/</link><description>Recent content in Jenkins on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Thu, 07 Sep 2017 02:58:44 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/jenkins/index.xml" rel="self" type="application/rss+xml"/><item><title>為什麼我用 Drone 取代 Jenkins 及 GitLab CI</title><link>https://blog.wu-boy.com/2017/09/why-i-choose-drone-as-ci-cd-tool/</link><pubDate>Thu, 07 Sep 2017 02:58:44 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2017/09/why-i-choose-drone-as-ci-cd-tool/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/36906030282/in/dateposted-public/" title="Logo-DevOpsDays">&lt;img src="https://farm5.staticflickr.com/4382/36906030282_f489c96be3_z.jpg" alt="Logo-DevOpsDays">&lt;/a>&lt;/p>
&lt;p>終於有機會正式跟大家介紹為什麼我會捨棄 &lt;a href="https://jenkins.io/">Jenkins&lt;/a> 跟 &lt;a href="https://about.gitlab.com/features/gitlab-ci-cd/">GitLab CI&lt;/a>，取而代之的是用 &lt;a href="https://golang.org">Go&lt;/a> 語言寫的 &lt;a href="https://github.com/drone/drone">Drone&lt;/a>。今年很高興錄取台灣第一屆 &lt;a href="https://devopsdays.tw/">DevOps Day&lt;/a> 講師，在今年主題是『用 Drone 打造輕量級容器持續交付平台』，主要推廣這套 &lt;a href="https://github.com/drone/drone">Drone&lt;/a> CI/CD 工具，會議內容圍繞在 &lt;a href="https://jenkins.io/">Jenkins&lt;/a>, &lt;a href="https://about.gitlab.com/features/gitlab-ci-cd/">GitLab CI&lt;/a> 跟 Drone 的比較。也提到為什麼我不用 Jenkins 及 GitLab CI 的幾個原因。底下整理議程大綱。&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>為什麼選擇 Drone&lt;/li>
&lt;li>Drone 基礎簡介&lt;/li>
&lt;li>Drone 架構擴展&lt;/li>
&lt;li>Drone 安裝方式&lt;/li>
&lt;li>Drone 管理介面&lt;/li>
&lt;li>Drone 測試部署&lt;/li>
&lt;li>Drone 自訂套件&lt;/li>
&lt;/ul></description></item><item><title>2017 COSCUP 研討會: Gitea + Drone 介紹</title><link>https://blog.wu-boy.com/2017/08/2017-coscup-introduction-to-gitea-drone/</link><pubDate>Mon, 07 Aug 2017 06:23:26 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2017/08/2017-coscup-introduction-to-gitea-drone/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/36020937670/in/dateposted-public/" title="gitea-lg">&lt;img src="https://farm5.staticflickr.com/4377/36020937670_fbcf1ee3d3_z.jpg" alt="gitea-lg">&lt;/a>&lt;/p>
&lt;p>今年很高興可以到 &lt;a href="http://coscup.org/2017">COSCUP&lt;/a> 分享『&lt;strong>Gitea + Drone 介紹&lt;/strong>』，我是在第二天的最後一場來做分享，最後還被大會進來趕人，講超過時間了。這次是我第一次到&lt;a href="http://www.coss.ntu.edu.tw/">台大社科院&lt;/a>，太陽真的好大，兩天下來流的汗水，大概已經是一年份的了。由於今年 COSCUP 不供應午餐，在第一天中午到科技站出口，左轉第一個店面就坐下來吃麵，店面不大，賣傳統小吃，我點了麻醬麵大碗 55 元，燙青菜 35 元，真的很大碗，不知道是不是因為在學校附近的關係，所以特別大碗，我心裡想說，這裡不是台北嗎？&lt;/p></description></item><item><title>Drone 自動觸發 GitLab CI 或 Jenkins 任務</title><link>https://blog.wu-boy.com/2017/06/trigger-gitlab-ci-or-jenkins-using-drone/</link><pubDate>Wed, 28 Jun 2017 04:24:31 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2017/06/trigger-gitlab-ci-or-jenkins-using-drone/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/34957940160/in/dateposted-public/" title="drone-logo_512">&lt;img src="https://i1.wp.com/c1.staticflickr.com/5/4236/34957940160_435d83114f_z.jpg?w=840&amp;#038;ssl=1" alt="drone-logo_512" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/drone/drone">Drone&lt;/a> 是一套由 &lt;a href="https://golang.org/">Go 語言&lt;/a>所開發的開源碼專案，讓開發者可以使用 &lt;a href="http://docker.com/">Docker&lt;/a> Container 快速設定自動化測試及部署，上篇有提到『&lt;a href="https://blog.wu-boy.com/2017/06/how-to-schedule-builds-in-drone/">Cronjob 搭配 Drone 服務&lt;/a>』，讓 &lt;a href="https://jenkins.io/">Jenkins&lt;/a> 或 &lt;a href="https://about.gitlab.com/features/gitlab-ci-cd/">GitLab CI&lt;/a> 用戶可以轉換 Cron Job 任務到 Drone 上面。本篇則是會介紹如何透過 Drone 去觸發 Jenkins 或 GitLab CI 上的工作，當然這是過渡時期，希望大家最後能將工作完整移轉到 Drone 上面，不要再依靠 Jenkins 或 GitLab CI 了。本篇會教大家用三種方式來觸發 GitLab CI 或 Jenkins 任務。&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>使用 Drone CI/CD&lt;/li>
&lt;li>使用 Docker 指令&lt;/li>
&lt;li>使用 Command Line (命令列)&lt;/li>
&lt;/ul></description></item><item><title>Cronjob 搭配 Drone 服務</title><link>https://blog.wu-boy.com/2017/06/how-to-schedule-builds-in-drone/</link><pubDate>Sun, 25 Jun 2017 05:32:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2017/06/how-to-schedule-builds-in-drone/</guid><description>&lt;p>&lt;a href="https://www.flickr.com/photos/appleboy/34957940160/in/dateposted-public/" title="drone-logo_512">&lt;img src="https://i1.wp.com/c1.staticflickr.com/5/4236/34957940160_435d83114f_z.jpg?w=840&amp;#038;ssl=1" alt="drone-logo_512" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/drone/drone">Drone&lt;/a> 是一套基於 &lt;a href="https://www.docker.com/">Docker&lt;/a> Container 技術的 CI/CD 服務，它是用 &lt;a href="https://golang.org/">Go&lt;/a> 語言所開發，可以安裝在任何作業系統內，你可以把 Drone 當作是開源版的 &lt;a href="https://travis-ci.org/">Travis&lt;/a> 服務。Drone 本身不支援排程任務，也就是說無法像 Jenkins CI 一樣可以設定每天幾點幾分執行單一 Job 任務。但是可以透過第三方工具像是 &lt;code>cron&lt;/code> 來整合 Drone API 達成自動排程的效果，底下來看看該如何實作。&lt;/p></description></item><item><title>在 Jenkins 跑 Golang 測試</title><link>https://blog.wu-boy.com/2016/08/golang-tesing-on-jenkins/</link><pubDate>Tue, 02 Aug 2016 03:24:21 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2016/08/golang-tesing-on-jenkins/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080">&lt;img src="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" alt="">&lt;/a>&lt;/p>
&lt;p>本篇會紀錄如何在 &lt;a href="https://jenkins.io/">Jenkins&lt;/a> 測試 &lt;a href="https://golang.org/">Golang&lt;/a> 專案，直接拿 &lt;a href="https://github.com/appleboy/go-hello">go-hello&lt;/a> 當作本篇範例。&lt;/p></description></item><item><title>在 Debian 7.8 安裝 Gitlab 筆記</title><link>https://blog.wu-boy.com/2015/12/install-gitlab-on-debian-7-8/</link><pubDate>Sat, 12 Dec 2015 09:22:02 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/12/install-gitlab-on-debian-7-8/</guid><description>&lt;p>&lt;img src="https://i2.wp.com/farm4.staticflickr.com/3830/10605193576_54b54e4dfc_n.jpg?w=840&amp;#038;ssl=1" alt="gitlab_logo" data-recalc-dims="1" />&lt;/p>
&lt;p>之前寫過一篇 &lt;a href="http://blog.wu-boy.com/2014/12/easy-to-install-gitlab-quickly/">GitLab 快速安裝筆記&lt;/a>，但是這次在 Debian 7.8 上安裝起來遇到蠻多問題，故寫此篇來記錄安裝遇到的問題，也會寫到如何搭配 Nginx 設定。GitLab 分兩種版本，一種是 Community Edition packages 另一種是 Enterprise Edition packages，本篇是記錄 Community 版本安裝步驟，可以到&lt;a href="https://about.gitlab.com/downloads/">下載頁面&lt;/a>選擇您的作業系統，就可以看到安裝方式&lt;/p></description></item><item><title>Ruby Compass and Sass Auto Testing Environment</title><link>https://blog.wu-boy.com/2014/03/ruby-compass-and-sass-auto-testing-environment/</link><pubDate>Tue, 11 Mar 2014 02:37:51 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2014/03/ruby-compass-and-sass-auto-testing-environment/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/6213260474/" title="Compass Home Compass Documentation by appleboy46, on Flickr">&lt;img src="https://i2.wp.com/farm7.static.flickr.com/6217/6213260474_e0e51eeefe_o.png?resize=486%2C110&amp;#038;ssl=1" alt="Compass Home Compass Documentation" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://compass-style.org/">Compass&lt;/a> 是一套 CSS Authoring Framework，也是基於 &lt;a href="http://sass-lang.com/">Sass&lt;/a> 語法的一套 Framework，先前寫了 &lt;a href="http://gulpjs.com/">Gulp&lt;/a> 的 &lt;a href="https://github.com/appleboy/gulp-compass">Compass Plugin&lt;/a>，在針對自動化測試時候出現版本相依性不同，造成無法自動測試成功。自動化測試目前跟 &lt;a href="http://github.com">Github&lt;/a> 最常搭配的就是 &lt;a href="https://travis-ci.org/">Travis CI&lt;/a> 或者是 &lt;a href="https://www.codeship.io/">Codeship&lt;/a>，當然如果非 Open source 專案可能就要自己架設 &lt;a href="http://en.wikipedia.org/wiki/Continuous_integration">CI&lt;/a> 伺服器，個人推薦就是 &lt;a href="http://jenkins-ci.org/">Jenkins&lt;/a>。這次遇到的問題其實跟 Ruby Gem 版本相依性有關，由於要測試 Compass 所有 Command 語法，所以使用了 &lt;a href="http://susy.oddbird.net/">Susy&lt;/a> + sass + compass，如果在 &lt;code>.travis.yml&lt;/code> 內直接寫&lt;/p></description></item><item><title>Jenkins + Apache User Auth</title><link>https://blog.wu-boy.com/2013/12/jenkins-apache-auth-setting/</link><pubDate>Sun, 08 Dec 2013 12:45:16 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/12/jenkins-apache-auth-setting/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/10830034484/" title="jenkins_logo by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm6.staticflickr.com/5507/10830034484_95cba45707.jpg?resize=398%2C128&amp;#038;ssl=1" alt="jenkins_logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>上個月寫過一篇如何設定 &lt;a href="http://nginx.org/" target="_blank">Nginx&lt;/a> + &lt;a href="http://jenkins-ci.org/" target="_blank">Jenkins&lt;/a> 文章，可以參考: &lt;a href="http://blog.wu-boy.com/2013/11/jenkins-nginx-auth/" target="_blank">Jenkins + Nginx User Auth&lt;/a>，這次筆記 Jenkins + &lt;a href="http://httpd.apache.org" target="_blank">Apache&lt;/a> 設定方式&lt;/p></description></item><item><title>Jenkins + Nginx User Auth</title><link>https://blog.wu-boy.com/2013/11/jenkins-nginx-auth/</link><pubDate>Wed, 13 Nov 2013 02:57:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/11/jenkins-nginx-auth/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/10830034484/" title="jenkins_logo by appleboy46, on Flickr">&lt;img src="https://i0.wp.com/farm6.staticflickr.com/5507/10830034484_95cba45707.jpg?resize=398%2C128&amp;#038;ssl=1" alt="jenkins_logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://jenkins-ci.org/" target="_blank">Jenkins CI&lt;/a> 是一套非常好的 Job 執行 Tool，可以幫忙跑專案測試，測試完成後繼續 Deploy 到相對應的伺服器，也可以自動寄信給開發者或者是指定的內部人員。在 &lt;a href="http://www.ubuntu.com/" target="_blank">Ubuntu&lt;/a> 或 &lt;a href="http://www.debian.org/" target="_blank">Debian&lt;/a> 安裝方式非常簡單，按照下述操作就可以簡易架設完成&lt;/p>
&lt;div>
&lt;pre class="brush: bash; title: ; notranslate" title="">$ aptitude -y install openjdk-7-jre openjdk-7-jdk
$ wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
$ sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
$ aptitude -y update
$ aptitude -y install jenkins&lt;/pre>
&lt;/div></description></item></channel></rss>