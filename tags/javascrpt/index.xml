<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScrpt on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</title><link>https://demo.gh.wu-boy.com/tags/javascrpt/</link><description>Recent content in JavaScrpt on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Sun, 22 May 2016 07:51:03 +0000</lastBuildDate><atom:link href="https://demo.gh.wu-boy.com/tags/javascrpt/index.xml" rel="self" type="application/rss+xml"/><item><title>ScaleDrone Websocket 平台從 Node.js 轉換到 Golang</title><link>https://demo.gh.wu-boy.com/2016/05/scaledrone-websocket-from-nodejs-to-go/</link><pubDate>Sun, 22 May 2016 07:51:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2016/05/scaledrone-websocket-from-nodejs-to-go/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080">&lt;img src="https://lh3.googleusercontent.com/jsocHCR9A9yEfDVUTrU0m42_aHhTEVDGW5p5PsQSx7GSlkt3gLjohfXH3S7P7p982332ruU_e-EtW0LwmiuZjvN65VIcyME-zE35C6EM0IV1nqY6KoNw3dwW2djjid3F-T5YgnJothA=w1920-h1080" alt="">&lt;/a>&lt;/p>
&lt;p>又看到一間網路平台公司從 &lt;a href="https://nodejs.org/en/">Node.js&lt;/a> 跳到 &lt;a href="https://golang.org/">Golang&lt;/a> 了。&lt;a href="http://www.scaledrone.com">ScaleDrone&lt;/a> 是一間提供了 &lt;a href="https://en.wikipedia.org/wiki/WebSocket">websocket&lt;/a> 服務的公司，讓 web 可以透過 ScaleDrone 即時將訊息傳播到各種瀏覽器，但是今天看到 ScaleDrone 即將把後端平台使用的語言從 &lt;a href="http://blog.scaledrone.com/posts/nodejs-to-go">Node.js 轉換到 Golang&lt;/a>，為什麼要轉語言呢，官方提到大量的 Websocket 連線，讓伺服器記憶體快吃不消了，然而 ScaleDrone 用 Go 語言來實際測試，發現記憶體不但沒有增加，反而還降低了 response 及 connections 時間。底下是針對 Node.js vs Go 語言轉換比較。&lt;/p></description></item><item><title>6to5 JavaScript Transpiler 重新命名為 Babel</title><link>https://demo.gh.wu-boy.com/2015/02/the-6to5-javascript-transpiler-has-renamed-to-babel/</link><pubDate>Sun, 22 Feb 2015 11:55:09 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2015/02/the-6to5-javascript-transpiler-has-renamed-to-babel/</guid><description>先前寫了一篇 CoffeeScript 轉 ES6，裡面有提到 6to5 專案，此專案幫助開發者可以直接寫 JavaScript ECMAScript 6，該專案則會將 ES6 轉成 ES5，但是目前瀏覽器對於 ES6 的支援度還沒有很高，可以直接參考 ECMAScript 6 compatibility table，但是看到專案名稱 6to5，就會覺得如果之後 ES7 出來，不就要多開一個 7to6 專案，果然官方在 Blog 宣佈將名稱正式轉為 Babeljs。Babel 也會持續使用最新 JavaScript Standard 開發 JavaScript transpiler 相關工具，讓各種平台程式都可以使用。
現在就可以透過 Babel 來開發 ES6
$ npm install --global babel ES6 轉 ES5
$ babel script.js 一些來自 Mozilla, Esprima, jQuery Foundation, Acorn, 6to5, ESLint 組織成員，也合力開了 ESTree，而 Babel 以 ESTree 為基底來開發相關 Tool，所以最新的 Standard 也可以直接參考 ESTree。</description></item><item><title>成立 iojs 台灣群組</title><link>https://demo.gh.wu-boy.com/2015/02/iojs-tw-organization/</link><pubDate>Mon, 09 Feb 2015 03:55:20 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2015/02/iojs-tw-organization/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/15859123853" title="9950313 by Bo-Yi Wu, on Flickr">&lt;img src="https://i2.wp.com/farm8.staticflickr.com/7401/15859123853_d945160802_o.png?resize=200%2C200&amp;#038;ssl=1" alt="9950313" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>昨天在 &lt;a href="https://www.facebook.com/groups/node.js.tw/">node.js 台灣群組&lt;/a>討論&lt;a href="https://www.facebook.com/gniyop/posts/446564002165486">對岸已經成立 iojs-cn&lt;/a>，不多說我們也請官方幫忙成立了 &lt;a href="https://github.com/iojs/iojs-tw">iojs-tw&lt;/a>，目前的工作只有兩項，就是負責將[ iojs 官網]翻譯成中文，這部份 &lt;a href="https://github.com/cfsghost">@cfsghost&lt;/a> 已經&lt;a href="https://github.com/iojs/website/pull/135">送 PR 給官方了&lt;/a>，另外就是翻譯官方的 &lt;a href="https://medium.com/@iojs">Weekly Notes&lt;/a>，iojs 每週五都會發布一篇 iojs 的最新動態，我們就是負責將其中文化，上週五已經翻譯好了請參考如下:&lt;/p></description></item><item><title>前端工程師必看 JavaScript The Right Way</title><link>https://demo.gh.wu-boy.com/2014/01/javascript-the-right-way/</link><pubDate>Sun, 26 Jan 2014 07:43:47 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2014/01/javascript-the-right-way/</guid><description>寫 PHP 的工程師一定知道 PHP The Right Way，現在 JavaScript 也出了 JavaScript The Right Way，不管是新手或者是資深工程師，都值得把裡面提到文章一看再看，此網站包含
JavaScript Code Style The Good Parts Patterns Testing Tools Frameworks Game Engines Reading Who to follow PaaS Providers 網站還提供了新手或老手必讀的文章，像是 Understanding JavaScript OOP, Understanding “Prototypes” in JavaScript 或 Understanding JavaScript Function Invocation and “this”。也有推薦值的購買的書籍，以及免費書籍。</description></item><item><title>jquery-serialize-object 不支援 IE7,8 瀏覽器?</title><link>https://demo.gh.wu-boy.com/2013/11/jquery-serialize-object-no-support-ie7-8-browser/</link><pubDate>Wed, 20 Nov 2013 06:54:03 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2013/11/jquery-serialize-object-no-support-ie7-8-browser/</guid><description>最近專案需求用到 jQuery Serialize Object plugin，它能夠自動將 Form 表單內的值，全部轉成 object 或 json 字串，減少開發者每次都要寫抓取 Form 表單內全部欄位的值。此套件安裝及使用方法都很容易，安裝可以透過 Bower 方式，或者是下載 source code 直接 include 即可，在 IE 7 或 8 為什麼沒辦法使用呢，原因是作者使用了 Array.prototype.forEach，此語法需要 JavaScript 1.6 版本，很抱歉，在 IE8 並不支援 forEach 寫法，所以 Mozilla Javascript 開發者文件內有提供 Compatibility 方法： if (!Array.prototype.forEach) { Array.prototype.forEach = function (fn, scope) { &amp;lsquo;use strict&amp;rsquo;; var i, len; for (i = 0, len = this.length; i &amp;lt; len; ++i) { if (i in this) { fn.call(scope, this[i], i, this); } } }; }[/code] 但是既然這是 jQuery Plugin，就可以透過 jQuery 內建的 each 函式來解決，最後發了 Pull request 給作者，就看作者收不收了 XD</description></item><item><title>將 Backbone Framework 升級到 1.1.0 注意事項</title><link>https://demo.gh.wu-boy.com/2013/11/upgrade-backbone-framework-to-1-1-0-tips/</link><pubDate>Thu, 14 Nov 2013 06:26:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2013/11/upgrade-backbone-framework-to-1-1-0-tips/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/7059615321/" title="backbone by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5338/7059615321_097833dea8.jpg?resize=451%2C80&amp;#038;ssl=1" alt="backbone" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://backbonejs.org/" target="_blank">Backbone.js&lt;/a> 經過了半年終於在 10 月 &lt;a href="http://backbonejs.org/#changelog">Release 了 1.1.0 版本&lt;/a>，這次升級最重要的一點就是，Backbone 本來在 View 有支援 options，讓你可以透過初始化過程，將自定額外的 key 及 value 帶入，並且可以隨時透過 this.options.key 的方式取得資料。直接給例子來解說好了&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">this.example = new Backbone.View.extend({
template_name: "user_edit",
el: "#main"
});&lt;/pre> 上面是宣告 Backbone.view 的寫法，程式設計師可以傳入 object 設定，並且可以在程式任意地方，使用
&lt;p>&lt;strong>&lt;span style="color:green">this.example.options.template_name&lt;/span>&lt;/strong> 方式來得到 &lt;strong>&lt;span style="color:green">user_edit&lt;/span>&lt;/strong> 值，如果是使用 Backbone 1.1.0 之前的版本都沒問題，要升級到 1.1.0，又想要此功能，請務必在 view 的宣告前就必須加一段程式碼(後面解說)。為什麼作者會拿掉呢？因為有開發者發 issue 說&lt;a href="https://github.com/jashkenas/backbone/issues/2458" target="_blank">為什麼 View 有這功能，那 Model 為什麼沒有呢？&lt;/a>，這會讓未來加入開發的程式設計師感到困擾，所以作者就決定拿掉這塊&lt;/p></description></item><item><title>[小技巧] JavaScript Cross Browser Best Practices</title><link>https://demo.gh.wu-boy.com/2013/04/javascript-cross-browser-best-practices/</link><pubDate>Fri, 12 Apr 2013 02:50:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2013/04/javascript-cross-browser-best-practices/</guid><description>&lt;div style="margin: 0 auto; text-align: center;">
&lt;a title="ie-logo-small by appleboy46, on Flickr" href="https://www.flickr.com/photos/appleboy/8443574444/">&lt;img alt="ie-logo-small" src="https://i2.wp.com/farm9.staticflickr.com/8216/8443574444_c01f821c31_m.jpg?resize=240%2C240&amp;#038;ssl=1" data-recalc-dims="1" />&lt;/a>
&lt;/div> 先前寫了一篇
&lt;p>&lt;a href="http://blog.wu-boy.com/2013/02/testing-for-internet-explorer-with-web-page/" target="_blank">modern.IE 的使用方式及介紹&lt;/a>，今天在 &lt;a href="http://Facebook.com" target="_blank">Facebook&lt;/a> 上看到 &lt;a href="https://twitter.com/ericsk" target="_blank">Eric Shangkuan&lt;/a> 說已經有了&lt;a href="http://www.modern.ie/zh-tw" target="_blank">中文介面&lt;/a>，如果你的瀏覽器是中文版，應該就可以直接看到中文介面了，裡面有篇文章非常重要，寫 Web 的工程師都必須注意，那就是 &lt;a href="http://www.modern.ie/zh-tw/cross-browser-best-practices" target="_blank">Cross Browser Best Practices&lt;/a>，這篇文章教您如何撰寫相容於舊版 IE 瀏覽器的一些小技巧，這些技巧也不只用在 IE 上，更是教您在實做 CSS，JavaScript 的注意事項。我們來看看 Javascript 的小技巧。&lt;/p></description></item><item><title>Backbone.js rewrite into CoffeeScript?</title><link>https://demo.gh.wu-boy.com/2013/03/backbone-js-rewrite-into-coffeescript/</link><pubDate>Fri, 01 Mar 2013 13:56:59 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2013/03/backbone-js-rewrite-into-coffeescript/</guid><description>看到 @gsamokovarov 提出將 Backbone.js 改寫成 CoffeeScript 架構的 Pull request，結果官方團隊其中一位開發作者回應了一張圖，代表他的心情 XD，各位有興趣可以點上面連結看看，後來有其他人回應說，為什麼官方不用 CoffeeScript 來寫了，發此 Pull Request 的作者也有說，他只是將架構改成 CoffeeScript 讓大家參考看看而已，沒有真的希望可以納入整個 Backbone.js 專案，如果有其他開發者需要的話，一樣可以 fork 此專案，說明文件也用 docco 產生好了，可以參考此連結，官方作者也提到，大部份的第3方 Library 還是不會使用 CoffeeScript 來當作基底開發，畢竟並非所有人都知道 CoffeeScript，如果官方想這麼開發的話，早就再 2010 年丟釋出 Backbone.js 的時候就直接採用了，不會拖到現在還沒出來，當然最後官方也希望將此 pull request 寫到 wiki 裡面給大家參考，等待原作者補開發動機及細節。</description></item><item><title>台灣第一屆 JavaScript Conference Developer 會議</title><link>https://demo.gh.wu-boy.com/2012/05/the-first-javascript-developer-conference-in-taiwan/</link><pubDate>Mon, 21 May 2012 06:39:43 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2012/05/the-first-javascript-developer-conference-in-taiwan/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;img src="https://i1.wp.com/farm6.staticflickr.com/5454/7238452668_82262e37dc_o.png?w=840&amp;#038;ssl=1" alt="JSDC 2012" data-recalc-dims="1" />
&lt;/div>
&lt;p>自從去年辦了台灣第一屆 &lt;a href="http://phpconf.tw/2011">2011 PHP Conference&lt;/a>，2012年開始又來新的第一屆 &lt;a href="http://jsdc.tw/2012/">Javascript Conference&lt;/a>，在去年的 PHP 會議由於第一次開始舉辦 PHP Conference，所以比較少人投稿，導致議程裡面出現&lt;del>很多&lt;/del> Javascript 議題，這也是很多朋友的疑問 XD。底下來回顧 JSDC 5/19 (六) 個人參加的議程。由於早上差不多10點半才到，所以前兩場議程(Key Note - Ericsk, &lt;a href="http://jsdc.tw/2012/sliders/NodeJSOnWindowsAzure.pptx">Node.JS on Windows Azure&lt;/a>)就沒有聽到了，比較可惜。如果沒去聽現場的，可以到&lt;a href="http://jsdc.tw/2012/Sessions">官方網站下載投影片&lt;/a>參考。&lt;/p></description></item><item><title>jQuery 1.7 透過 on 來綁定事件</title><link>https://demo.gh.wu-boy.com/2012/04/use-on-api-to-attach-event-handlers-on-jquery/</link><pubDate>Wed, 11 Apr 2012 12:49:27 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2012/04/use-on-api-to-attach-event-handlers-on-jquery/</guid><description>&lt;p>既上一篇作者寫了 &lt;a href="http://blog.wu-boy.com/2012/04/backbonejs-framework-tutorial-example-1/" target="_blank">Javascript 前端工具 Backbone.js Framework 初學介紹&lt;/a>，這次來將程式改寫成 jQuery 寫法，藉這個機會來介紹 jQuery 新功能 &lt;a href="http://api.jquery.com/on/" target="_blank">on API&lt;/a>，底下來看看 jQuery event handle 的演進&lt;/p>
&lt;pre class="brush: jscript; title: ; notranslate" title="">//在 jQuery 1.3 以上版本
$(selector).live(events, data, handler);
//在 jQuery 1.4.3 以上版本
$(document).delegate(selector, events, data, handler);
//在 jQuery 1.7 以上版本
$(document).on(events, selector, data, handler);&lt;/pre> 上面三種寫法都可以綁定網頁上全部元件，如果只是單純只是用 click bind event 的話，那只要新增的元件就無法作用，講得有點抽象，底下直接看個例子:</description></item><item><title>jQuery stopPropagation 和 stopImmediatePropagation 比較</title><link>https://demo.gh.wu-boy.com/2012/03/jquery-different-form-stoppropagation-with-stopimmediatepropagation/</link><pubDate>Wed, 28 Mar 2012 09:14:08 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2012/03/jquery-different-form-stoppropagation-with-stopimmediatepropagation/</guid><description>近期在幫公司導入 Backbone.js 技術，把後台全面改寫成 Javascript MVC 架構，技術包含 jQuery + Backbone.js + Underscore.js + Mustache Template，這些技術我想可以寫另外一篇 Backbone.js 初體驗，這邊就先不多說了，在 Backbone.js 的 View 架構裡，可以任意 bind events，程式碼如下:
RT.View = Backbone.View.extend({ initialize: function() { if (this.model) { this.model.bind(&amp;quot;change&amp;quot;, this.render, this); } if (this.collection) { this.collection.bind(&amp;quot;all&amp;quot;, this.render, this); } }, events: { 'click .add': 'add', 'click .edit': 'edit', 'click .delete': 'delete_item', 'click .delete_all': 'delete_all' }, add: function(e) {
}, )};
上面程式碼可以看到，將 click 事件綁在不同 Class 上，但是問題來了，如果同時 new 兩個 RT.</description></item><item><title>PHP function 參數 default value</title><link>https://demo.gh.wu-boy.com/2011/08/php-function-%E5%8F%83%E6%95%B8-default-value/</link><pubDate>Sat, 06 Aug 2011 12:58:55 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2011/08/php-function-%E5%8F%83%E6%95%B8-default-value/</guid><description>2011.08.06 Update: 感謝 jaceju 指正筆誤 自己定義 PHP Function 的時候，假設該函式有1個參數，您可以傳入該參數或者是不傳，但是函式裡面如何判斷是否有傳入該參數呢？先看看底下例子:
function test($arg_1 = NULL)
{
// 判斷 $arg_1 參數是否傳入
$arg_1 = $arg_1 || 'test';
echo $arg_1; } 你會發現上面結果會是 1，而不是 test，大家會懷疑為什麼這樣寫不行呢，那是因為 || 是 boolean operators，他只會 return true 或是 false，而不是回傳 string，如果想這這樣寫，大概可以用 javascript 或 perl 語言來寫，javascript 可以參考之前的文章 [Javascript] 在函數裡設定參數預設值，然而 PHP 的正確寫法要用 ?: 來取代
function test($arg_1 = NULL)
{
// 判斷 $arg_1 參數是否傳入
$arg_1 = (isset($arg_1)) ? $arg_1 : 'test';
// 或者是
$arg_1 = $arg_1 ?</description></item><item><title>你不可不知的 JSON 基本介紹</title><link>https://demo.gh.wu-boy.com/2011/04/%E4%BD%A0%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84-json-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</link><pubDate>Sun, 17 Apr 2011 06:56:53 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2011/04/%E4%BD%A0%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84-json-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</guid><description>&lt;p>還不知道 &lt;a href="http://www.json.org/">JSON&lt;/a> 是什麼嘛？本篇教學會帶您瞭解 JSON 在網站上的應用，以及運作流程跟使用 &lt;a href="http://www.php.net">PHP&lt;/a> 和 &lt;a href="http://zh.wikipedia.org/zh-hant/JavaScript">JavaScript&lt;/a> 來處理 JSON。假如您現在的工作就是網站設計師，相信一定聽過 JSON，但是什麼是 JSON，它能夠做什麼，及您能透過它在網站上做到哪些事情呢？&lt;/p>
&lt;p>透過本篇介紹您可以瞭解基本的 JSON，底下會列出本篇會提到的重點：&lt;/p>
&lt;ul>
&lt;li>什麼是 JSON&lt;/li>
&lt;li>JSON 應用在哪些地方&lt;/li>
&lt;li>如何建立 JSON 字串&lt;/li>
&lt;li>一個簡單的 JSON 範例&lt;/li>
&lt;li>JSON vs XML&lt;/li>
&lt;li>如何透過 PHP 及 JavaScript 使用 JSON&lt;/li>
&lt;/ul>
&lt;h2 id="什麼是-json">什麼是 JSON&lt;/h2>
&lt;p>JSON 是個以純文字為基底去儲存和傳送簡單結構資料，你可以透過特定的格式去儲存任何資料(字串,數字,陣列,物件)，也可以透過物件或陣列來傳送較複雜的資料。一旦建立了您的 JSON 資料，就可以非常簡單的跟其他程式溝通或交換資料，因為 JSON 就只是個純文字格式。&lt;/p>
&lt;p>JSON 的優點如下:&lt;/p>
&lt;ul>
&lt;li>相容性高&lt;/li>
&lt;li>格式容易瞭解，閱讀及修改方便&lt;/li>
&lt;li>支援許多資料格式 (number,string,booleans,nulls,array,associative array)&lt;/li>
&lt;li>許多程式都支援函式庫讀取或修改 JSON 資料&lt;/li>
&lt;/ul></description></item><item><title>利用 jQuery 動態改變網站 CSS</title><link>https://demo.gh.wu-boy.com/2010/10/%E5%88%A9%E7%94%A8-jquery-%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A%E7%B6%B2%E7%AB%99-css/</link><pubDate>Thu, 07 Oct 2010 10:05:49 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2010/10/%E5%88%A9%E7%94%A8-jquery-%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A%E7%B6%B2%E7%AB%99-css/</guid><description>繼前一篇所寫的『jQuery 偵測瀏覽器版本, 作業系統(OS detection)』，當我們遇到手機上網使用者，可以透過 javascript 來判斷目前使用者瀏覽器以及 OS，iPad user agent 如下:
Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10 我們必須分析上面字串來判斷是否用手機上網，手機網頁跟PC網頁大小一定有所不同，透過底下兩個方法來改變瀏覽器的畫面
自動導向手機網頁 動態改變 CSS 兩個方法都不錯，如果決定使用前者，建議在 Server side 那邊做判斷，底下先列出 javascript, PHP, .htaccess 判斷檢查 The JavaScript var isiPad = navigator.userAgent.match(/iPad/i) != null; The PHP $isiPad = (bool) strpos($_SERVER['HTTP_USER_AGENT'],'iPad'); The .htaccess RewriteCond %{HTTP_USER_AGENT} ^.*iPad.*$
RewriteRule ^(.*)$ http://ipad.yourdomain.com [R=301] 如果您在前端做判斷，那就使用 jQuery 方式: if(jQuery){
jQuery("</description></item></channel></rss>