<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Postgres on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</title><link>https://demo.gh.wu-boy.com/tags/postgres/</link><description>Recent content in Postgres on 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Wed, 08 Jul 2020 05:51:39 +0000</lastBuildDate><atom:link href="https://demo.gh.wu-boy.com/tags/postgres/index.xml" rel="self" type="application/rss+xml"/><item><title>用 Postgres 計算員工上下班紀錄</title><link>https://demo.gh.wu-boy.com/2020/07/count-employee-punch-in-out-with-postgres/</link><pubDate>Wed, 08 Jul 2020 05:51:39 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2020/07/count-employee-punch-in-out-with-postgres/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w1920-h1080" title="postgres">&lt;img src="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w400" alt="postgres" title="postgres">&lt;/a>&lt;/p>
&lt;p>這應該算是一個蠻簡單的情境，公司都需要去紀錄每位員工上下班紀錄，或者是紀錄每天刷卡補助餐點，在一定的時間內刷卡才會進行公司補助，非在約定的時間點刷卡則不補助，底下看看公司可能會想要的表格紀錄。在後台頁面會進行時間區域的選擇。&lt;/p>
&lt;blockquote>
&lt;p>起始日期: 2020-06-01 結束日期: 2020-06-30 早上時間: 08:00 ~ 09:00 晚上時間: 18:00 ~ 19:00&lt;/p>
&lt;/blockquote></description></item><item><title>將 Postgres 資料轉換到 CSV 格式</title><link>https://demo.gh.wu-boy.com/2020/06/convert-postgres-data-to-csv-file/</link><pubDate>Mon, 29 Jun 2020 04:12:50 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2020/06/convert-postgres-data-to-csv-file/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w1920-h1080" title="postgres">&lt;img src="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w400" alt="postgres" title="postgres">&lt;/a>&lt;/p>
&lt;p>時常用到 &lt;a href="https://www.postgresql.org/" title="Postgres">Postgres&lt;/a> 轉換資料的功能，來即時協助 PM 了解目前使用者實際狀況，底下紀錄常用的指令。首先安裝 Postgres 環境，這邊其實就是用 Docker 方式來啟動一個全新的 Postgres DB。&lt;/p>
&lt;pre>&lt;code class="language-yaml"> db:
image: postgres:12
restart: always
volumes:
- pg-data:/var/lib/postgresql/data
logging:
options:
max-size: "100k"
max-file: "3"
environment:
POSTGRES_USER: db
POSTGRES_DB: db
POSTGRES_PASSWORD: db&lt;/code>&lt;/pre>
&lt;p>上面的 &lt;code>environment&lt;/code> 參數可以自由調整，接著透過 &lt;code>docker-compose up -d&lt;/code> 來啟動資料庫進行 App 串接。&lt;/p></description></item><item><title>[SQL] 如何從單一資料表取得每個 key 前 n 筆資料</title><link>https://demo.gh.wu-boy.com/2020/02/how-to-select-top-n-rows-from-each-key-in-sql/</link><pubDate>Sat, 01 Feb 2020 13:38:24 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2020/02/how-to-select-top-n-rows-from-each-key-in-sql/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/TPxdqjL5VJkLQ0FQASqErBaBMi8w6uyPZLGEQ-s6ZX9_6-JMF21n5uD6CZyc_kJ31ZTBlyevmKsjYrIZK0Ts61eqd93wqsmx66uvSVhGn4JKAWb6i_1_ClO_j4G8NQ-pR31QRrqtgu4=w1920-h1080" title="postgres">&lt;img src="https://lh3.googleusercontent.com/TPxdqjL5VJkLQ0FQASqErBaBMi8w6uyPZLGEQ-s6ZX9_6-JMF21n5uD6CZyc_kJ31ZTBlyevmKsjYrIZK0Ts61eqd93wqsmx66uvSVhGn4JKAWb6i_1_ClO_j4G8NQ-pR31QRrqtgu4=w1920-h1080" alt="postgres" title="postgres">&lt;/a>&lt;/p>
&lt;p>最近專案需求需要實現單筆資料的版本控制，所以會有一張表 (foo) 專門儲存 key 資料，而有另外一張表 (bar) 專門存 Data 資料，那在 bar 這張表怎麼拿到全部 key 的最新版本資料？底下先看看 schema 範例&lt;/p></description></item><item><title>在 PostgreSQL 時區轉換及計算時間</title><link>https://demo.gh.wu-boy.com/2018/09/converting-timestamp-to-timestamp-in-a-specific-time-zone-in-postgres/</link><pubDate>Sun, 02 Sep 2018 07:51:57 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2018/09/converting-timestamp-to-timestamp-in-a-specific-time-zone-in-postgres/</guid><description>&lt;p>&lt;a href="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w1920-h1080" title="postgres">&lt;img src="https://lh3.googleusercontent.com/vbqq3rLa3xH1e2c1snKm4u0hhkm4mYaT7IRpVBQC22AYa_9xbzuCois2EXQT7-RvZNofhz2TJpz0-Wlfrs870jAn3fyfove-6uF_I8cSe89jI-zmq8BQ2XQS1_hRZJN5587iNVG6pvY=w400" alt="postgres" title="postgres">&lt;/a>&lt;/p>
&lt;p>通常在使用資料表時，都會在每一筆紀錄上面寫入當下時間，而這個時間會根據目前系統所在的時區而有所不同，當然我們都會使用 &lt;code>UTC+0&lt;/code> 作為標準時區，而欄位我們則會是使用 timestamp 或者是 unix time 格式，兩者最大的差異就是在前者 (timestamp) 會根據目前系統的時區來記錄，而後者 (unix time) 則是紀錄秒數差異 (Jan 01 1970) 而不會隨著系統時區改變而變化。如果是發展開源專案，則會使用後者居多，這樣不會因為使用者時區變化，而產生不同的差異，在 &lt;a href="https://gitea.io">Gitea 開源專案&lt;/a>保留了兩者，但是只要計算時間則是用 (unix time) 作轉換。&lt;/p></description></item><item><title>在 Docker 偵測 MySQL 或 Postgres 是否啟動</title><link>https://demo.gh.wu-boy.com/2016/06/server-monitoring-mysql-postgres-daemon-in-docker/</link><pubDate>Sat, 11 Jun 2016 08:42:23 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://demo.gh.wu-boy.com/2016/06/server-monitoring-mysql-postgres-daemon-in-docker/</guid><description>&lt;p>&lt;a title="Screen Shot 2016-06-11 at 6.58.22 PM" href="https://www.flickr.com/photos/appleboy/27525281071/in/dateposted-public/" data-flickr-embed="true">&lt;img src="https://i2.wp.com/c2.staticflickr.com/8/7626/27525281071_50bc0dec77_o.png?resize=591%2C580&amp;#038;ssl=1" alt="Screen Shot 2016-06-11 at 6.58.22 PM" data-recalc-dims="1" />&lt;/a>&lt;/p>
&lt;p>監控 Service 是否存活也是 &lt;a href="http://www.ithome.com.tw/news/96861">DevOps&lt;/a> 重要的一環，此篇來紀錄在 &lt;a href="https://www.docker.com/">Docker&lt;/a> 內偵測 &lt;a href="https://www.mysql.com/">MySQL&lt;/a> 或 &lt;a href="https://www.postgresql.org/">Postgres&lt;/a> 是否已經啟動。在 Docker 自動測試內，其中一步就是建立 Database 環境，底下為測試步驟:&lt;/p></description></item></channel></rss>