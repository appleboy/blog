<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MyISAM on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/myisam/</link><description>Recent content in MyISAM on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Fri, 05 Apr 2013 02:20:22 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/myisam/feed.xml" rel="self" type="application/rss+xml"/><item><title>MySQL 用 MySQLDump 備份 InnoDB 注意事項</title><link>https://blog.wu-boy.com/2013/04/best-mysqldump-innodb-data/</link><pubDate>Fri, 05 Apr 2013 02:20:22 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2013/04/best-mysqldump-innodb-data/</guid><description>大家在備份 MySQL 資料庫時一定是使 mysqldump 指令，不管是 MyISAM 或 InnoDB 都一樣， 在處理 InnoDB 格式備份時使用 mysqldump -single-transaction，但是你會發現在大多的備份狀況都是 OK 的，只是有時候會發現有的資料表只有備份到 structure 而無備份到 Data？ 在 MySQL Performance Blog 看到這篇講解 Best kept MySQLDump Secret，此問題出在 how MySQL’s Transactions work with DDL，ALTER TABLE 會建立一個 temporary table，並且將該資料表資料複製過去，接著刪除原有資料表，最後將 temporary table 命名為原來資料表。 底下是原作者提到的原因
How does data visibility works in this case ? DDLs are not transactional and as such the running transaction will not see the contents of old table once it is dropped, transaction also will see the new table which was created after transaction was started, including table created by ALTER TABLE statement.</description></item><item><title>MySQL 預設儲存引擎: InnoDB 介紹</title><link>https://blog.wu-boy.com/2012/11/innodb-as-the-default-mysql-storage-engine/</link><pubDate>Sat, 10 Nov 2012 09:00:02 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2012/11/innodb-as-the-default-mysql-storage-engine/</guid><description>&lt;div style="margin:0 auto; text-align:center">
&lt;a href="https://www.flickr.com/photos/appleboy/8171305355/" title="mysql_logo by appleboy46, on Flickr">&lt;img src="https://i1.wp.com/farm9.staticflickr.com/8488/8171305355_7fb578fdc9.jpg?resize=489%2C253&amp;#038;ssl=1" alt="mysql_logo" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>&lt;a href="http://www.mysql.com" target="_blank">MySQL&lt;/a> 是一套眾所皆知的 Database System，今天來簡介 &lt;a href="http://dev.mysql.com/doc/refman/5.5/en/myisam-storage-engine.html" target="_blank">InnoDB&lt;/a> 儲存引擎，在 MySQL 5.5.5 之前預設的儲存引擎是 &lt;a href="https://dev.mysql.com/doc/refman/5.5/en/myisam-storage-engine.html" target="_blank">MyISAM&lt;/a>，但是為什麼在 5.5 之後官方要將預設儲存引擎換成 InnoDB 呢？大家都知道 InnoDB 用來交易管理非常方便，因為 InnoDB 透過 row lock，相對於 &lt;a href="http://dev.mysql.com/doc/refman/5.5/en/myisam-storage-engine.html" target="_blank">MyISAM&lt;/a> 透過 table lock 來的有效率，也避免大量寫入的時候，造成無法讀取資料，這就是 row lock 的優勢，當然用 InnoDB 最主要的原因還有 Full-text search indexes 功能，但是別擔心 MySQL 5.6.4 之後(含此版本) InnoDB 開始支援 Full-text search 功能，另外在使用 MyISAM 時候，如果資料突然出問題，還必須使用 &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/binary-log.html" target="_blank">MySQL Binary Log&lt;/a> 來恢復資料，如果用 InnoDB 這就沒關係了。大家還在用 MyISAM 嘛？開始升級伺服器，一起體驗 InnoDB 的功能，如果已經上線很久的網站，作者不建議轉換，因為可能會遇到很多雷。&lt;/p></description></item></channel></rss>