<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Webpack on 小惡魔 - AppleBOY</title><link>https://blog.wu-boy.com/tags/webpack/</link><description>Recent content in Webpack on 小惡魔 - AppleBOY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>appleboy.tw@gmail.com (Appleboy)</managingEditor><webMaster>appleboy.tw@gmail.com (Appleboy)</webMaster><lastBuildDate>Thu, 31 Dec 2015 01:26:39 +0000</lastBuildDate><atom:link href="https://blog.wu-boy.com/tags/webpack/feed.xml" rel="self" type="application/rss+xml"/><item><title>TJ 的新作品 frontend boilerplate 前端工具整合</title><link>https://blog.wu-boy.com/2015/12/tj-frontend-boilerplate/</link><pubDate>Thu, 31 Dec 2015 01:26:39 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/12/tj-frontend-boilerplate/</guid><description>今天突然看到 TJ 開了一個新 Repo 是 frontend boilerplate 嚇到我了，自從 TJ 去年發表要轉向 Go 之後，就把他自己很多的 Node.js Project 轉給其他人維護，也漸漸沒在 Github 上面活動，但是今天又看到她整理了一份 frontend boilerplate，內容含了現代流行的前端開發工具，大家可以參考看看，是個不錯的 Template:
Webpack React Redux Babel Autoprefixer PostCSS CSS modules Rucksack Hot reloading Redux router Redux effects TodoMVC example 期待 TJ 能有其他新作品啊。</description></item><item><title>JavaScript in 2015</title><link>https://blog.wu-boy.com/2015/09/javascript-in-2015/</link><pubDate>Wed, 09 Sep 2015 06:40:41 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/09/javascript-in-2015/</guid><description>&lt;div style="margin:0 auto; text-align:center">
 &lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/21271865261/in/datetaken-public/" title="Screen Shot 2015-09-09 at 2.03.34 PM">&lt;img src="https://i2.wp.com/farm6.staticflickr.com/5834/21271865261_3f445489d7_n.jpg?resize=320%2C195&amp;#038;ssl=1" alt="Screen Shot 2015-09-09 at 2.03.34 PM" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>在這幾年的趨勢看來，&lt;a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript">JavaScript&lt;/a> 已經環繞在各領域了，不管在 Web 前端或後端，上層或下層，都充滿了 JavaScript，其實都是托 &lt;a href="https://nodejs.org/en/">Node.js&lt;/a> 的福，網路上看到這篇 &lt;a href="http://survivejs.github.io/frontend-in-2015/">JavaScript in 2015&lt;/a>，裡面講到 JavaScript 所有的工具，不管前端到後端，每一年都有新的工具跟新的 Framework，從以前寫 &lt;a href="http://backbonejs.org/">Backbone&lt;/a> 到 &lt;a href="https://angularjs.org/">Angular.js&lt;/a> 到現在 &lt;a href="http://facebook.github.io/react/">React.js&lt;/a> 改變了整個 JavaScript View 的生態，工具流程整合從 &lt;a href="http://gruntjs.com/">Grunt.js&lt;/a> 到 &lt;a href="http://gulpjs.com/">Gulp.js&lt;/a> 的出現，整個生態又轉換了，大家陸續將工具全都轉到 Gulp，最後又出來一套 &lt;a href="https://webpack.github.io/">Webpack&lt;/a>，Webpack 出現基本上不會影響 gulp 發展，因為 Webpack 還是有很多限制，在前端或後端在上 Production 前的一些流程像是 copy 檔案等，這些是 webpack 無法整合的，看到這些工具一一出現，也不知道明年或現在會不會又跑出一套新的玩具，讓整個 JavaScript 生態整個改變。寫上層的同時，看到同事在寫底層，同事就會跑過來拍拍我肩膀說：『好險我是搞 Kernel，搞上層就要跟你們一樣天天追新技術，永遠沒有停止的一天』。看一下全世界 Job Trends&lt;/p></description></item><item><title>Facebook React Jest 搭配 Webpack 測試</title><link>https://blog.wu-boy.com/2015/08/facebook-react-jest-with-webpack/</link><pubDate>Tue, 11 Aug 2015 03:31:58 +0000</pubDate><author>appleboy.tw@gmail.com (Appleboy)</author><guid>https://blog.wu-boy.com/2015/08/facebook-react-jest-with-webpack/</guid><description>&lt;div style="margin:0 auto; text-align:center">
 &lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/appleboy/19850322514/in/dateposted-public/" title="logo_og">&lt;img src="https://i2.wp.com/farm1.staticflickr.com/462/19850322514_1f88fd5d6c_n.jpg?resize=320%2C320&amp;#038;ssl=1" alt="logo_og" data-recalc-dims="1" />&lt;/a>
&lt;/div>
&lt;p>寫 &lt;a href="http://facebook.github.io/react/">Facebook React&lt;/a> 就是要搭配 &lt;a href="https://webpack.github.io/">Webpack&lt;/a>，Webpack 已經是前端開發的必備工具，要測試 React Component 就是要用 Facebook 開發的 &lt;a href="http://facebook.github.io/jest/">Jest 框架&lt;/a>，使用 Webpack 也許會搭配 &lt;a href="http://lesscss.org/">Less&lt;/a> or &lt;a href="http://sass-lang.com/">Sass&lt;/a> Loader 讓每個 component 都可以獨立有 CSS 檔案。要在 JS 內直接引入 CSS 檔案寫法如下&lt;/p>
&lt;div>
 &lt;pre class="brush: jscript; title: ; notranslate" title="">import '!style!css!less!./Schedule.less';
import React, { Component } from 'react';&lt;/pre>
&lt;/div></description></item></channel></rss>